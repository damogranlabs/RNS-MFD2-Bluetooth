ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32l1xx_it.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.NMI_Handler,"ax",%progbits
  16              		.align	1
  17              		.global	NMI_Handler
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	NMI_Handler:
  25              	.LFB832:
  26              		.file 1 "Core/Src/stm32l1xx_it.c"
   1:Core/Src/stm32l1xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32l1xx_it.c **** /**
   3:Core/Src/stm32l1xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32l1xx_it.c ****   * @file    stm32l1xx_it.c
   5:Core/Src/stm32l1xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32l1xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32l1xx_it.c ****   * @attention
   8:Core/Src/stm32l1xx_it.c ****   *
   9:Core/Src/stm32l1xx_it.c ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Core/Src/stm32l1xx_it.c ****   * All rights reserved.</center></h2>
  11:Core/Src/stm32l1xx_it.c ****   *
  12:Core/Src/stm32l1xx_it.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/stm32l1xx_it.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/stm32l1xx_it.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/stm32l1xx_it.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/stm32l1xx_it.c ****   *
  17:Core/Src/stm32l1xx_it.c ****   ******************************************************************************
  18:Core/Src/stm32l1xx_it.c ****   */
  19:Core/Src/stm32l1xx_it.c **** /* USER CODE END Header */
  20:Core/Src/stm32l1xx_it.c **** 
  21:Core/Src/stm32l1xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/stm32l1xx_it.c **** #include "main.h"
  23:Core/Src/stm32l1xx_it.c **** #include "stm32l1xx_it.h"
  24:Core/Src/stm32l1xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/stm32l1xx_it.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/stm32l1xx_it.c **** #include "uart_print_user.h"
  27:Core/Src/stm32l1xx_it.c **** #include "mfd_io.h"
  28:Core/Src/stm32l1xx_it.c **** #include "io.h"
  29:Core/Src/stm32l1xx_it.c **** /* USER CODE END Includes */
  30:Core/Src/stm32l1xx_it.c **** 
  31:Core/Src/stm32l1xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  32:Core/Src/stm32l1xx_it.c **** /* USER CODE BEGIN TD */
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 2


  33:Core/Src/stm32l1xx_it.c **** /* USER CODE END TD */
  34:Core/Src/stm32l1xx_it.c **** 
  35:Core/Src/stm32l1xx_it.c **** /* Private define ------------------------------------------------------------*/
  36:Core/Src/stm32l1xx_it.c **** /* USER CODE BEGIN PD */
  37:Core/Src/stm32l1xx_it.c ****  
  38:Core/Src/stm32l1xx_it.c **** /* USER CODE END PD */
  39:Core/Src/stm32l1xx_it.c **** 
  40:Core/Src/stm32l1xx_it.c **** /* Private macro -------------------------------------------------------------*/
  41:Core/Src/stm32l1xx_it.c **** /* USER CODE BEGIN PM */
  42:Core/Src/stm32l1xx_it.c **** 
  43:Core/Src/stm32l1xx_it.c **** /* USER CODE END PM */
  44:Core/Src/stm32l1xx_it.c **** 
  45:Core/Src/stm32l1xx_it.c **** /* Private variables ---------------------------------------------------------*/
  46:Core/Src/stm32l1xx_it.c **** /* USER CODE BEGIN PV */
  47:Core/Src/stm32l1xx_it.c **** uint32_t sysTickCount = 0;
  48:Core/Src/stm32l1xx_it.c **** 
  49:Core/Src/stm32l1xx_it.c **** /* USER CODE END PV */
  50:Core/Src/stm32l1xx_it.c **** 
  51:Core/Src/stm32l1xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  52:Core/Src/stm32l1xx_it.c **** /* USER CODE BEGIN PFP */
  53:Core/Src/stm32l1xx_it.c **** 
  54:Core/Src/stm32l1xx_it.c **** /* USER CODE END PFP */
  55:Core/Src/stm32l1xx_it.c **** 
  56:Core/Src/stm32l1xx_it.c **** /* Private user code ---------------------------------------------------------*/
  57:Core/Src/stm32l1xx_it.c **** /* USER CODE BEGIN 0 */
  58:Core/Src/stm32l1xx_it.c **** 
  59:Core/Src/stm32l1xx_it.c **** /* USER CODE END 0 */
  60:Core/Src/stm32l1xx_it.c **** 
  61:Core/Src/stm32l1xx_it.c **** /* External variables --------------------------------------------------------*/
  62:Core/Src/stm32l1xx_it.c **** 
  63:Core/Src/stm32l1xx_it.c **** /* USER CODE BEGIN EV */
  64:Core/Src/stm32l1xx_it.c **** 
  65:Core/Src/stm32l1xx_it.c **** /* USER CODE END EV */
  66:Core/Src/stm32l1xx_it.c **** 
  67:Core/Src/stm32l1xx_it.c **** /******************************************************************************/
  68:Core/Src/stm32l1xx_it.c **** /*           Cortex-M3 Processor Interruption and Exception Handlers          */ 
  69:Core/Src/stm32l1xx_it.c **** /******************************************************************************/
  70:Core/Src/stm32l1xx_it.c **** /**
  71:Core/Src/stm32l1xx_it.c ****   * @brief This function handles Non maskable interrupt.
  72:Core/Src/stm32l1xx_it.c ****   */
  73:Core/Src/stm32l1xx_it.c **** void NMI_Handler(void)
  74:Core/Src/stm32l1xx_it.c **** {
  27              		.loc 1 74 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  75:Core/Src/stm32l1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  76:Core/Src/stm32l1xx_it.c **** 
  77:Core/Src/stm32l1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  78:Core/Src/stm32l1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  79:Core/Src/stm32l1xx_it.c **** 
  80:Core/Src/stm32l1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  81:Core/Src/stm32l1xx_it.c **** }
  32              		.loc 1 81 1 view .LVU1
  33 0000 7047     		bx	lr
  34              		.cfi_endproc
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 3


  35              	.LFE832:
  37              		.section	.text.HardFault_Handler,"ax",%progbits
  38              		.align	1
  39              		.global	HardFault_Handler
  40              		.syntax unified
  41              		.thumb
  42              		.thumb_func
  43              		.fpu softvfp
  45              	HardFault_Handler:
  46              	.LFB833:
  82:Core/Src/stm32l1xx_it.c **** 
  83:Core/Src/stm32l1xx_it.c **** /**
  84:Core/Src/stm32l1xx_it.c ****   * @brief This function handles Hard fault interrupt.
  85:Core/Src/stm32l1xx_it.c ****   */
  86:Core/Src/stm32l1xx_it.c **** void HardFault_Handler(void)
  87:Core/Src/stm32l1xx_it.c **** {
  47              		.loc 1 87 1 view -0
  48              		.cfi_startproc
  49              		@ Volatile: function does not return.
  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52              		@ link register save eliminated.
  53              	.L3:
  88:Core/Src/stm32l1xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  89:Core/Src/stm32l1xx_it.c **** 
  90:Core/Src/stm32l1xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  91:Core/Src/stm32l1xx_it.c ****   while (1)
  54              		.loc 1 91 3 discriminator 1 view .LVU3
  92:Core/Src/stm32l1xx_it.c ****   {
  93:Core/Src/stm32l1xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  94:Core/Src/stm32l1xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  95:Core/Src/stm32l1xx_it.c ****   }
  55              		.loc 1 95 3 discriminator 1 view .LVU4
  56 0000 FEE7     		b	.L3
  57              		.cfi_endproc
  58              	.LFE833:
  60              		.section	.text.MemManage_Handler,"ax",%progbits
  61              		.align	1
  62              		.global	MemManage_Handler
  63              		.syntax unified
  64              		.thumb
  65              		.thumb_func
  66              		.fpu softvfp
  68              	MemManage_Handler:
  69              	.LFB834:
  96:Core/Src/stm32l1xx_it.c **** }
  97:Core/Src/stm32l1xx_it.c **** 
  98:Core/Src/stm32l1xx_it.c **** /**
  99:Core/Src/stm32l1xx_it.c ****   * @brief This function handles Memory management fault.
 100:Core/Src/stm32l1xx_it.c ****   */
 101:Core/Src/stm32l1xx_it.c **** void MemManage_Handler(void)
 102:Core/Src/stm32l1xx_it.c **** {
  70              		.loc 1 102 1 view -0
  71              		.cfi_startproc
  72              		@ Volatile: function does not return.
  73              		@ args = 0, pretend = 0, frame = 0
  74              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 4


  75              		@ link register save eliminated.
  76              	.L5:
 103:Core/Src/stm32l1xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 104:Core/Src/stm32l1xx_it.c **** 
 105:Core/Src/stm32l1xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 106:Core/Src/stm32l1xx_it.c ****   while (1)
  77              		.loc 1 106 3 discriminator 1 view .LVU6
 107:Core/Src/stm32l1xx_it.c ****   {
 108:Core/Src/stm32l1xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 109:Core/Src/stm32l1xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 110:Core/Src/stm32l1xx_it.c ****   }
  78              		.loc 1 110 3 discriminator 1 view .LVU7
  79 0000 FEE7     		b	.L5
  80              		.cfi_endproc
  81              	.LFE834:
  83              		.section	.text.BusFault_Handler,"ax",%progbits
  84              		.align	1
  85              		.global	BusFault_Handler
  86              		.syntax unified
  87              		.thumb
  88              		.thumb_func
  89              		.fpu softvfp
  91              	BusFault_Handler:
  92              	.LFB835:
 111:Core/Src/stm32l1xx_it.c **** }
 112:Core/Src/stm32l1xx_it.c **** 
 113:Core/Src/stm32l1xx_it.c **** /**
 114:Core/Src/stm32l1xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 115:Core/Src/stm32l1xx_it.c ****   */
 116:Core/Src/stm32l1xx_it.c **** void BusFault_Handler(void)
 117:Core/Src/stm32l1xx_it.c **** {
  93              		.loc 1 117 1 view -0
  94              		.cfi_startproc
  95              		@ Volatile: function does not return.
  96              		@ args = 0, pretend = 0, frame = 0
  97              		@ frame_needed = 0, uses_anonymous_args = 0
  98              		@ link register save eliminated.
  99              	.L7:
 118:Core/Src/stm32l1xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 119:Core/Src/stm32l1xx_it.c **** 
 120:Core/Src/stm32l1xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 121:Core/Src/stm32l1xx_it.c ****   while (1)
 100              		.loc 1 121 3 discriminator 1 view .LVU9
 122:Core/Src/stm32l1xx_it.c ****   {
 123:Core/Src/stm32l1xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 124:Core/Src/stm32l1xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 125:Core/Src/stm32l1xx_it.c ****   }
 101              		.loc 1 125 3 discriminator 1 view .LVU10
 102 0000 FEE7     		b	.L7
 103              		.cfi_endproc
 104              	.LFE835:
 106              		.section	.text.UsageFault_Handler,"ax",%progbits
 107              		.align	1
 108              		.global	UsageFault_Handler
 109              		.syntax unified
 110              		.thumb
 111              		.thumb_func
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 5


 112              		.fpu softvfp
 114              	UsageFault_Handler:
 115              	.LFB836:
 126:Core/Src/stm32l1xx_it.c **** }
 127:Core/Src/stm32l1xx_it.c **** 
 128:Core/Src/stm32l1xx_it.c **** /**
 129:Core/Src/stm32l1xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 130:Core/Src/stm32l1xx_it.c ****   */
 131:Core/Src/stm32l1xx_it.c **** void UsageFault_Handler(void)
 132:Core/Src/stm32l1xx_it.c **** {
 116              		.loc 1 132 1 view -0
 117              		.cfi_startproc
 118              		@ Volatile: function does not return.
 119              		@ args = 0, pretend = 0, frame = 0
 120              		@ frame_needed = 0, uses_anonymous_args = 0
 121              		@ link register save eliminated.
 122              	.L9:
 133:Core/Src/stm32l1xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 134:Core/Src/stm32l1xx_it.c **** 
 135:Core/Src/stm32l1xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 136:Core/Src/stm32l1xx_it.c ****   while (1)
 123              		.loc 1 136 3 discriminator 1 view .LVU12
 137:Core/Src/stm32l1xx_it.c ****   {
 138:Core/Src/stm32l1xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 139:Core/Src/stm32l1xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 140:Core/Src/stm32l1xx_it.c ****   }
 124              		.loc 1 140 3 discriminator 1 view .LVU13
 125 0000 FEE7     		b	.L9
 126              		.cfi_endproc
 127              	.LFE836:
 129              		.section	.text.SVC_Handler,"ax",%progbits
 130              		.align	1
 131              		.global	SVC_Handler
 132              		.syntax unified
 133              		.thumb
 134              		.thumb_func
 135              		.fpu softvfp
 137              	SVC_Handler:
 138              	.LFB837:
 141:Core/Src/stm32l1xx_it.c **** }
 142:Core/Src/stm32l1xx_it.c **** 
 143:Core/Src/stm32l1xx_it.c **** /**
 144:Core/Src/stm32l1xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 145:Core/Src/stm32l1xx_it.c ****   */
 146:Core/Src/stm32l1xx_it.c **** void SVC_Handler(void)
 147:Core/Src/stm32l1xx_it.c **** {
 139              		.loc 1 147 1 view -0
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 0
 142              		@ frame_needed = 0, uses_anonymous_args = 0
 143              		@ link register save eliminated.
 148:Core/Src/stm32l1xx_it.c ****   /* USER CODE BEGIN SVC_IRQn 0 */
 149:Core/Src/stm32l1xx_it.c **** 
 150:Core/Src/stm32l1xx_it.c ****   /* USER CODE END SVC_IRQn 0 */
 151:Core/Src/stm32l1xx_it.c ****   /* USER CODE BEGIN SVC_IRQn 1 */
 152:Core/Src/stm32l1xx_it.c **** 
 153:Core/Src/stm32l1xx_it.c ****   /* USER CODE END SVC_IRQn 1 */
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 6


 154:Core/Src/stm32l1xx_it.c **** }
 144              		.loc 1 154 1 view .LVU15
 145 0000 7047     		bx	lr
 146              		.cfi_endproc
 147              	.LFE837:
 149              		.section	.text.DebugMon_Handler,"ax",%progbits
 150              		.align	1
 151              		.global	DebugMon_Handler
 152              		.syntax unified
 153              		.thumb
 154              		.thumb_func
 155              		.fpu softvfp
 157              	DebugMon_Handler:
 158              	.LFB838:
 155:Core/Src/stm32l1xx_it.c **** 
 156:Core/Src/stm32l1xx_it.c **** /**
 157:Core/Src/stm32l1xx_it.c ****   * @brief This function handles Debug monitor.
 158:Core/Src/stm32l1xx_it.c ****   */
 159:Core/Src/stm32l1xx_it.c **** void DebugMon_Handler(void)
 160:Core/Src/stm32l1xx_it.c **** {
 159              		.loc 1 160 1 view -0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 0
 162              		@ frame_needed = 0, uses_anonymous_args = 0
 163              		@ link register save eliminated.
 161:Core/Src/stm32l1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 162:Core/Src/stm32l1xx_it.c **** 
 163:Core/Src/stm32l1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 164:Core/Src/stm32l1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 165:Core/Src/stm32l1xx_it.c **** 
 166:Core/Src/stm32l1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 167:Core/Src/stm32l1xx_it.c **** }
 164              		.loc 1 167 1 view .LVU17
 165 0000 7047     		bx	lr
 166              		.cfi_endproc
 167              	.LFE838:
 169              		.section	.text.PendSV_Handler,"ax",%progbits
 170              		.align	1
 171              		.global	PendSV_Handler
 172              		.syntax unified
 173              		.thumb
 174              		.thumb_func
 175              		.fpu softvfp
 177              	PendSV_Handler:
 178              	.LFB839:
 168:Core/Src/stm32l1xx_it.c **** 
 169:Core/Src/stm32l1xx_it.c **** /**
 170:Core/Src/stm32l1xx_it.c ****   * @brief This function handles Pendable request for system service.
 171:Core/Src/stm32l1xx_it.c ****   */
 172:Core/Src/stm32l1xx_it.c **** void PendSV_Handler(void)
 173:Core/Src/stm32l1xx_it.c **** {
 179              		.loc 1 173 1 view -0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183              		@ link register save eliminated.
 174:Core/Src/stm32l1xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 7


 175:Core/Src/stm32l1xx_it.c **** 
 176:Core/Src/stm32l1xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 177:Core/Src/stm32l1xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 178:Core/Src/stm32l1xx_it.c **** 
 179:Core/Src/stm32l1xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 180:Core/Src/stm32l1xx_it.c **** }
 184              		.loc 1 180 1 view .LVU19
 185 0000 7047     		bx	lr
 186              		.cfi_endproc
 187              	.LFE839:
 189              		.section	.text.SysTick_Handler,"ax",%progbits
 190              		.align	1
 191              		.global	SysTick_Handler
 192              		.syntax unified
 193              		.thumb
 194              		.thumb_func
 195              		.fpu softvfp
 197              	SysTick_Handler:
 198              	.LFB840:
 181:Core/Src/stm32l1xx_it.c **** 
 182:Core/Src/stm32l1xx_it.c **** /**
 183:Core/Src/stm32l1xx_it.c ****   * @brief This function handles System tick timer.
 184:Core/Src/stm32l1xx_it.c ****   */
 185:Core/Src/stm32l1xx_it.c **** void SysTick_Handler(void)
 186:Core/Src/stm32l1xx_it.c **** {
 199              		.loc 1 186 1 view -0
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 0
 202              		@ frame_needed = 0, uses_anonymous_args = 0
 203              		@ link register save eliminated.
 187:Core/Src/stm32l1xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 188:Core/Src/stm32l1xx_it.c ****   sysTickCount++;
 204              		.loc 1 188 3 view .LVU21
 205              		.loc 1 188 15 is_stmt 0 view .LVU22
 206 0000 024A     		ldr	r2, .L14
 207 0002 1368     		ldr	r3, [r2]
 208 0004 0133     		adds	r3, r3, #1
 209 0006 1360     		str	r3, [r2]
 189:Core/Src/stm32l1xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 190:Core/Src/stm32l1xx_it.c ****   
 191:Core/Src/stm32l1xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 192:Core/Src/stm32l1xx_it.c **** 
 193:Core/Src/stm32l1xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 194:Core/Src/stm32l1xx_it.c **** }
 210              		.loc 1 194 1 view .LVU23
 211 0008 7047     		bx	lr
 212              	.L15:
 213 000a 00BF     		.align	2
 214              	.L14:
 215 000c 00000000 		.word	.LANCHOR0
 216              		.cfi_endproc
 217              	.LFE840:
 219              		.section	.text.EXTI4_IRQHandler,"ax",%progbits
 220              		.align	1
 221              		.global	EXTI4_IRQHandler
 222              		.syntax unified
 223              		.thumb
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 8


 224              		.thumb_func
 225              		.fpu softvfp
 227              	EXTI4_IRQHandler:
 228              	.LFB841:
 195:Core/Src/stm32l1xx_it.c **** 
 196:Core/Src/stm32l1xx_it.c **** /******************************************************************************/
 197:Core/Src/stm32l1xx_it.c **** /* STM32L1xx Peripheral Interrupt Handlers                                    */
 198:Core/Src/stm32l1xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 199:Core/Src/stm32l1xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 200:Core/Src/stm32l1xx_it.c **** /* please refer to the startup file (startup_stm32l1xx.s).                    */
 201:Core/Src/stm32l1xx_it.c **** /******************************************************************************/
 202:Core/Src/stm32l1xx_it.c **** 
 203:Core/Src/stm32l1xx_it.c **** /**
 204:Core/Src/stm32l1xx_it.c ****   * @brief This function handles EXTI line4 interrupt.
 205:Core/Src/stm32l1xx_it.c ****   */
 206:Core/Src/stm32l1xx_it.c **** void EXTI4_IRQHandler(void)
 207:Core/Src/stm32l1xx_it.c **** {
 229              		.loc 1 207 1 is_stmt 1 view -0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233 0000 08B5     		push	{r3, lr}
 234              	.LCFI0:
 235              		.cfi_def_cfa_offset 8
 236              		.cfi_offset 3, -8
 237              		.cfi_offset 14, -4
 208:Core/Src/stm32l1xx_it.c ****   /* USER CODE BEGIN EXTI4_IRQn 0 */
 209:Core/Src/stm32l1xx_it.c ****   
 210:Core/Src/stm32l1xx_it.c ****   /* USER CODE END EXTI4_IRQn 0 */
 211:Core/Src/stm32l1xx_it.c ****   if (LL_EXTI_IsActiveFlag_0_31(LL_EXTI_LINE_4) != RESET)
 238              		.loc 1 211 3 view .LVU25
 239              	.LVL0:
 240              	.LBB16:
 241              	.LBI16:
 242              		.file 2 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h"
   1:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** /**
   2:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   ******************************************************************************
   3:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @file    stm32l1xx_ll_exti.h
   4:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @author  MCD Application Team
   5:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @brief   Header file of EXTI LL module.
   6:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   ******************************************************************************
   7:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @attention
   8:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *
   9:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  10:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * All rights reserved.</center></h2>
  11:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *
  12:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * the "License"; You may not use this file except in compliance with the
  14:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * License. You may obtain a copy of the License at:
  15:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *
  17:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   ******************************************************************************
  18:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   */
  19:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
  20:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  21:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #ifndef __STM32L1xx_LL_EXTI_H
  22:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #define __STM32L1xx_LL_EXTI_H
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 9


  23:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
  24:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #ifdef __cplusplus
  25:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** extern "C" {
  26:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #endif
  27:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
  28:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** /* Includes ------------------------------------------------------------------*/
  29:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #include "stm32l1xx.h"
  30:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
  31:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** /** @addtogroup STM32L1xx_LL_Driver
  32:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @{
  33:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   */
  34:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
  35:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #if defined (EXTI)
  36:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
  37:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** /** @defgroup EXTI_LL EXTI
  38:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @{
  39:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   */
  40:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
  41:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** /* Private types -------------------------------------------------------------*/
  42:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** /* Private variables ---------------------------------------------------------*/
  43:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** /* Private constants ---------------------------------------------------------*/
  44:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** /* Private Macros ------------------------------------------------------------*/
  45:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #if defined(USE_FULL_LL_DRIVER)
  46:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** /** @defgroup EXTI_LL_Private_Macros EXTI Private Macros
  47:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @{
  48:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   */
  49:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** /**
  50:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @}
  51:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   */
  52:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #endif /*USE_FULL_LL_DRIVER*/
  53:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** /* Exported types ------------------------------------------------------------*/
  54:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #if defined(USE_FULL_LL_DRIVER)
  55:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** /** @defgroup EXTI_LL_ES_INIT EXTI Exported Init structure
  56:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @{
  57:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   */
  58:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** typedef struct
  59:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** {
  60:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
  61:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   uint32_t Line_0_31;           /*!< Specifies the EXTI lines to be enabled or disabled for Lines i
  62:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****                                      This parameter can be any combination of @ref EXTI_LL_EC_LINE 
  63:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
  64:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   FunctionalState LineCommand;  /*!< Specifies the new state of the selected EXTI lines.
  65:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****                                      This parameter can be set either to ENABLE or DISABLE */
  66:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
  67:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   uint8_t Mode;                 /*!< Specifies the mode for the EXTI lines.
  68:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****                                      This parameter can be a value of @ref EXTI_LL_EC_MODE. */
  69:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
  70:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   uint8_t Trigger;              /*!< Specifies the trigger signal active edge for the EXTI lines.
  71:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****                                      This parameter can be a value of @ref EXTI_LL_EC_TRIGGER. */
  72:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** } LL_EXTI_InitTypeDef;
  73:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
  74:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** /**
  75:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @}
  76:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   */
  77:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #endif /*USE_FULL_LL_DRIVER*/
  78:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
  79:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** /* Exported constants --------------------------------------------------------*/
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 10


  80:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** /** @defgroup EXTI_LL_Exported_Constants EXTI Exported Constants
  81:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @{
  82:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   */
  83:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
  84:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** /** @defgroup EXTI_LL_EC_LINE LINE
  85:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @{
  86:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   */
  87:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #define LL_EXTI_LINE_0                 EXTI_IMR_IM0           /*!< Extended line 0 */
  88:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #define LL_EXTI_LINE_1                 EXTI_IMR_IM1           /*!< Extended line 1 */
  89:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #define LL_EXTI_LINE_2                 EXTI_IMR_IM2           /*!< Extended line 2 */
  90:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #define LL_EXTI_LINE_3                 EXTI_IMR_IM3           /*!< Extended line 3 */
  91:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #define LL_EXTI_LINE_4                 EXTI_IMR_IM4           /*!< Extended line 4 */
  92:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #define LL_EXTI_LINE_5                 EXTI_IMR_IM5           /*!< Extended line 5 */
  93:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #define LL_EXTI_LINE_6                 EXTI_IMR_IM6           /*!< Extended line 6 */
  94:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #define LL_EXTI_LINE_7                 EXTI_IMR_IM7           /*!< Extended line 7 */
  95:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #define LL_EXTI_LINE_8                 EXTI_IMR_IM8           /*!< Extended line 8 */
  96:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #define LL_EXTI_LINE_9                 EXTI_IMR_IM9           /*!< Extended line 9 */
  97:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #define LL_EXTI_LINE_10                EXTI_IMR_IM10          /*!< Extended line 10 */
  98:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #define LL_EXTI_LINE_11                EXTI_IMR_IM11          /*!< Extended line 11 */
  99:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #define LL_EXTI_LINE_12                EXTI_IMR_IM12          /*!< Extended line 12 */
 100:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #define LL_EXTI_LINE_13                EXTI_IMR_IM13          /*!< Extended line 13 */
 101:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #define LL_EXTI_LINE_14                EXTI_IMR_IM14          /*!< Extended line 14 */
 102:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #define LL_EXTI_LINE_15                EXTI_IMR_IM15          /*!< Extended line 15 */
 103:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #if defined(EXTI_IMR_IM16)
 104:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #define LL_EXTI_LINE_16                EXTI_IMR_IM16          /*!< Extended line 16 */
 105:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #endif
 106:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #define LL_EXTI_LINE_17                EXTI_IMR_IM17          /*!< Extended line 17 */
 107:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #if defined(EXTI_IMR_IM18)
 108:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #define LL_EXTI_LINE_18                EXTI_IMR_IM18          /*!< Extended line 18 */
 109:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #endif
 110:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #define LL_EXTI_LINE_19                EXTI_IMR_IM19          /*!< Extended line 19 */
 111:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #if defined(EXTI_IMR_IM20)
 112:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #define LL_EXTI_LINE_20                EXTI_IMR_IM20          /*!< Extended line 20 */
 113:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #endif
 114:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #if defined(EXTI_IMR_IM21)
 115:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #define LL_EXTI_LINE_21                EXTI_IMR_IM21          /*!< Extended line 21 */
 116:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #endif
 117:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #if defined(EXTI_IMR_IM22)
 118:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #define LL_EXTI_LINE_22                EXTI_IMR_IM22          /*!< Extended line 22 */
 119:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #endif
 120:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #define LL_EXTI_LINE_23                EXTI_IMR_IM23          /*!< Extended line 23 */
 121:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #if defined(EXTI_IMR_IM24)
 122:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #define LL_EXTI_LINE_24                EXTI_IMR_IM24          /*!< Extended line 24 */
 123:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #endif
 124:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #if defined(EXTI_IMR_IM25)
 125:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #define LL_EXTI_LINE_25                EXTI_IMR_IM25          /*!< Extended line 25 */
 126:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #endif
 127:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #if defined(EXTI_IMR_IM26)
 128:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #define LL_EXTI_LINE_26                EXTI_IMR_IM26          /*!< Extended line 26 */
 129:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #endif
 130:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #if defined(EXTI_IMR_IM27)
 131:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #define LL_EXTI_LINE_27                EXTI_IMR_IM27          /*!< Extended line 27 */
 132:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #endif
 133:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #if defined(EXTI_IMR_IM28)
 134:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #define LL_EXTI_LINE_28                EXTI_IMR_IM28          /*!< Extended line 28 */
 135:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #endif
 136:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #if defined(EXTI_IMR_IM29)
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 11


 137:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #define LL_EXTI_LINE_29                EXTI_IMR_IM29          /*!< Extended line 29 */
 138:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #endif
 139:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #if defined(EXTI_IMR_IM30)
 140:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #define LL_EXTI_LINE_30                EXTI_IMR_IM30          /*!< Extended line 30 */
 141:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #endif
 142:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #if defined(EXTI_IMR_IM31)
 143:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #define LL_EXTI_LINE_31                EXTI_IMR_IM31          /*!< Extended line 31 */
 144:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #endif
 145:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #define LL_EXTI_LINE_ALL_0_31          EXTI_IMR_IM            /*!< All Extended line not reserved*/
 146:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
 147:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
 148:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #define LL_EXTI_LINE_ALL               (0xFFFFFFFFU)  /*!< All Extended line */
 149:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
 150:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #if defined(USE_FULL_LL_DRIVER)
 151:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #define LL_EXTI_LINE_NONE              (0x00000000U)  /*!< None Extended line */
 152:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #endif /*USE_FULL_LL_DRIVER*/
 153:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
 154:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** /**
 155:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @}
 156:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   */
 157:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #if defined(USE_FULL_LL_DRIVER)
 158:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
 159:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** /** @defgroup EXTI_LL_EC_MODE Mode
 160:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @{
 161:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   */
 162:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #define LL_EXTI_MODE_IT                 ((uint8_t)0x00U) /*!< Interrupt Mode */
 163:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #define LL_EXTI_MODE_EVENT              ((uint8_t)0x01U) /*!< Event Mode */
 164:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #define LL_EXTI_MODE_IT_EVENT           ((uint8_t)0x02U) /*!< Interrupt & Event Mode */
 165:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** /**
 166:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @}
 167:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   */
 168:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
 169:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** /** @defgroup EXTI_LL_EC_TRIGGER Edge Trigger
 170:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @{
 171:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   */
 172:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #define LL_EXTI_TRIGGER_NONE            ((uint8_t)0x00U) /*!< No Trigger Mode */
 173:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #define LL_EXTI_TRIGGER_RISING          ((uint8_t)0x01U) /*!< Trigger Rising Mode */
 174:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #define LL_EXTI_TRIGGER_FALLING         ((uint8_t)0x02U) /*!< Trigger Falling Mode */
 175:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #define LL_EXTI_TRIGGER_RISING_FALLING  ((uint8_t)0x03U) /*!< Trigger Rising & Falling Mode */
 176:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
 177:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** /**
 178:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @}
 179:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   */
 180:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
 181:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
 182:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #endif /*USE_FULL_LL_DRIVER*/
 183:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
 184:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
 185:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** /**
 186:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @}
 187:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   */
 188:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
 189:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** /* Exported macro ------------------------------------------------------------*/
 190:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** /** @defgroup EXTI_LL_Exported_Macros EXTI Exported Macros
 191:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @{
 192:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   */
 193:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 12


 194:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** /** @defgroup EXTI_LL_EM_WRITE_READ Common Write and read registers Macros
 195:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @{
 196:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   */
 197:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
 198:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** /**
 199:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @brief  Write a value in EXTI register
 200:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @param  __REG__ Register to be written
 201:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @param  __VALUE__ Value to be written in the register
 202:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @retval None
 203:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   */
 204:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #define LL_EXTI_WriteReg(__REG__, __VALUE__) WRITE_REG(EXTI->__REG__, (__VALUE__))
 205:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
 206:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** /**
 207:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @brief  Read a value in EXTI register
 208:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @param  __REG__ Register to be read
 209:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @retval Register value
 210:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   */
 211:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** #define LL_EXTI_ReadReg(__REG__) READ_REG(EXTI->__REG__)
 212:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** /**
 213:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @}
 214:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   */
 215:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
 216:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
 217:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** /**
 218:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @}
 219:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   */
 220:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
 221:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
 222:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
 223:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** /* Exported functions --------------------------------------------------------*/
 224:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** /** @defgroup EXTI_LL_Exported_Functions EXTI Exported Functions
 225:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****  * @{
 226:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****  */
 227:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** /** @defgroup EXTI_LL_EF_IT_Management IT_Management
 228:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @{
 229:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   */
 230:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
 231:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** /**
 232:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @brief  Enable ExtiLine Interrupt request for Lines in range 0 to 31
 233:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @note The reset value for the direct or internal lines (see RM)
 234:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *       is set to 1 in order to enable the interrupt by default.
 235:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *       Bits are set automatically at Power on.
 236:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @rmtoll IMR         IMx           LL_EXTI_EnableIT_0_31
 237:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @param  ExtiLine This parameter can be one of the following values:
 238:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_0
 239:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_1
 240:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_2
 241:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_3
 242:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_4
 243:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_5
 244:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_6
 245:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_7
 246:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_8
 247:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_9
 248:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_10
 249:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_11
 250:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_12
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 13


 251:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_13
 252:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_14
 253:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_15
 254:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_16
 255:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_17
 256:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_18
 257:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_19
 258:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_20
 259:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_21
 260:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_22
 261:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_23
 262:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_24
 263:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_25
 264:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_26
 265:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_27
 266:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_28
 267:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_29
 268:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_30
 269:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_31
 270:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_ALL_0_31
 271:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @note   Please check each device line mapping for EXTI Line availability
 272:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @retval None
 273:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   */
 274:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** __STATIC_INLINE void LL_EXTI_EnableIT_0_31(uint32_t ExtiLine)
 275:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** {
 276:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   SET_BIT(EXTI->IMR, ExtiLine);
 277:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** }
 278:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
 279:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** /**
 280:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @brief  Disable ExtiLine Interrupt request for Lines in range 0 to 31
 281:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @note The reset value for the direct or internal lines (see RM)
 282:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *       is set to 1 in order to enable the interrupt by default.
 283:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *       Bits are set automatically at Power on.
 284:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @rmtoll IMR         IMx           LL_EXTI_DisableIT_0_31
 285:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @param  ExtiLine This parameter can be one of the following values:
 286:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_0
 287:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_1
 288:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_2
 289:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_3
 290:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_4
 291:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_5
 292:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_6
 293:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_7
 294:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_8
 295:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_9
 296:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_10
 297:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_11
 298:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_12
 299:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_13
 300:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_14
 301:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_15
 302:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_16
 303:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_17
 304:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_18
 305:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_19
 306:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_20
 307:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_21
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 14


 308:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_22
 309:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_23
 310:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_24
 311:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_25
 312:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_26
 313:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_27
 314:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_28
 315:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_29
 316:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_30
 317:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_31
 318:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_ALL_0_31
 319:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @note   Please check each device line mapping for EXTI Line availability
 320:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @retval None
 321:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   */
 322:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** __STATIC_INLINE void LL_EXTI_DisableIT_0_31(uint32_t ExtiLine)
 323:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** {
 324:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   CLEAR_BIT(EXTI->IMR, ExtiLine);
 325:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** }
 326:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
 327:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
 328:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** /**
 329:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @brief  Indicate if ExtiLine Interrupt request is enabled for Lines in range 0 to 31
 330:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @note The reset value for the direct or internal lines (see RM)
 331:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *       is set to 1 in order to enable the interrupt by default.
 332:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *       Bits are set automatically at Power on.
 333:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @rmtoll IMR         IMx           LL_EXTI_IsEnabledIT_0_31
 334:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @param  ExtiLine This parameter can be one of the following values:
 335:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_0
 336:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_1
 337:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_2
 338:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_3
 339:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_4
 340:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_5
 341:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_6
 342:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_7
 343:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_8
 344:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_9
 345:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_10
 346:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_11
 347:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_12
 348:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_13
 349:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_14
 350:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_15
 351:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_16
 352:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_17
 353:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_18
 354:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_19
 355:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_20
 356:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_21
 357:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_22
 358:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_23
 359:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_24
 360:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_25
 361:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_26
 362:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_27
 363:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_28
 364:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_29
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 15


 365:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_30
 366:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_31
 367:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_ALL_0_31
 368:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @note   Please check each device line mapping for EXTI Line availability
 369:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @retval State of bit (1 or 0).
 370:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   */
 371:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** __STATIC_INLINE uint32_t LL_EXTI_IsEnabledIT_0_31(uint32_t ExtiLine)
 372:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** {
 373:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   return (READ_BIT(EXTI->IMR, ExtiLine) == (ExtiLine));
 374:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** }
 375:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
 376:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
 377:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** /**
 378:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @}
 379:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   */
 380:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
 381:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** /** @defgroup EXTI_LL_EF_Event_Management Event_Management
 382:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @{
 383:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   */
 384:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
 385:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** /**
 386:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @brief  Enable ExtiLine Event request for Lines in range 0 to 31
 387:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @rmtoll EMR         EMx           LL_EXTI_EnableEvent_0_31
 388:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @param  ExtiLine This parameter can be one of the following values:
 389:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_0
 390:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_1
 391:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_2
 392:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_3
 393:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_4
 394:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_5
 395:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_6
 396:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_7
 397:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_8
 398:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_9
 399:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_10
 400:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_11
 401:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_12
 402:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_13
 403:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_14
 404:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_15
 405:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_16
 406:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_17
 407:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_18
 408:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_19
 409:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_20
 410:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_21
 411:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_22
 412:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_23
 413:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_24
 414:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_25
 415:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_26
 416:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_27
 417:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_28
 418:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_29
 419:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_30
 420:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_31
 421:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_ALL_0_31
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 16


 422:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @note   Please check each device line mapping for EXTI Line availability
 423:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @retval None
 424:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   */
 425:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** __STATIC_INLINE void LL_EXTI_EnableEvent_0_31(uint32_t ExtiLine)
 426:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** {
 427:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   SET_BIT(EXTI->EMR, ExtiLine);
 428:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
 429:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** }
 430:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
 431:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
 432:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** /**
 433:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @brief  Disable ExtiLine Event request for Lines in range 0 to 31
 434:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @rmtoll EMR         EMx           LL_EXTI_DisableEvent_0_31
 435:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @param  ExtiLine This parameter can be one of the following values:
 436:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_0
 437:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_1
 438:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_2
 439:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_3
 440:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_4
 441:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_5
 442:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_6
 443:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_7
 444:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_8
 445:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_9
 446:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_10
 447:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_11
 448:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_12
 449:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_13
 450:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_14
 451:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_15
 452:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_16
 453:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_17
 454:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_18
 455:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_19
 456:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_20
 457:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_21
 458:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_22
 459:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_23
 460:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_24
 461:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_25
 462:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_26
 463:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_27
 464:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_28
 465:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_29
 466:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_30
 467:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_31
 468:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_ALL_0_31
 469:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @note   Please check each device line mapping for EXTI Line availability
 470:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @retval None
 471:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   */
 472:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** __STATIC_INLINE void LL_EXTI_DisableEvent_0_31(uint32_t ExtiLine)
 473:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** {
 474:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   CLEAR_BIT(EXTI->EMR, ExtiLine);
 475:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** }
 476:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
 477:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
 478:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** /**
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 17


 479:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @brief  Indicate if ExtiLine Event request is enabled for Lines in range 0 to 31
 480:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @rmtoll EMR         EMx           LL_EXTI_IsEnabledEvent_0_31
 481:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @param  ExtiLine This parameter can be one of the following values:
 482:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_0
 483:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_1
 484:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_2
 485:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_3
 486:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_4
 487:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_5
 488:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_6
 489:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_7
 490:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_8
 491:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_9
 492:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_10
 493:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_11
 494:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_12
 495:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_13
 496:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_14
 497:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_15
 498:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_16
 499:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_17
 500:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_18
 501:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_19
 502:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_20
 503:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_21
 504:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_22
 505:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_23
 506:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_24
 507:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_25
 508:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_26
 509:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_27
 510:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_28
 511:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_29
 512:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_30
 513:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_31
 514:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_ALL_0_31
 515:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @note   Please check each device line mapping for EXTI Line availability
 516:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @retval State of bit (1 or 0).
 517:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   */
 518:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** __STATIC_INLINE uint32_t LL_EXTI_IsEnabledEvent_0_31(uint32_t ExtiLine)
 519:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** {
 520:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   return (READ_BIT(EXTI->EMR, ExtiLine) == (ExtiLine));
 521:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
 522:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** }
 523:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
 524:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
 525:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** /**
 526:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @}
 527:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   */
 528:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
 529:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** /** @defgroup EXTI_LL_EF_Rising_Trigger_Management Rising_Trigger_Management
 530:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @{
 531:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   */
 532:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
 533:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** /**
 534:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @brief  Enable ExtiLine Rising Edge Trigger for Lines in range 0 to 31
 535:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @note The configurable wakeup lines are edge-triggered. No glitch must be
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 18


 536:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *       generated on these lines. If a rising edge on a configurable interrupt
 537:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *       line occurs during a write operation in the EXTI_RTSR register, the
 538:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *       pending bit is not set.
 539:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *       Rising and falling edge triggers can be set for
 540:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *       the same interrupt line. In this case, both generate a trigger
 541:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *       condition.
 542:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @rmtoll RTSR        RTx           LL_EXTI_EnableRisingTrig_0_31
 543:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @param  ExtiLine This parameter can be a combination of the following values:
 544:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_0
 545:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_1
 546:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_2
 547:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_3
 548:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_4
 549:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_5
 550:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_6
 551:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_7
 552:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_8
 553:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_9
 554:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_10
 555:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_11
 556:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_12
 557:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_13
 558:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_14
 559:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_15
 560:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_16
 561:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_18
 562:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_19
 563:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_20
 564:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_21
 565:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_22
 566:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_29
 567:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_30
 568:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_31
 569:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @note   Please check each device line mapping for EXTI Line availability
 570:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @retval None
 571:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   */
 572:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** __STATIC_INLINE void LL_EXTI_EnableRisingTrig_0_31(uint32_t ExtiLine)
 573:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** {
 574:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   SET_BIT(EXTI->RTSR, ExtiLine);
 575:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
 576:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** }
 577:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
 578:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
 579:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** /**
 580:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @brief  Disable ExtiLine Rising Edge Trigger for Lines in range 0 to 31
 581:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @note The configurable wakeup lines are edge-triggered. No glitch must be
 582:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *       generated on these lines. If a rising edge on a configurable interrupt
 583:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *       line occurs during a write operation in the EXTI_RTSR register, the
 584:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *       pending bit is not set.
 585:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *       Rising and falling edge triggers can be set for
 586:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *       the same interrupt line. In this case, both generate a trigger
 587:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *       condition.
 588:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @rmtoll RTSR        RTx           LL_EXTI_DisableRisingTrig_0_31
 589:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @param  ExtiLine This parameter can be a combination of the following values:
 590:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_0
 591:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_1
 592:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_2
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 19


 593:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_3
 594:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_4
 595:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_5
 596:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_6
 597:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_7
 598:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_8
 599:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_9
 600:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_10
 601:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_11
 602:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_12
 603:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_13
 604:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_14
 605:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_15
 606:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_16
 607:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_18
 608:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_19
 609:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_20
 610:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_21
 611:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_22
 612:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_29
 613:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_30
 614:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_31
 615:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @note   Please check each device line mapping for EXTI Line availability
 616:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @retval None
 617:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   */
 618:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** __STATIC_INLINE void LL_EXTI_DisableRisingTrig_0_31(uint32_t ExtiLine)
 619:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** {
 620:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   CLEAR_BIT(EXTI->RTSR, ExtiLine);
 621:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
 622:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** }
 623:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
 624:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
 625:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** /**
 626:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @brief  Check if rising edge trigger is enabled for Lines in range 0 to 31
 627:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @rmtoll RTSR        RTx           LL_EXTI_IsEnabledRisingTrig_0_31
 628:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @param  ExtiLine This parameter can be a combination of the following values:
 629:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_0
 630:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_1
 631:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_2
 632:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_3
 633:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_4
 634:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_5
 635:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_6
 636:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_7
 637:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_8
 638:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_9
 639:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_10
 640:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_11
 641:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_12
 642:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_13
 643:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_14
 644:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_15
 645:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_16
 646:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_18
 647:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_19
 648:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_20
 649:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_21
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 20


 650:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_22
 651:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_29
 652:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_30
 653:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_31
 654:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @note   Please check each device line mapping for EXTI Line availability
 655:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @retval State of bit (1 or 0).
 656:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   */
 657:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** __STATIC_INLINE uint32_t LL_EXTI_IsEnabledRisingTrig_0_31(uint32_t ExtiLine)
 658:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** {
 659:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   return (READ_BIT(EXTI->RTSR, ExtiLine) == (ExtiLine));
 660:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** }
 661:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
 662:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
 663:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** /**
 664:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @}
 665:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   */
 666:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
 667:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** /** @defgroup EXTI_LL_EF_Falling_Trigger_Management Falling_Trigger_Management
 668:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @{
 669:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   */
 670:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
 671:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** /**
 672:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @brief  Enable ExtiLine Falling Edge Trigger for Lines in range 0 to 31
 673:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @note The configurable wakeup lines are edge-triggered. No glitch must be
 674:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *       generated on these lines. If a falling edge on a configurable interrupt
 675:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *       line occurs during a write operation in the EXTI_FTSR register, the
 676:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *       pending bit is not set.
 677:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *       Rising and falling edge triggers can be set for
 678:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *       the same interrupt line. In this case, both generate a trigger
 679:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *       condition.
 680:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @rmtoll FTSR        FTx           LL_EXTI_EnableFallingTrig_0_31
 681:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @param  ExtiLine This parameter can be a combination of the following values:
 682:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_0
 683:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_1
 684:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_2
 685:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_3
 686:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_4
 687:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_5
 688:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_6
 689:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_7
 690:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_8
 691:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_9
 692:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_10
 693:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_11
 694:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_12
 695:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_13
 696:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_14
 697:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_15
 698:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_16
 699:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_18
 700:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_19
 701:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_20
 702:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_21
 703:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_22
 704:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_29
 705:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_30
 706:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_31
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 21


 707:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @note   Please check each device line mapping for EXTI Line availability
 708:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @retval None
 709:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   */
 710:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** __STATIC_INLINE void LL_EXTI_EnableFallingTrig_0_31(uint32_t ExtiLine)
 711:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** {
 712:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   SET_BIT(EXTI->FTSR, ExtiLine);
 713:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** }
 714:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
 715:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
 716:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** /**
 717:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @brief  Disable ExtiLine Falling Edge Trigger for Lines in range 0 to 31
 718:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @note The configurable wakeup lines are edge-triggered. No glitch must be
 719:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *       generated on these lines. If a Falling edge on a configurable interrupt
 720:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *       line occurs during a write operation in the EXTI_FTSR register, the
 721:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *       pending bit is not set.
 722:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *       Rising and falling edge triggers can be set for the same interrupt line.
 723:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *       In this case, both generate a trigger condition.
 724:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @rmtoll FTSR        FTx           LL_EXTI_DisableFallingTrig_0_31
 725:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @param  ExtiLine This parameter can be a combination of the following values:
 726:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_0
 727:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_1
 728:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_2
 729:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_3
 730:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_4
 731:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_5
 732:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_6
 733:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_7
 734:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_8
 735:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_9
 736:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_10
 737:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_11
 738:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_12
 739:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_13
 740:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_14
 741:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_15
 742:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_16
 743:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_18
 744:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_19
 745:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_20
 746:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_21
 747:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_22
 748:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_29
 749:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_30
 750:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_31
 751:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @note   Please check each device line mapping for EXTI Line availability
 752:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @retval None
 753:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   */
 754:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** __STATIC_INLINE void LL_EXTI_DisableFallingTrig_0_31(uint32_t ExtiLine)
 755:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** {
 756:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   CLEAR_BIT(EXTI->FTSR, ExtiLine);
 757:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** }
 758:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
 759:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
 760:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** /**
 761:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @brief  Check if falling edge trigger is enabled for Lines in range 0 to 31
 762:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @rmtoll FTSR        FTx           LL_EXTI_IsEnabledFallingTrig_0_31
 763:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @param  ExtiLine This parameter can be a combination of the following values:
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 22


 764:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_0
 765:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_1
 766:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_2
 767:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_3
 768:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_4
 769:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_5
 770:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_6
 771:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_7
 772:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_8
 773:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_9
 774:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_10
 775:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_11
 776:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_12
 777:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_13
 778:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_14
 779:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_15
 780:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_16
 781:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_18
 782:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_19
 783:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_20
 784:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_21
 785:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_22
 786:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_29
 787:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_30
 788:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_31
 789:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @note   Please check each device line mapping for EXTI Line availability
 790:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @retval State of bit (1 or 0).
 791:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   */
 792:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** __STATIC_INLINE uint32_t LL_EXTI_IsEnabledFallingTrig_0_31(uint32_t ExtiLine)
 793:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** {
 794:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   return (READ_BIT(EXTI->FTSR, ExtiLine) == (ExtiLine));
 795:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** }
 796:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
 797:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
 798:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** /**
 799:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @}
 800:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   */
 801:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
 802:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** /** @defgroup EXTI_LL_EF_Software_Interrupt_Management Software_Interrupt_Management
 803:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @{
 804:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   */
 805:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
 806:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** /**
 807:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @brief  Generate a software Interrupt Event for Lines in range 0 to 31
 808:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @note If the interrupt is enabled on this line in the EXTI_IMR, writing a 1 to
 809:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *       this bit when it is at '0' sets the corresponding pending bit in EXTI_PR
 810:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *       resulting in an interrupt request generation.
 811:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *       This bit is cleared by clearing the corresponding bit in the EXTI_PR
 812:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *       register (by writing a 1 into the bit)
 813:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @rmtoll SWIER       SWIx          LL_EXTI_GenerateSWI_0_31
 814:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @param  ExtiLine This parameter can be a combination of the following values:
 815:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_0
 816:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_1
 817:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_2
 818:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_3
 819:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_4
 820:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_5
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 23


 821:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_6
 822:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_7
 823:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_8
 824:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_9
 825:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_10
 826:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_11
 827:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_12
 828:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_13
 829:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_14
 830:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_15
 831:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_16
 832:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_18
 833:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_19
 834:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_20
 835:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_21
 836:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_22
 837:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_29
 838:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_30
 839:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_31
 840:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @note   Please check each device line mapping for EXTI Line availability
 841:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @retval None
 842:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   */
 843:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** __STATIC_INLINE void LL_EXTI_GenerateSWI_0_31(uint32_t ExtiLine)
 844:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** {
 845:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   SET_BIT(EXTI->SWIER, ExtiLine);
 846:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** }
 847:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
 848:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
 849:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** /**
 850:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @}
 851:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   */
 852:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
 853:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** /** @defgroup EXTI_LL_EF_Flag_Management Flag_Management
 854:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @{
 855:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   */
 856:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
 857:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** /**
 858:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @brief  Check if the ExtLine Flag is set or not for Lines in range 0 to 31
 859:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @note This bit is set when the selected edge event arrives on the interrupt
 860:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *       line. This bit is cleared by writing a 1 to the bit.
 861:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @rmtoll PR          PIFx           LL_EXTI_IsActiveFlag_0_31
 862:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @param  ExtiLine This parameter can be a combination of the following values:
 863:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_0
 864:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_1
 865:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_2
 866:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_3
 867:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_4
 868:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_5
 869:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_6
 870:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_7
 871:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_8
 872:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_9
 873:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_10
 874:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_11
 875:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_12
 876:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_13
 877:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_14
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 24


 878:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_15
 879:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_16
 880:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_18
 881:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_19
 882:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_20
 883:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_21
 884:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_22
 885:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_29
 886:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_30
 887:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_31
 888:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @note   Please check each device line mapping for EXTI Line availability
 889:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @retval State of bit (1 or 0).
 890:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   */
 891:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** __STATIC_INLINE uint32_t LL_EXTI_IsActiveFlag_0_31(uint32_t ExtiLine)
 243              		.loc 2 891 26 view .LVU26
 244              	.LBB17:
 892:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** {
 893:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   return (READ_BIT(EXTI->PR, ExtiLine) == (ExtiLine));
 245              		.loc 2 893 3 view .LVU27
 246              		.loc 2 893 11 is_stmt 0 view .LVU28
 247 0002 064B     		ldr	r3, .L20
 248 0004 5B69     		ldr	r3, [r3, #20]
 249              	.LVL1:
 250              		.loc 2 893 11 view .LVU29
 251              	.LBE17:
 252              	.LBE16:
 253              		.loc 1 211 6 view .LVU30
 254 0006 13F0100F 		tst	r3, #16
 255 000a 00D1     		bne	.L19
 256              	.L16:
 212:Core/Src/stm32l1xx_it.c ****   {
 213:Core/Src/stm32l1xx_it.c ****     LL_EXTI_ClearFlag_0_31(LL_EXTI_LINE_4);
 214:Core/Src/stm32l1xx_it.c ****     /* USER CODE BEGIN LL_EXTI_LINE_4 */
 215:Core/Src/stm32l1xx_it.c ****     //ctrlErrorLed((bool)LL_GPIO_IsInputPinSet(DIN_GPIO_Port, DIN_Pin));
 216:Core/Src/stm32l1xx_it.c ****     notifyPinChange();
 217:Core/Src/stm32l1xx_it.c **** 
 218:Core/Src/stm32l1xx_it.c ****     /* USER CODE END LL_EXTI_LINE_4 */
 219:Core/Src/stm32l1xx_it.c ****   }
 220:Core/Src/stm32l1xx_it.c ****   /* USER CODE BEGIN EXTI4_IRQn 1 */
 221:Core/Src/stm32l1xx_it.c **** 
 222:Core/Src/stm32l1xx_it.c ****   /* USER CODE END EXTI4_IRQn 1 */
 223:Core/Src/stm32l1xx_it.c **** }
 257              		.loc 1 223 1 view .LVU31
 258 000c 08BD     		pop	{r3, pc}
 259              	.L19:
 213:Core/Src/stm32l1xx_it.c ****     /* USER CODE BEGIN LL_EXTI_LINE_4 */
 260              		.loc 1 213 5 is_stmt 1 view .LVU32
 261              	.LVL2:
 262              	.LBB18:
 263              	.LBI18:
 894:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** }
 895:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
 896:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
 897:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** /**
 898:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @brief  Read ExtLine Combination Flag for Lines in range 0 to 31
 899:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @note This bit is set when the selected edge event arrives on the interrupt
 900:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *       line. This bit is cleared by writing a 1 to the bit.
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 25


 901:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @rmtoll PR          PIFx           LL_EXTI_ReadFlag_0_31
 902:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @param  ExtiLine This parameter can be a combination of the following values:
 903:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_0
 904:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_1
 905:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_2
 906:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_3
 907:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_4
 908:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_5
 909:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_6
 910:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_7
 911:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_8
 912:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_9
 913:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_10
 914:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_11
 915:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_12
 916:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_13
 917:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_14
 918:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_15
 919:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_16
 920:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_18
 921:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_19
 922:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_20
 923:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_21
 924:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_22
 925:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_29
 926:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_30
 927:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_31
 928:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @note   Please check each device line mapping for EXTI Line availability
 929:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @retval @note This bit is set when the selected edge event arrives on the interrupt
 930:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   */
 931:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** __STATIC_INLINE uint32_t LL_EXTI_ReadFlag_0_31(uint32_t ExtiLine)
 932:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** {
 933:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   return (uint32_t)(READ_BIT(EXTI->PR, ExtiLine));
 934:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** }
 935:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
 936:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** 
 937:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** /**
 938:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @brief  Clear ExtLine Flags  for Lines in range 0 to 31
 939:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @note This bit is set when the selected edge event arrives on the interrupt
 940:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *       line. This bit is cleared by writing a 1 to the bit.
 941:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @rmtoll PR          PIFx           LL_EXTI_ClearFlag_0_31
 942:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @param  ExtiLine This parameter can be a combination of the following values:
 943:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_0
 944:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_1
 945:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_2
 946:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_3
 947:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_4
 948:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_5
 949:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_6
 950:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_7
 951:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_8
 952:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_9
 953:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_10
 954:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_11
 955:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_12
 956:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_13
 957:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_14
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 26


 958:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_15
 959:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_16
 960:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_18
 961:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_19
 962:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_20
 963:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_21
 964:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_22
 965:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_29
 966:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_30
 967:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_31
 968:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @note   Please check each device line mapping for EXTI Line availability
 969:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   * @retval None
 970:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   */
 971:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** __STATIC_INLINE void LL_EXTI_ClearFlag_0_31(uint32_t ExtiLine)
 264              		.loc 2 971 22 view .LVU33
 265              	.LBB19:
 972:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h **** {
 973:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h ****   WRITE_REG(EXTI->PR, ExtiLine);
 266              		.loc 2 973 3 view .LVU34
 267 000e 034B     		ldr	r3, .L20
 268 0010 1022     		movs	r2, #16
 269 0012 5A61     		str	r2, [r3, #20]
 270              	.LVL3:
 271              		.loc 2 973 3 is_stmt 0 view .LVU35
 272              	.LBE19:
 273              	.LBE18:
 216:Core/Src/stm32l1xx_it.c **** 
 274              		.loc 1 216 5 is_stmt 1 view .LVU36
 275 0014 FFF7FEFF 		bl	notifyPinChange
 276              	.LVL4:
 277              		.loc 1 223 1 is_stmt 0 view .LVU37
 278 0018 F8E7     		b	.L16
 279              	.L21:
 280 001a 00BF     		.align	2
 281              	.L20:
 282 001c 00040140 		.word	1073808384
 283              		.cfi_endproc
 284              	.LFE841:
 286              		.section	.text.USART1_IRQHandler,"ax",%progbits
 287              		.align	1
 288              		.global	USART1_IRQHandler
 289              		.syntax unified
 290              		.thumb
 291              		.thumb_func
 292              		.fpu softvfp
 294              	USART1_IRQHandler:
 295              	.LFB842:
 224:Core/Src/stm32l1xx_it.c **** 
 225:Core/Src/stm32l1xx_it.c **** /**
 226:Core/Src/stm32l1xx_it.c ****   * @brief This function handles USART1 global interrupt.
 227:Core/Src/stm32l1xx_it.c ****   */
 228:Core/Src/stm32l1xx_it.c **** void USART1_IRQHandler(void)
 229:Core/Src/stm32l1xx_it.c **** {
 296              		.loc 1 229 1 is_stmt 1 view -0
 297              		.cfi_startproc
 298              		@ args = 0, pretend = 0, frame = 0
 299              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 27


 300 0000 08B5     		push	{r3, lr}
 301              	.LCFI1:
 302              		.cfi_def_cfa_offset 8
 303              		.cfi_offset 3, -8
 304              		.cfi_offset 14, -4
 230:Core/Src/stm32l1xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 0 */
 231:Core/Src/stm32l1xx_it.c ****   if (LL_USART_IsActiveFlag_RXNE(USART1))
 305              		.loc 1 231 3 view .LVU39
 306              	.LVL5:
 307              	.LBB20:
 308              	.LBI20:
 309              		.file 3 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h"
   1:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
   2:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   ******************************************************************************
   3:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @file    stm32l1xx_ll_usart.h
   4:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @author  MCD Application Team
   5:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief   Header file of USART LL module.
   6:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   ******************************************************************************
   7:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @attention
   8:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *
   9:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  10:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * All rights reserved.</center></h2>
  11:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *
  12:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * the "License"; You may not use this file except in compliance with the
  14:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * License. You may obtain a copy of the License at:
  15:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *
  17:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   ******************************************************************************
  18:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
  19:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
  20:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  21:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #ifndef __STM32L1xx_LL_USART_H
  22:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #define __STM32L1xx_LL_USART_H
  23:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
  24:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #ifdef __cplusplus
  25:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** extern "C" {
  26:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #endif
  27:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
  28:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /* Includes ------------------------------------------------------------------*/
  29:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #include "stm32l1xx.h"
  30:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
  31:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /** @addtogroup STM32L1xx_LL_Driver
  32:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @{
  33:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
  34:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
  35:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #if defined (USART1) || defined (USART2) || defined (USART3) || defined (UART4) || defined (UART5)
  36:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
  37:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /** @defgroup USART_LL USART
  38:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @{
  39:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
  40:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
  41:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /* Private types -------------------------------------------------------------*/
  42:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /* Private variables ---------------------------------------------------------*/
  43:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
  44:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /* Private constants ---------------------------------------------------------*/
  45:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /** @defgroup USART_LL_Private_Constants USART Private Constants
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 28


  46:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @{
  47:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
  48:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
  49:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /* Defines used for the bit position in the register and perform offsets*/
  50:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #define USART_POSITION_GTPR_GT                  USART_GTPR_GT_Pos
  51:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
  52:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @}
  53:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
  54:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
  55:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /* Private macros ------------------------------------------------------------*/
  56:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #if defined(USE_FULL_LL_DRIVER)
  57:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /** @defgroup USART_LL_Private_Macros USART Private Macros
  58:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @{
  59:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
  60:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
  61:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @}
  62:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
  63:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #endif /*USE_FULL_LL_DRIVER*/
  64:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
  65:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /* Exported types ------------------------------------------------------------*/
  66:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #if defined(USE_FULL_LL_DRIVER)
  67:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /** @defgroup USART_LL_ES_INIT USART Exported Init structures
  68:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @{
  69:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
  70:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
  71:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
  72:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief LL USART Init Structure definition
  73:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
  74:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** typedef struct
  75:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
  76:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   uint32_t BaudRate;                  /*!< This field defines expected Usart communication baud rat
  77:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
  78:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
  79:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
  80:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   uint32_t DataWidth;                 /*!< Specifies the number of data bits transmitted or receive
  81:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_DATAWI
  82:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
  83:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
  84:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
  85:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   uint32_t StopBits;                  /*!< Specifies the number of stop bits transmitted.
  86:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_STOPBI
  87:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
  88:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
  89:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
  90:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   uint32_t Parity;                    /*!< Specifies the parity mode.
  91:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_PARITY
  92:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
  93:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
  94:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
  95:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   uint32_t TransferDirection;         /*!< Specifies whether the Receive and/or Transmit mode is en
  96:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_DIRECT
  97:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
  98:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
  99:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 100:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   uint32_t HardwareFlowControl;       /*!< Specifies whether the hardware flow control mode is enab
 101:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_HWCONT
 102:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 29


 103:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
 104:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 105:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   uint32_t OverSampling;              /*!< Specifies whether USART oversampling mode is 16 or 8.
 106:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_OVERSA
 107:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 108:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
 109:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 110:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** } LL_USART_InitTypeDef;
 111:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 112:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
 113:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief LL USART Clock Init Structure definition
 114:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 115:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** typedef struct
 116:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
 117:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   uint32_t ClockOutput;               /*!< Specifies whether the USART clock is enabled or disabled
 118:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_CLOCK.
 119:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 120:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****                                            USART HW configuration can be modified afterwards using 
 121:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****                                            @ref LL_USART_EnableSCLKOutput() or @ref LL_USART_Disabl
 122:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****                                            For more details, refer to description of this function.
 123:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 124:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   uint32_t ClockPolarity;             /*!< Specifies the steady state of the serial clock.
 125:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_POLARI
 126:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 127:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****                                            USART HW configuration can be modified afterwards using 
 128:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****                                            For more details, refer to description of this function.
 129:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 130:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   uint32_t ClockPhase;                /*!< Specifies the clock transition on which the bit capture 
 131:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_PHASE.
 132:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 133:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****                                            USART HW configuration can be modified afterwards using 
 134:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****                                            For more details, refer to description of this function.
 135:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 136:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   uint32_t LastBitClockPulse;         /*!< Specifies whether the clock pulse corresponding to the l
 137:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****                                            data bit (MSB) has to be output on the SCLK pin in synch
 138:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_LASTCL
 139:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 140:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****                                            USART HW configuration can be modified afterwards using 
 141:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****                                            For more details, refer to description of this function.
 142:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 143:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** } LL_USART_ClockInitTypeDef;
 144:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 145:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
 146:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @}
 147:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 148:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #endif /* USE_FULL_LL_DRIVER */
 149:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 150:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /* Exported constants --------------------------------------------------------*/
 151:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /** @defgroup USART_LL_Exported_Constants USART Exported Constants
 152:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @{
 153:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 154:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 155:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /** @defgroup USART_LL_EC_GET_FLAG Get Flags Defines
 156:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief    Flags defines which can be used with LL_USART_ReadReg function
 157:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @{
 158:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 159:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #define LL_USART_SR_PE                          USART_SR_PE                   /*!< Parity error fla
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 30


 160:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #define LL_USART_SR_FE                          USART_SR_FE                   /*!< Framing error fl
 161:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #define LL_USART_SR_NE                          USART_SR_NE                   /*!< Noise detected f
 162:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #define LL_USART_SR_ORE                         USART_SR_ORE                  /*!< Overrun error fl
 163:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #define LL_USART_SR_IDLE                        USART_SR_IDLE                 /*!< Idle line detect
 164:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #define LL_USART_SR_RXNE                        USART_SR_RXNE                 /*!< Read data regist
 165:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #define LL_USART_SR_TC                          USART_SR_TC                   /*!< Transmission com
 166:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #define LL_USART_SR_TXE                         USART_SR_TXE                  /*!< Transmit data re
 167:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #define LL_USART_SR_LBD                         USART_SR_LBD                  /*!< LIN break detect
 168:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #define LL_USART_SR_CTS                         USART_SR_CTS                  /*!< CTS flag */
 169:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
 170:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @}
 171:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 172:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 173:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /** @defgroup USART_LL_EC_IT IT Defines
 174:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief    IT defines which can be used with LL_USART_ReadReg and  LL_USART_WriteReg functions
 175:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @{
 176:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 177:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #define LL_USART_CR1_IDLEIE                     USART_CR1_IDLEIE              /*!< IDLE interrupt e
 178:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #define LL_USART_CR1_RXNEIE                     USART_CR1_RXNEIE              /*!< Read data regist
 179:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #define LL_USART_CR1_TCIE                       USART_CR1_TCIE                /*!< Transmission com
 180:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #define LL_USART_CR1_TXEIE                      USART_CR1_TXEIE               /*!< Transmit data re
 181:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #define LL_USART_CR1_PEIE                       USART_CR1_PEIE                /*!< Parity error */
 182:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #define LL_USART_CR2_LBDIE                      USART_CR2_LBDIE               /*!< LIN break detect
 183:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #define LL_USART_CR3_EIE                        USART_CR3_EIE                 /*!< Error interrupt 
 184:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #define LL_USART_CR3_CTSIE                      USART_CR3_CTSIE               /*!< CTS interrupt en
 185:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
 186:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @}
 187:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 188:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 189:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /** @defgroup USART_LL_EC_DIRECTION Communication Direction
 190:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @{
 191:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 192:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #define LL_USART_DIRECTION_NONE                 0x00000000U                        /*!< Transmitter
 193:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #define LL_USART_DIRECTION_RX                   USART_CR1_RE                       /*!< Transmitter
 194:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #define LL_USART_DIRECTION_TX                   USART_CR1_TE                       /*!< Transmitter
 195:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #define LL_USART_DIRECTION_TX_RX                (USART_CR1_TE |USART_CR1_RE)       /*!< Transmitter
 196:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
 197:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @}
 198:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 199:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 200:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /** @defgroup USART_LL_EC_PARITY Parity Control
 201:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @{
 202:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 203:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #define LL_USART_PARITY_NONE                    0x00000000U                          /*!< Parity co
 204:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #define LL_USART_PARITY_EVEN                    USART_CR1_PCE                        /*!< Parity co
 205:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #define LL_USART_PARITY_ODD                     (USART_CR1_PCE | USART_CR1_PS)       /*!< Parity co
 206:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
 207:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @}
 208:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 209:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 210:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /** @defgroup USART_LL_EC_WAKEUP Wakeup
 211:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @{
 212:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 213:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #define LL_USART_WAKEUP_IDLELINE                0x00000000U           /*!<  USART wake up from Mute
 214:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #define LL_USART_WAKEUP_ADDRESSMARK             USART_CR1_WAKE        /*!<  USART wake up from Mute
 215:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
 216:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @}
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 31


 217:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 218:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 219:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /** @defgroup USART_LL_EC_DATAWIDTH Datawidth
 220:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @{
 221:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 222:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #define LL_USART_DATAWIDTH_8B                   0x00000000U             /*!< 8 bits word length : S
 223:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #define LL_USART_DATAWIDTH_9B                   USART_CR1_M             /*!< 9 bits word length : S
 224:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
 225:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @}
 226:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 227:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 228:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /** @defgroup USART_LL_EC_OVERSAMPLING Oversampling
 229:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @{
 230:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 231:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #define LL_USART_OVERSAMPLING_16                0x00000000U            /*!< Oversampling by 16 */
 232:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #define LL_USART_OVERSAMPLING_8                 USART_CR1_OVER8        /*!< Oversampling by 8 */
 233:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
 234:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @}
 235:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 236:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 237:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #if defined(USE_FULL_LL_DRIVER)
 238:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /** @defgroup USART_LL_EC_CLOCK Clock Signal
 239:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @{
 240:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 241:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 242:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #define LL_USART_CLOCK_DISABLE                  0x00000000U            /*!< Clock signal not provid
 243:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #define LL_USART_CLOCK_ENABLE                   USART_CR2_CLKEN        /*!< Clock signal provided *
 244:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
 245:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @}
 246:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 247:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #endif /*USE_FULL_LL_DRIVER*/
 248:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 249:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /** @defgroup USART_LL_EC_LASTCLKPULSE Last Clock Pulse
 250:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @{
 251:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 252:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #define LL_USART_LASTCLKPULSE_NO_OUTPUT         0x00000000U           /*!< The clock pulse of the l
 253:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #define LL_USART_LASTCLKPULSE_OUTPUT            USART_CR2_LBCL        /*!< The clock pulse of the l
 254:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
 255:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @}
 256:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 257:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 258:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /** @defgroup USART_LL_EC_PHASE Clock Phase
 259:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @{
 260:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 261:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #define LL_USART_PHASE_1EDGE                    0x00000000U           /*!< The first clock transiti
 262:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #define LL_USART_PHASE_2EDGE                    USART_CR2_CPHA        /*!< The second clock transit
 263:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
 264:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @}
 265:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 266:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 267:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /** @defgroup USART_LL_EC_POLARITY Clock Polarity
 268:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @{
 269:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 270:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #define LL_USART_POLARITY_LOW                   0x00000000U           /*!< Steady low value on SCLK
 271:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #define LL_USART_POLARITY_HIGH                  USART_CR2_CPOL        /*!< Steady high value on SCL
 272:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
 273:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @}
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 32


 274:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 275:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 276:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /** @defgroup USART_LL_EC_STOPBITS Stop Bits
 277:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @{
 278:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 279:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #define LL_USART_STOPBITS_0_5                   USART_CR2_STOP_0                           /*!< 0.5
 280:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #define LL_USART_STOPBITS_1                     0x00000000U                                /*!< 1 s
 281:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #define LL_USART_STOPBITS_1_5                   (USART_CR2_STOP_0 | USART_CR2_STOP_1)      /*!< 1.5
 282:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #define LL_USART_STOPBITS_2                     USART_CR2_STOP_1                           /*!< 2 s
 283:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
 284:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @}
 285:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 286:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 287:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /** @defgroup USART_LL_EC_HWCONTROL Hardware Control
 288:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @{
 289:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 290:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #define LL_USART_HWCONTROL_NONE                 0x00000000U                          /*!< CTS and R
 291:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #define LL_USART_HWCONTROL_RTS                  USART_CR3_RTSE                       /*!< RTS outpu
 292:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #define LL_USART_HWCONTROL_CTS                  USART_CR3_CTSE                       /*!< CTS mode 
 293:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #define LL_USART_HWCONTROL_RTS_CTS              (USART_CR3_RTSE | USART_CR3_CTSE)    /*!< CTS and R
 294:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
 295:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @}
 296:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 297:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 298:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /** @defgroup USART_LL_EC_IRDA_POWER IrDA Power
 299:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @{
 300:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 301:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #define LL_USART_IRDA_POWER_NORMAL              0x00000000U           /*!< IrDA normal power mode *
 302:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #define LL_USART_IRDA_POWER_LOW                 USART_CR3_IRLP        /*!< IrDA low power mode */
 303:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
 304:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @}
 305:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 306:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 307:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /** @defgroup USART_LL_EC_LINBREAK_DETECT LIN Break Detection Length
 308:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @{
 309:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 310:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #define LL_USART_LINBREAK_DETECT_10B            0x00000000U           /*!< 10-bit break detection m
 311:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #define LL_USART_LINBREAK_DETECT_11B            USART_CR2_LBDL        /*!< 11-bit break detection m
 312:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
 313:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @}
 314:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 315:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 316:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
 317:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @}
 318:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 319:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 320:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /* Exported macro ------------------------------------------------------------*/
 321:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /** @defgroup USART_LL_Exported_Macros USART Exported Macros
 322:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @{
 323:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 324:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 325:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /** @defgroup USART_LL_EM_WRITE_READ Common Write and read registers Macros
 326:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @{
 327:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 328:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 329:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
 330:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Write a value in USART register
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 33


 331:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  __INSTANCE__ USART Instance
 332:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  __REG__ Register to be written
 333:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  __VALUE__ Value to be written in the register
 334:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval None
 335:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 336:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #define LL_USART_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VAL
 337:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 338:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
 339:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Read a value in USART register
 340:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  __INSTANCE__ USART Instance
 341:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  __REG__ Register to be read
 342:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval Register value
 343:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 344:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #define LL_USART_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 345:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
 346:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @}
 347:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 348:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 349:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /** @defgroup USART_LL_EM_Exported_Macros_Helper Exported_Macros_Helper
 350:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @{
 351:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 352:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 353:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
 354:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Compute USARTDIV value according to Peripheral Clock and
 355:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         expected Baud Rate in 8 bits sampling mode (32 bits value of USARTDIV is returned)
 356:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  __PERIPHCLK__ Peripheral Clock frequency used for USART instance
 357:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  __BAUDRATE__ Baud rate value to achieve
 358:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval USARTDIV value to be used for BRR register filling in OverSampling_8 case
 359:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 360:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #define __LL_USART_DIV_SAMPLING8_100(__PERIPHCLK__, __BAUDRATE__)      (((__PERIPHCLK__)*25)/(2*(__
 361:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #define __LL_USART_DIVMANT_SAMPLING8(__PERIPHCLK__, __BAUDRATE__)      (__LL_USART_DIV_SAMPLING8_10
 362:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #define __LL_USART_DIVFRAQ_SAMPLING8(__PERIPHCLK__, __BAUDRATE__)      (((__LL_USART_DIV_SAMPLING8_
 363:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /* UART BRR = mantissa + overflow + fraction
 364:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****             = (UART DIVMANT << 4) + ((UART DIVFRAQ & 0xF8) << 1) + (UART DIVFRAQ & 0x07) */
 365:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #define __LL_USART_DIV_SAMPLING8(__PERIPHCLK__, __BAUDRATE__)             (((__LL_USART_DIVMANT_SAM
 366:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****                                                                            ((__LL_USART_DIVFRAQ_SAM
 367:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****                                                                            (__LL_USART_DIVFRAQ_SAMP
 368:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 369:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
 370:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Compute USARTDIV value according to Peripheral Clock and
 371:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         expected Baud Rate in 16 bits sampling mode (32 bits value of USARTDIV is returned)
 372:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  __PERIPHCLK__ Peripheral Clock frequency used for USART instance
 373:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  __BAUDRATE__ Baud rate value to achieve
 374:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval USARTDIV value to be used for BRR register filling in OverSampling_16 case
 375:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 376:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #define __LL_USART_DIV_SAMPLING16_100(__PERIPHCLK__, __BAUDRATE__)     (((__PERIPHCLK__)*25)/(4*(__
 377:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #define __LL_USART_DIVMANT_SAMPLING16(__PERIPHCLK__, __BAUDRATE__)     (__LL_USART_DIV_SAMPLING16_1
 378:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #define __LL_USART_DIVFRAQ_SAMPLING16(__PERIPHCLK__, __BAUDRATE__)     (((__LL_USART_DIV_SAMPLING16
 379:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /* USART BRR = mantissa + overflow + fraction
 380:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****             = (USART DIVMANT << 4) + (USART DIVFRAQ & 0xF0) + (USART DIVFRAQ & 0x0F) */
 381:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** #define __LL_USART_DIV_SAMPLING16(__PERIPHCLK__, __BAUDRATE__)            (((__LL_USART_DIVMANT_SAM
 382:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****                                                                            (__LL_USART_DIVFRAQ_SAMP
 383:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****                                                                            (__LL_USART_DIVFRAQ_SAMP
 384:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 385:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
 386:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @}
 387:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 34


 388:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 389:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
 390:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @}
 391:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 392:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 393:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /* Exported functions --------------------------------------------------------*/
 394:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 395:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /** @defgroup USART_LL_Exported_Functions USART Exported Functions
 396:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @{
 397:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 398:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 399:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration Configuration functions
 400:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @{
 401:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 402:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 403:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
 404:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  USART Enable
 405:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll CR1          UE            LL_USART_Enable
 406:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
 407:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval None
 408:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 409:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_Enable(USART_TypeDef *USARTx)
 410:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
 411:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   SET_BIT(USARTx->CR1, USART_CR1_UE);
 412:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
 413:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 414:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
 415:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  USART Disable (all USART prescalers and outputs are disabled)
 416:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   When USART is disabled, USART prescalers and outputs are stopped immediately,
 417:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         and current operations are discarded. The configuration of the USART is kept, but all t
 418:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         flags, in the USARTx_SR are set to their default values.
 419:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll CR1          UE            LL_USART_Disable
 420:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
 421:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval None
 422:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 423:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_Disable(USART_TypeDef *USARTx)
 424:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
 425:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR1, USART_CR1_UE);
 426:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
 427:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 428:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
 429:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Indicate if USART is enabled
 430:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll CR1          UE            LL_USART_IsEnabled
 431:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
 432:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval State of bit (1 or 0).
 433:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 434:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabled(USART_TypeDef *USARTx)
 435:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
 436:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   return (READ_BIT(USARTx->CR1, USART_CR1_UE) == (USART_CR1_UE));
 437:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
 438:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 439:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
 440:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Receiver Enable (Receiver is enabled and begins searching for a start bit)
 441:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll CR1          RE            LL_USART_EnableDirectionRx
 442:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
 443:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval None
 444:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 35


 445:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableDirectionRx(USART_TypeDef *USARTx)
 446:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
 447:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   SET_BIT(USARTx->CR1, USART_CR1_RE);
 448:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
 449:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 450:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
 451:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Receiver Disable
 452:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll CR1          RE            LL_USART_DisableDirectionRx
 453:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
 454:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval None
 455:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 456:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableDirectionRx(USART_TypeDef *USARTx)
 457:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
 458:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR1, USART_CR1_RE);
 459:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
 460:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 461:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
 462:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Transmitter Enable
 463:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll CR1          TE            LL_USART_EnableDirectionTx
 464:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
 465:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval None
 466:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 467:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableDirectionTx(USART_TypeDef *USARTx)
 468:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
 469:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   SET_BIT(USARTx->CR1, USART_CR1_TE);
 470:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
 471:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 472:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
 473:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Transmitter Disable
 474:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll CR1          TE            LL_USART_DisableDirectionTx
 475:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
 476:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval None
 477:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 478:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableDirectionTx(USART_TypeDef *USARTx)
 479:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
 480:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR1, USART_CR1_TE);
 481:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
 482:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 483:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
 484:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Configure simultaneously enabled/disabled states
 485:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         of Transmitter and Receiver
 486:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll CR1          RE            LL_USART_SetTransferDirection\n
 487:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         CR1          TE            LL_USART_SetTransferDirection
 488:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
 489:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  TransferDirection This parameter can be one of the following values:
 490:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_NONE
 491:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_RX
 492:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_TX
 493:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_TX_RX
 494:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval None
 495:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 496:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetTransferDirection(USART_TypeDef *USARTx, uint32_t TransferDirectio
 497:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
 498:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_RE | USART_CR1_TE, TransferDirection);
 499:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
 500:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 501:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 36


 502:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Return enabled/disabled states of Transmitter and Receiver
 503:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll CR1          RE            LL_USART_GetTransferDirection\n
 504:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         CR1          TE            LL_USART_GetTransferDirection
 505:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
 506:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 507:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_NONE
 508:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_RX
 509:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_TX
 510:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_TX_RX
 511:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 512:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetTransferDirection(USART_TypeDef *USARTx)
 513:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
 514:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_RE | USART_CR1_TE));
 515:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
 516:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 517:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
 518:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Configure Parity (enabled/disabled and parity mode if enabled).
 519:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   This function selects if hardware parity control (generation and detection) is enabled 
 520:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         When the parity control is enabled (Odd or Even), computed parity bit is inserted at th
 521:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         (9th or 8th bit depending on data width) and parity is checked on the received data.
 522:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll CR1          PS            LL_USART_SetParity\n
 523:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         CR1          PCE           LL_USART_SetParity
 524:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
 525:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  Parity This parameter can be one of the following values:
 526:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_NONE
 527:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_EVEN
 528:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_ODD
 529:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval None
 530:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 531:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetParity(USART_TypeDef *USARTx, uint32_t Parity)
 532:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
 533:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_PS | USART_CR1_PCE, Parity);
 534:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
 535:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 536:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
 537:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Return Parity configuration (enabled/disabled and parity mode if enabled)
 538:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll CR1          PS            LL_USART_GetParity\n
 539:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         CR1          PCE           LL_USART_GetParity
 540:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
 541:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 542:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_NONE
 543:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_EVEN
 544:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_ODD
 545:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 546:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetParity(USART_TypeDef *USARTx)
 547:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
 548:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_PS | USART_CR1_PCE));
 549:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
 550:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 551:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
 552:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Set Receiver Wake Up method from Mute mode.
 553:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll CR1          WAKE          LL_USART_SetWakeUpMethod
 554:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
 555:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  Method This parameter can be one of the following values:
 556:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_IDLELINE
 557:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ADDRESSMARK
 558:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval None
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 37


 559:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 560:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetWakeUpMethod(USART_TypeDef *USARTx, uint32_t Method)
 561:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
 562:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_WAKE, Method);
 563:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
 564:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 565:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
 566:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Return Receiver Wake Up method from Mute mode
 567:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll CR1          WAKE          LL_USART_GetWakeUpMethod
 568:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
 569:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 570:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_IDLELINE
 571:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ADDRESSMARK
 572:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 573:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetWakeUpMethod(USART_TypeDef *USARTx)
 574:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
 575:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_WAKE));
 576:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
 577:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 578:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
 579:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Set Word length (i.e. nb of data bits, excluding start and stop bits)
 580:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll CR1          M             LL_USART_SetDataWidth
 581:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
 582:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  DataWidth This parameter can be one of the following values:
 583:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_8B
 584:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_9B
 585:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval None
 586:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 587:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetDataWidth(USART_TypeDef *USARTx, uint32_t DataWidth)
 588:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
 589:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_M, DataWidth);
 590:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
 591:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 592:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
 593:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Return Word length (i.e. nb of data bits, excluding start and stop bits)
 594:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll CR1          M             LL_USART_GetDataWidth
 595:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
 596:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 597:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_8B
 598:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_9B
 599:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 600:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetDataWidth(USART_TypeDef *USARTx)
 601:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
 602:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_M));
 603:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
 604:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 605:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
 606:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Set Oversampling to 8-bit or 16-bit mode
 607:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll CR1          OVER8         LL_USART_SetOverSampling
 608:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
 609:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  OverSampling This parameter can be one of the following values:
 610:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_16
 611:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_8
 612:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval None
 613:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 614:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetOverSampling(USART_TypeDef *USARTx, uint32_t OverSampling)
 615:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 38


 616:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_OVER8, OverSampling);
 617:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
 618:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 619:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
 620:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Return Oversampling mode
 621:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll CR1          OVER8         LL_USART_GetOverSampling
 622:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
 623:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 624:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_16
 625:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_8
 626:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 627:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetOverSampling(USART_TypeDef *USARTx)
 628:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
 629:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_OVER8));
 630:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
 631:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 632:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
 633:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Configure if Clock pulse of the last data bit is output to the SCLK pin or not
 634:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 635:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 636:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll CR2          LBCL          LL_USART_SetLastClkPulseOutput
 637:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
 638:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  LastBitClockPulse This parameter can be one of the following values:
 639:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_NO_OUTPUT
 640:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_OUTPUT
 641:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval None
 642:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 643:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetLastClkPulseOutput(USART_TypeDef *USARTx, uint32_t LastBitClockPul
 644:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
 645:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_LBCL, LastBitClockPulse);
 646:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
 647:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 648:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
 649:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Retrieve Clock pulse of the last data bit output configuration
 650:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         (Last bit Clock pulse output to the SCLK pin or not)
 651:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 652:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 653:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll CR2          LBCL          LL_USART_GetLastClkPulseOutput
 654:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
 655:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 656:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_NO_OUTPUT
 657:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_OUTPUT
 658:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 659:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetLastClkPulseOutput(USART_TypeDef *USARTx)
 660:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
 661:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_LBCL));
 662:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
 663:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 664:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
 665:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Select the phase of the clock output on the SCLK pin in synchronous mode
 666:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 667:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 668:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll CR2          CPHA          LL_USART_SetClockPhase
 669:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
 670:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  ClockPhase This parameter can be one of the following values:
 671:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_1EDGE
 672:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_2EDGE
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 39


 673:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval None
 674:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 675:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetClockPhase(USART_TypeDef *USARTx, uint32_t ClockPhase)
 676:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
 677:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_CPHA, ClockPhase);
 678:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
 679:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 680:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
 681:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Return phase of the clock output on the SCLK pin in synchronous mode
 682:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 683:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 684:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll CR2          CPHA          LL_USART_GetClockPhase
 685:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
 686:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 687:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_1EDGE
 688:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_2EDGE
 689:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 690:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetClockPhase(USART_TypeDef *USARTx)
 691:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
 692:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_CPHA));
 693:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
 694:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 695:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
 696:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Select the polarity of the clock output on the SCLK pin in synchronous mode
 697:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 698:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 699:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll CR2          CPOL          LL_USART_SetClockPolarity
 700:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
 701:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  ClockPolarity This parameter can be one of the following values:
 702:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_LOW
 703:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_HIGH
 704:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval None
 705:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 706:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetClockPolarity(USART_TypeDef *USARTx, uint32_t ClockPolarity)
 707:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
 708:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_CPOL, ClockPolarity);
 709:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
 710:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 711:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
 712:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Return polarity of the clock output on the SCLK pin in synchronous mode
 713:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 714:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 715:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll CR2          CPOL          LL_USART_GetClockPolarity
 716:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
 717:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 718:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_LOW
 719:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_HIGH
 720:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 721:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetClockPolarity(USART_TypeDef *USARTx)
 722:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
 723:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_CPOL));
 724:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
 725:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 726:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
 727:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Configure Clock signal format (Phase Polarity and choice about output of last bit clock
 728:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 729:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 40


 730:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
 731:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         - Clock Phase configuration using @ref LL_USART_SetClockPhase() function
 732:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         - Clock Polarity configuration using @ref LL_USART_SetClockPolarity() function
 733:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         - Output of Last bit Clock pulse configuration using @ref LL_USART_SetLastClkPulseOutpu
 734:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll CR2          CPHA          LL_USART_ConfigClock\n
 735:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         CR2          CPOL          LL_USART_ConfigClock\n
 736:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         CR2          LBCL          LL_USART_ConfigClock
 737:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
 738:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  Phase This parameter can be one of the following values:
 739:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_1EDGE
 740:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_2EDGE
 741:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  Polarity This parameter can be one of the following values:
 742:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_LOW
 743:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_HIGH
 744:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  LBCPOutput This parameter can be one of the following values:
 745:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_NO_OUTPUT
 746:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_OUTPUT
 747:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval None
 748:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 749:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigClock(USART_TypeDef *USARTx, uint32_t Phase, uint32_t Polarity,
 750:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
 751:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_CPHA | USART_CR2_CPOL | USART_CR2_LBCL, Phase | Polarity | LBCP
 752:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
 753:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 754:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
 755:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Enable Clock output on SCLK pin
 756:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 757:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 758:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll CR2          CLKEN         LL_USART_EnableSCLKOutput
 759:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
 760:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval None
 761:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 762:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableSCLKOutput(USART_TypeDef *USARTx)
 763:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
 764:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_CLKEN);
 765:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
 766:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 767:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
 768:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Disable Clock output on SCLK pin
 769:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 770:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 771:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll CR2          CLKEN         LL_USART_DisableSCLKOutput
 772:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
 773:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval None
 774:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 775:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableSCLKOutput(USART_TypeDef *USARTx)
 776:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
 777:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_CLKEN);
 778:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
 779:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 780:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
 781:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Indicate if Clock output on SCLK pin is enabled
 782:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 783:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 784:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll CR2          CLKEN         LL_USART_IsEnabledSCLKOutput
 785:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
 786:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval State of bit (1 or 0).
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 41


 787:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 788:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledSCLKOutput(USART_TypeDef *USARTx)
 789:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
 790:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   return (READ_BIT(USARTx->CR2, USART_CR2_CLKEN) == (USART_CR2_CLKEN));
 791:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
 792:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 793:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
 794:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Set the length of the stop bits
 795:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll CR2          STOP          LL_USART_SetStopBitsLength
 796:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
 797:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  StopBits This parameter can be one of the following values:
 798:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_0_5
 799:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1
 800:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1_5
 801:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_2
 802:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval None
 803:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 804:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetStopBitsLength(USART_TypeDef *USARTx, uint32_t StopBits)
 805:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
 806:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_STOP, StopBits);
 807:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
 808:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 809:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
 810:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Retrieve the length of the stop bits
 811:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll CR2          STOP          LL_USART_GetStopBitsLength
 812:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
 813:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 814:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_0_5
 815:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1
 816:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1_5
 817:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_2
 818:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 819:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetStopBitsLength(USART_TypeDef *USARTx)
 820:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
 821:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_STOP));
 822:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
 823:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 824:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
 825:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Configure Character frame format (Datawidth, Parity control, Stop Bits)
 826:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
 827:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         - Data Width configuration using @ref LL_USART_SetDataWidth() function
 828:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         - Parity Control and mode configuration using @ref LL_USART_SetParity() function
 829:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         - Stop bits configuration using @ref LL_USART_SetStopBitsLength() function
 830:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll CR1          PS            LL_USART_ConfigCharacter\n
 831:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         CR1          PCE           LL_USART_ConfigCharacter\n
 832:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         CR1          M             LL_USART_ConfigCharacter\n
 833:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         CR2          STOP          LL_USART_ConfigCharacter
 834:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
 835:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  DataWidth This parameter can be one of the following values:
 836:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_8B
 837:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_9B
 838:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  Parity This parameter can be one of the following values:
 839:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_NONE
 840:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_EVEN
 841:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_ODD
 842:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  StopBits This parameter can be one of the following values:
 843:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_0_5
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 42


 844:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1
 845:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1_5
 846:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_2
 847:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval None
 848:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 849:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigCharacter(USART_TypeDef *USARTx, uint32_t DataWidth, uint32_t P
 850:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****                                               uint32_t StopBits)
 851:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
 852:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_PS | USART_CR1_PCE | USART_CR1_M, Parity | DataWidth);
 853:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_STOP, StopBits);
 854:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
 855:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 856:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
 857:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Set Address of the USART node.
 858:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   This is used in multiprocessor communication during Mute mode or Stop mode,
 859:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         for wake up with address mark detection.
 860:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll CR2          ADD           LL_USART_SetNodeAddress
 861:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
 862:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  NodeAddress 4 bit Address of the USART node.
 863:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval None
 864:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 865:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetNodeAddress(USART_TypeDef *USARTx, uint32_t NodeAddress)
 866:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
 867:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_ADD, (NodeAddress & USART_CR2_ADD));
 868:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
 869:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 870:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
 871:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Return 4 bit Address of the USART node as set in ADD field of CR2.
 872:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   only 4bits (b3-b0) of returned value are relevant (b31-b4 are not relevant)
 873:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll CR2          ADD           LL_USART_GetNodeAddress
 874:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
 875:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval Address of the USART node (Value between Min_Data=0 and Max_Data=255)
 876:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 877:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetNodeAddress(USART_TypeDef *USARTx)
 878:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
 879:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_ADD));
 880:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
 881:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 882:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
 883:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Enable RTS HW Flow Control
 884:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
 885:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
 886:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll CR3          RTSE          LL_USART_EnableRTSHWFlowCtrl
 887:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
 888:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval None
 889:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 890:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableRTSHWFlowCtrl(USART_TypeDef *USARTx)
 891:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
 892:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_RTSE);
 893:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
 894:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 895:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
 896:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Disable RTS HW Flow Control
 897:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
 898:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
 899:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll CR3          RTSE          LL_USART_DisableRTSHWFlowCtrl
 900:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 43


 901:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval None
 902:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 903:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableRTSHWFlowCtrl(USART_TypeDef *USARTx)
 904:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
 905:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_RTSE);
 906:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
 907:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 908:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
 909:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Enable CTS HW Flow Control
 910:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
 911:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
 912:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll CR3          CTSE          LL_USART_EnableCTSHWFlowCtrl
 913:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
 914:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval None
 915:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 916:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableCTSHWFlowCtrl(USART_TypeDef *USARTx)
 917:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
 918:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_CTSE);
 919:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
 920:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 921:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
 922:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Disable CTS HW Flow Control
 923:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
 924:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
 925:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll CR3          CTSE          LL_USART_DisableCTSHWFlowCtrl
 926:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
 927:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval None
 928:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 929:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableCTSHWFlowCtrl(USART_TypeDef *USARTx)
 930:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
 931:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_CTSE);
 932:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
 933:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 934:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
 935:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Configure HW Flow Control mode (both CTS and RTS)
 936:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
 937:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
 938:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll CR3          RTSE          LL_USART_SetHWFlowCtrl\n
 939:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         CR3          CTSE          LL_USART_SetHWFlowCtrl
 940:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
 941:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  HardwareFlowControl This parameter can be one of the following values:
 942:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_NONE
 943:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_RTS
 944:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_CTS
 945:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_RTS_CTS
 946:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval None
 947:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 948:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetHWFlowCtrl(USART_TypeDef *USARTx, uint32_t HardwareFlowControl)
 949:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
 950:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   MODIFY_REG(USARTx->CR3, USART_CR3_RTSE | USART_CR3_CTSE, HardwareFlowControl);
 951:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
 952:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 953:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
 954:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Return HW Flow Control configuration (both CTS and RTS)
 955:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
 956:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
 957:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll CR3          RTSE          LL_USART_GetHWFlowCtrl\n
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 44


 958:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         CR3          CTSE          LL_USART_GetHWFlowCtrl
 959:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
 960:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 961:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_NONE
 962:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_RTS
 963:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_CTS
 964:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_RTS_CTS
 965:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 966:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetHWFlowCtrl(USART_TypeDef *USARTx)
 967:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
 968:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR3, USART_CR3_RTSE | USART_CR3_CTSE));
 969:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
 970:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 971:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
 972:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Enable One bit sampling method
 973:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll CR3          ONEBIT        LL_USART_EnableOneBitSamp
 974:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
 975:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval None
 976:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 977:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableOneBitSamp(USART_TypeDef *USARTx)
 978:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
 979:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_ONEBIT);
 980:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
 981:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 982:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
 983:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Disable One bit sampling method
 984:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll CR3          ONEBIT        LL_USART_DisableOneBitSamp
 985:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
 986:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval None
 987:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 988:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableOneBitSamp(USART_TypeDef *USARTx)
 989:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
 990:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_ONEBIT);
 991:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
 992:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
 993:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
 994:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Indicate if One bit sampling method is enabled
 995:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll CR3          ONEBIT        LL_USART_IsEnabledOneBitSamp
 996:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
 997:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval State of bit (1 or 0).
 998:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
 999:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledOneBitSamp(USART_TypeDef *USARTx)
1000:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
1001:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   return (READ_BIT(USARTx->CR3, USART_CR3_ONEBIT) == (USART_CR3_ONEBIT));
1002:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
1003:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
1004:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
1005:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Configure USART BRR register for achieving expected Baud Rate value.
1006:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   Compute and set USARTDIV value in BRR Register (full BRR content)
1007:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         according to used Peripheral Clock, Oversampling mode, and expected Baud Rate values
1008:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   Peripheral clock and Baud rate values provided as function parameters should be valid
1009:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         (Baud rate value != 0)
1010:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll BRR          BRR           LL_USART_SetBaudRate
1011:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
1012:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  PeriphClk Peripheral Clock
1013:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  OverSampling This parameter can be one of the following values:
1014:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_16
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 45


1015:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_8
1016:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  BaudRate Baud Rate
1017:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval None
1018:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
1019:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetBaudRate(USART_TypeDef *USARTx, uint32_t PeriphClk, uint32_t OverS
1020:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****                                           uint32_t BaudRate)
1021:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
1022:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   if (OverSampling == LL_USART_OVERSAMPLING_8)
1023:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   {
1024:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****     USARTx->BRR = (uint16_t)(__LL_USART_DIV_SAMPLING8(PeriphClk, BaudRate));
1025:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   }
1026:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   else
1027:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   {
1028:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****     USARTx->BRR = (uint16_t)(__LL_USART_DIV_SAMPLING16(PeriphClk, BaudRate));
1029:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   }
1030:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
1031:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
1032:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
1033:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Return current Baud Rate value, according to USARTDIV present in BRR register
1034:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         (full BRR content), and to used Peripheral Clock and Oversampling mode values
1035:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   In case of non-initialized or invalid value stored in BRR register, value 0 will be ret
1036:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll BRR          BRR           LL_USART_GetBaudRate
1037:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
1038:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  PeriphClk Peripheral Clock
1039:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  OverSampling This parameter can be one of the following values:
1040:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_16
1041:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_8
1042:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval Baud Rate
1043:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
1044:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetBaudRate(USART_TypeDef *USARTx, uint32_t PeriphClk, uint32_t O
1045:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
1046:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   register uint32_t usartdiv = 0x0U;
1047:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   register uint32_t brrresult = 0x0U;
1048:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
1049:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   usartdiv = USARTx->BRR;
1050:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
1051:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   if (OverSampling == LL_USART_OVERSAMPLING_8)
1052:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   {
1053:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****     if ((usartdiv & 0xFFF7U) != 0U)
1054:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****     {
1055:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****       usartdiv = (uint16_t)((usartdiv & 0xFFF0U) | ((usartdiv & 0x0007U) << 1U)) ;
1056:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****       brrresult = (PeriphClk * 2U) / usartdiv;
1057:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****     }
1058:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   }
1059:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   else
1060:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   {
1061:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****     if ((usartdiv & 0xFFFFU) != 0U)
1062:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****     {
1063:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****       brrresult = PeriphClk / usartdiv;
1064:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****     }
1065:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   }
1066:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   return (brrresult);
1067:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
1068:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
1069:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
1070:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @}
1071:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 46


1072:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
1073:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration_IRDA Configuration functions related to Irda feature
1074:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @{
1075:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
1076:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
1077:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
1078:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Enable IrDA mode
1079:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   Macro @ref IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1080:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1081:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll CR3          IREN          LL_USART_EnableIrda
1082:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
1083:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval None
1084:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
1085:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIrda(USART_TypeDef *USARTx)
1086:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
1087:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_IREN);
1088:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
1089:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
1090:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
1091:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Disable IrDA mode
1092:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   Macro @ref IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1093:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1094:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll CR3          IREN          LL_USART_DisableIrda
1095:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
1096:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval None
1097:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
1098:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIrda(USART_TypeDef *USARTx)
1099:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
1100:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_IREN);
1101:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
1102:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
1103:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
1104:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Indicate if IrDA mode is enabled
1105:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   Macro @ref IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1106:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1107:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll CR3          IREN          LL_USART_IsEnabledIrda
1108:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
1109:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1110:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
1111:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIrda(USART_TypeDef *USARTx)
1112:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
1113:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   return (READ_BIT(USARTx->CR3, USART_CR3_IREN) == (USART_CR3_IREN));
1114:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
1115:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
1116:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
1117:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Configure IrDA Power Mode (Normal or Low Power)
1118:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   Macro @ref IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1119:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1120:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll CR3          IRLP          LL_USART_SetIrdaPowerMode
1121:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
1122:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  PowerMode This parameter can be one of the following values:
1123:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_IRDA_POWER_NORMAL
1124:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_IRDA_POWER_LOW
1125:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval None
1126:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
1127:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetIrdaPowerMode(USART_TypeDef *USARTx, uint32_t PowerMode)
1128:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 47


1129:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   MODIFY_REG(USARTx->CR3, USART_CR3_IRLP, PowerMode);
1130:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
1131:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
1132:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
1133:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Retrieve IrDA Power Mode configuration (Normal or Low Power)
1134:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   Macro @ref IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1135:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1136:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll CR3          IRLP          LL_USART_GetIrdaPowerMode
1137:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
1138:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1139:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_IRDA_POWER_NORMAL
1140:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_2EDGE
1141:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
1142:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetIrdaPowerMode(USART_TypeDef *USARTx)
1143:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
1144:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR3, USART_CR3_IRLP));
1145:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
1146:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
1147:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
1148:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Set Irda prescaler value, used for dividing the USART clock source
1149:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         to achieve the Irda Low Power frequency (8 bits value)
1150:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   Macro @ref IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1151:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1152:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll GTPR         PSC           LL_USART_SetIrdaPrescaler
1153:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
1154:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  PrescalerValue Value between Min_Data=0x00 and Max_Data=0xFF
1155:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval None
1156:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
1157:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetIrdaPrescaler(USART_TypeDef *USARTx, uint32_t PrescalerValue)
1158:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
1159:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   MODIFY_REG(USARTx->GTPR, USART_GTPR_PSC, PrescalerValue);
1160:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
1161:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
1162:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
1163:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Return Irda prescaler value, used for dividing the USART clock source
1164:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         to achieve the Irda Low Power frequency (8 bits value)
1165:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   Macro @ref IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1166:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1167:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll GTPR         PSC           LL_USART_GetIrdaPrescaler
1168:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
1169:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval Irda prescaler value (Value between Min_Data=0x00 and Max_Data=0xFF)
1170:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
1171:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetIrdaPrescaler(USART_TypeDef *USARTx)
1172:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
1173:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->GTPR, USART_GTPR_PSC));
1174:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
1175:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
1176:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
1177:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @}
1178:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
1179:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
1180:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration_Smartcard Configuration functions related to Smartcard feat
1181:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @{
1182:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
1183:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
1184:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
1185:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Enable Smartcard NACK transmission
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 48


1186:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1187:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1188:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll CR3          NACK          LL_USART_EnableSmartcardNACK
1189:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
1190:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval None
1191:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
1192:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableSmartcardNACK(USART_TypeDef *USARTx)
1193:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
1194:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_NACK);
1195:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
1196:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
1197:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
1198:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Disable Smartcard NACK transmission
1199:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1200:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1201:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll CR3          NACK          LL_USART_DisableSmartcardNACK
1202:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
1203:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval None
1204:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
1205:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableSmartcardNACK(USART_TypeDef *USARTx)
1206:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
1207:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_NACK);
1208:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
1209:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
1210:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
1211:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Indicate if Smartcard NACK transmission is enabled
1212:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1213:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1214:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll CR3          NACK          LL_USART_IsEnabledSmartcardNACK
1215:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
1216:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1217:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
1218:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledSmartcardNACK(USART_TypeDef *USARTx)
1219:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
1220:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   return (READ_BIT(USARTx->CR3, USART_CR3_NACK) == (USART_CR3_NACK));
1221:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
1222:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
1223:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
1224:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Enable Smartcard mode
1225:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1226:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1227:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll CR3          SCEN          LL_USART_EnableSmartcard
1228:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
1229:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval None
1230:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
1231:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableSmartcard(USART_TypeDef *USARTx)
1232:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
1233:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_SCEN);
1234:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
1235:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
1236:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
1237:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Disable Smartcard mode
1238:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1239:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1240:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll CR3          SCEN          LL_USART_DisableSmartcard
1241:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
1242:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval None
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 49


1243:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
1244:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableSmartcard(USART_TypeDef *USARTx)
1245:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
1246:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_SCEN);
1247:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
1248:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
1249:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
1250:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Indicate if Smartcard mode is enabled
1251:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1252:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1253:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll CR3          SCEN          LL_USART_IsEnabledSmartcard
1254:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
1255:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1256:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
1257:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledSmartcard(USART_TypeDef *USARTx)
1258:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
1259:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   return (READ_BIT(USARTx->CR3, USART_CR3_SCEN) == (USART_CR3_SCEN));
1260:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
1261:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
1262:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
1263:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Set Smartcard prescaler value, used for dividing the USART clock
1264:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         source to provide the SMARTCARD Clock (5 bits value)
1265:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1266:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1267:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll GTPR         PSC           LL_USART_SetSmartcardPrescaler
1268:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
1269:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  PrescalerValue Value between Min_Data=0 and Max_Data=31
1270:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval None
1271:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
1272:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetSmartcardPrescaler(USART_TypeDef *USARTx, uint32_t PrescalerValue)
1273:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
1274:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   MODIFY_REG(USARTx->GTPR, USART_GTPR_PSC, PrescalerValue);
1275:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
1276:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
1277:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
1278:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Return Smartcard prescaler value, used for dividing the USART clock
1279:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         source to provide the SMARTCARD Clock (5 bits value)
1280:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1281:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1282:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll GTPR         PSC           LL_USART_GetSmartcardPrescaler
1283:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
1284:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval Smartcard prescaler value (Value between Min_Data=0 and Max_Data=31)
1285:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
1286:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetSmartcardPrescaler(USART_TypeDef *USARTx)
1287:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
1288:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->GTPR, USART_GTPR_PSC));
1289:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
1290:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
1291:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
1292:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Set Smartcard Guard time value, expressed in nb of baud clocks periods
1293:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         (GT[7:0] bits : Guard time value)
1294:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1295:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1296:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll GTPR         GT            LL_USART_SetSmartcardGuardTime
1297:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
1298:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  GuardTime Value between Min_Data=0x00 and Max_Data=0xFF
1299:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval None
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 50


1300:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
1301:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetSmartcardGuardTime(USART_TypeDef *USARTx, uint32_t GuardTime)
1302:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
1303:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   MODIFY_REG(USARTx->GTPR, USART_GTPR_GT, GuardTime << USART_POSITION_GTPR_GT);
1304:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
1305:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
1306:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
1307:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Return Smartcard Guard time value, expressed in nb of baud clocks periods
1308:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         (GT[7:0] bits : Guard time value)
1309:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1310:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1311:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll GTPR         GT            LL_USART_GetSmartcardGuardTime
1312:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
1313:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval Smartcard Guard time value (Value between Min_Data=0x00 and Max_Data=0xFF)
1314:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
1315:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetSmartcardGuardTime(USART_TypeDef *USARTx)
1316:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
1317:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->GTPR, USART_GTPR_GT) >> USART_POSITION_GTPR_GT);
1318:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
1319:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
1320:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
1321:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @}
1322:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
1323:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
1324:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration_HalfDuplex Configuration functions related to Half Duplex f
1325:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @{
1326:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
1327:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
1328:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
1329:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Enable Single Wire Half-Duplex mode
1330:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HALFDUPLEX_INSTANCE(USARTx) can be used to check whether or not
1331:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         Half-Duplex mode is supported by the USARTx instance.
1332:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll CR3          HDSEL         LL_USART_EnableHalfDuplex
1333:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
1334:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval None
1335:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
1336:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableHalfDuplex(USART_TypeDef *USARTx)
1337:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
1338:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_HDSEL);
1339:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
1340:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
1341:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
1342:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Disable Single Wire Half-Duplex mode
1343:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HALFDUPLEX_INSTANCE(USARTx) can be used to check whether or not
1344:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         Half-Duplex mode is supported by the USARTx instance.
1345:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll CR3          HDSEL         LL_USART_DisableHalfDuplex
1346:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
1347:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval None
1348:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
1349:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableHalfDuplex(USART_TypeDef *USARTx)
1350:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
1351:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_HDSEL);
1352:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
1353:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
1354:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
1355:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Indicate if Single Wire Half-Duplex mode is enabled
1356:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HALFDUPLEX_INSTANCE(USARTx) can be used to check whether or not
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 51


1357:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         Half-Duplex mode is supported by the USARTx instance.
1358:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll CR3          HDSEL         LL_USART_IsEnabledHalfDuplex
1359:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
1360:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1361:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
1362:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledHalfDuplex(USART_TypeDef *USARTx)
1363:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
1364:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   return (READ_BIT(USARTx->CR3, USART_CR3_HDSEL) == (USART_CR3_HDSEL));
1365:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
1366:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
1367:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
1368:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @}
1369:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
1370:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
1371:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration_LIN Configuration functions related to LIN feature
1372:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @{
1373:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
1374:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
1375:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
1376:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Set LIN Break Detection Length
1377:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   Macro @ref IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
1378:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
1379:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll CR2          LBDL          LL_USART_SetLINBrkDetectionLen
1380:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
1381:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  LINBDLength This parameter can be one of the following values:
1382:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_LINBREAK_DETECT_10B
1383:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_LINBREAK_DETECT_11B
1384:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval None
1385:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
1386:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetLINBrkDetectionLen(USART_TypeDef *USARTx, uint32_t LINBDLength)
1387:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
1388:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_LBDL, LINBDLength);
1389:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
1390:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
1391:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
1392:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Return LIN Break Detection Length
1393:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   Macro @ref IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
1394:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
1395:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll CR2          LBDL          LL_USART_GetLINBrkDetectionLen
1396:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
1397:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1398:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_LINBREAK_DETECT_10B
1399:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         @arg @ref LL_USART_LINBREAK_DETECT_11B
1400:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
1401:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetLINBrkDetectionLen(USART_TypeDef *USARTx)
1402:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
1403:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_LBDL));
1404:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
1405:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
1406:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
1407:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Enable LIN mode
1408:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   Macro @ref IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
1409:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
1410:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_EnableLIN
1411:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
1412:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval None
1413:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 52


1414:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableLIN(USART_TypeDef *USARTx)
1415:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
1416:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_LINEN);
1417:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
1418:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
1419:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
1420:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Disable LIN mode
1421:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   Macro @ref IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
1422:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
1423:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_DisableLIN
1424:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
1425:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval None
1426:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
1427:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableLIN(USART_TypeDef *USARTx)
1428:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
1429:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_LINEN);
1430:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
1431:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
1432:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
1433:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Indicate if LIN mode is enabled
1434:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   Macro @ref IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
1435:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
1436:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_IsEnabledLIN
1437:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
1438:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1439:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
1440:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledLIN(USART_TypeDef *USARTx)
1441:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
1442:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   return (READ_BIT(USARTx->CR2, USART_CR2_LINEN) == (USART_CR2_LINEN));
1443:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
1444:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
1445:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
1446:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @}
1447:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
1448:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
1449:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /** @defgroup USART_LL_EF_AdvancedConfiguration Advanced Configurations services
1450:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @{
1451:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
1452:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
1453:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
1454:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in Asynchronous Mode (UART)
1455:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   In UART mode, the following bits must be kept cleared:
1456:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *           - LINEN bit in the USART_CR2 register,
1457:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *           - CLKEN bit in the USART_CR2 register,
1458:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *           - SCEN bit in the USART_CR3 register,
1459:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *           - IREN bit in the USART_CR3 register,
1460:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *           - HDSEL bit in the USART_CR3 register.
1461:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
1462:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         - Clear LINEN in CR2 using @ref LL_USART_DisableLIN() function
1463:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         - Clear CLKEN in CR2 using @ref LL_USART_DisableSCLKOutput() function
1464:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         - Clear SCEN in CR3 using @ref LL_USART_DisableSmartcard() function
1465:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         - Clear IREN in CR3 using @ref LL_USART_DisableIrda() function
1466:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         - Clear HDSEL in CR3 using @ref LL_USART_DisableHalfDuplex() function
1467:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   Other remaining configurations items related to Asynchronous Mode
1468:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         (as Baud Rate, Word length, Parity, ...) should be set using
1469:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         dedicated functions
1470:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_ConfigAsyncMode\n
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 53


1471:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         CR2          CLKEN         LL_USART_ConfigAsyncMode\n
1472:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigAsyncMode\n
1473:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         CR3          IREN          LL_USART_ConfigAsyncMode\n
1474:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigAsyncMode
1475:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
1476:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval None
1477:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
1478:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigAsyncMode(USART_TypeDef *USARTx)
1479:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
1480:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   /* In Asynchronous mode, the following bits must be kept cleared:
1481:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   - LINEN, CLKEN bits in the USART_CR2 register,
1482:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   - SCEN, IREN and HDSEL bits in the USART_CR3 register.*/
1483:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
1484:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_IREN | USART_CR3_HDSEL));
1485:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
1486:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
1487:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
1488:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in Synchronous Mode
1489:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   In Synchronous mode, the following bits must be kept cleared:
1490:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *           - LINEN bit in the USART_CR2 register,
1491:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *           - SCEN bit in the USART_CR3 register,
1492:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *           - IREN bit in the USART_CR3 register,
1493:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *           - HDSEL bit in the USART_CR3 register.
1494:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         This function also sets the USART in Synchronous mode.
1495:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
1496:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1497:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
1498:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         - Clear LINEN in CR2 using @ref LL_USART_DisableLIN() function
1499:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         - Clear IREN in CR3 using @ref LL_USART_DisableIrda() function
1500:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         - Clear SCEN in CR3 using @ref LL_USART_DisableSmartcard() function
1501:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         - Clear HDSEL in CR3 using @ref LL_USART_DisableHalfDuplex() function
1502:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         - Set CLKEN in CR2 using @ref LL_USART_EnableSCLKOutput() function
1503:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   Other remaining configurations items related to Synchronous Mode
1504:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         (as Baud Rate, Word length, Parity, Clock Polarity, ...) should be set using
1505:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         dedicated functions
1506:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_ConfigSyncMode\n
1507:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         CR2          CLKEN         LL_USART_ConfigSyncMode\n
1508:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigSyncMode\n
1509:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         CR3          IREN          LL_USART_ConfigSyncMode\n
1510:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigSyncMode
1511:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
1512:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval None
1513:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
1514:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigSyncMode(USART_TypeDef *USARTx)
1515:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
1516:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   /* In Synchronous mode, the following bits must be kept cleared:
1517:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   - LINEN bit in the USART_CR2 register,
1518:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   - SCEN, IREN and HDSEL bits in the USART_CR3 register.*/
1519:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN));
1520:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_IREN | USART_CR3_HDSEL));
1521:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   /* set the UART/USART in Synchronous mode */
1522:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_CLKEN);
1523:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
1524:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
1525:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
1526:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in LIN Mode
1527:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   In LIN mode, the following bits must be kept cleared:
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 54


1528:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *           - STOP and CLKEN bits in the USART_CR2 register,
1529:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *           - SCEN bit in the USART_CR3 register,
1530:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *           - IREN bit in the USART_CR3 register,
1531:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *           - HDSEL bit in the USART_CR3 register.
1532:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         This function also set the UART/USART in LIN mode.
1533:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   Macro @ref IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
1534:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
1535:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
1536:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         - Clear CLKEN in CR2 using @ref LL_USART_DisableSCLKOutput() function
1537:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         - Clear STOP in CR2 using @ref LL_USART_SetStopBitsLength() function
1538:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         - Clear SCEN in CR3 using @ref LL_USART_DisableSmartcard() function
1539:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         - Clear IREN in CR3 using @ref LL_USART_DisableIrda() function
1540:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         - Clear HDSEL in CR3 using @ref LL_USART_DisableHalfDuplex() function
1541:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         - Set LINEN in CR2 using @ref LL_USART_EnableLIN() function
1542:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   Other remaining configurations items related to LIN Mode
1543:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         (as Baud Rate, Word length, LIN Break Detection Length, ...) should be set using
1544:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         dedicated functions
1545:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll CR2          CLKEN         LL_USART_ConfigLINMode\n
1546:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         CR2          STOP          LL_USART_ConfigLINMode\n
1547:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         CR2          LINEN         LL_USART_ConfigLINMode\n
1548:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         CR3          IREN          LL_USART_ConfigLINMode\n
1549:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigLINMode\n
1550:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigLINMode
1551:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
1552:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval None
1553:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
1554:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigLINMode(USART_TypeDef *USARTx)
1555:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
1556:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   /* In LIN mode, the following bits must be kept cleared:
1557:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   - STOP and CLKEN bits in the USART_CR2 register,
1558:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   - IREN, SCEN and HDSEL bits in the USART_CR3 register.*/
1559:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_CLKEN | USART_CR2_STOP));
1560:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_IREN | USART_CR3_SCEN | USART_CR3_HDSEL));
1561:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   /* Set the UART/USART in LIN mode */
1562:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_LINEN);
1563:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
1564:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
1565:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
1566:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in Half Duplex Mode
1567:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   In Half Duplex mode, the following bits must be kept cleared:
1568:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *           - LINEN bit in the USART_CR2 register,
1569:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *           - CLKEN bit in the USART_CR2 register,
1570:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *           - SCEN bit in the USART_CR3 register,
1571:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *           - IREN bit in the USART_CR3 register,
1572:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         This function also sets the UART/USART in Half Duplex mode.
1573:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HALFDUPLEX_INSTANCE(USARTx) can be used to check whether or not
1574:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         Half-Duplex mode is supported by the USARTx instance.
1575:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
1576:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         - Clear LINEN in CR2 using @ref LL_USART_DisableLIN() function
1577:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         - Clear CLKEN in CR2 using @ref LL_USART_DisableSCLKOutput() function
1578:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         - Clear SCEN in CR3 using @ref LL_USART_DisableSmartcard() function
1579:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         - Clear IREN in CR3 using @ref LL_USART_DisableIrda() function
1580:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         - Set HDSEL in CR3 using @ref LL_USART_EnableHalfDuplex() function
1581:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   Other remaining configurations items related to Half Duplex Mode
1582:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         (as Baud Rate, Word length, Parity, ...) should be set using
1583:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         dedicated functions
1584:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_ConfigHalfDuplexMode\n
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 55


1585:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         CR2          CLKEN         LL_USART_ConfigHalfDuplexMode\n
1586:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigHalfDuplexMode\n
1587:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigHalfDuplexMode\n
1588:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         CR3          IREN          LL_USART_ConfigHalfDuplexMode
1589:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
1590:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval None
1591:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
1592:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigHalfDuplexMode(USART_TypeDef *USARTx)
1593:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
1594:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   /* In Half Duplex mode, the following bits must be kept cleared:
1595:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   - LINEN and CLKEN bits in the USART_CR2 register,
1596:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   - SCEN and IREN bits in the USART_CR3 register.*/
1597:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
1598:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_IREN));
1599:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   /* set the UART/USART in Half Duplex mode */
1600:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_HDSEL);
1601:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
1602:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
1603:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
1604:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in Smartcard Mode
1605:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   In Smartcard mode, the following bits must be kept cleared:
1606:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *           - LINEN bit in the USART_CR2 register,
1607:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *           - IREN bit in the USART_CR3 register,
1608:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *           - HDSEL bit in the USART_CR3 register.
1609:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         This function also configures Stop bits to 1.5 bits and
1610:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         sets the USART in Smartcard mode (SCEN bit).
1611:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         Clock Output is also enabled (CLKEN).
1612:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1613:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1614:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
1615:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         - Clear LINEN in CR2 using @ref LL_USART_DisableLIN() function
1616:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         - Clear IREN in CR3 using @ref LL_USART_DisableIrda() function
1617:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         - Clear HDSEL in CR3 using @ref LL_USART_DisableHalfDuplex() function
1618:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         - Configure STOP in CR2 using @ref LL_USART_SetStopBitsLength() function
1619:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         - Set CLKEN in CR2 using @ref LL_USART_EnableSCLKOutput() function
1620:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         - Set SCEN in CR3 using @ref LL_USART_EnableSmartcard() function
1621:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   Other remaining configurations items related to Smartcard Mode
1622:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         (as Baud Rate, Word length, Parity, ...) should be set using
1623:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         dedicated functions
1624:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_ConfigSmartcardMode\n
1625:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         CR2          STOP          LL_USART_ConfigSmartcardMode\n
1626:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         CR2          CLKEN         LL_USART_ConfigSmartcardMode\n
1627:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigSmartcardMode\n
1628:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigSmartcardMode
1629:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
1630:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval None
1631:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
1632:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigSmartcardMode(USART_TypeDef *USARTx)
1633:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
1634:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   /* In Smartcard mode, the following bits must be kept cleared:
1635:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   - LINEN bit in the USART_CR2 register,
1636:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   - IREN and HDSEL bits in the USART_CR3 register.*/
1637:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN));
1638:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_IREN | USART_CR3_HDSEL));
1639:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   /* Configure Stop bits to 1.5 bits */
1640:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   /* Synchronous mode is activated by default */
1641:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   SET_BIT(USARTx->CR2, (USART_CR2_STOP_0 | USART_CR2_STOP_1 | USART_CR2_CLKEN));
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 56


1642:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   /* set the UART/USART in Smartcard mode */
1643:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_SCEN);
1644:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
1645:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
1646:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
1647:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in Irda Mode
1648:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   In IRDA mode, the following bits must be kept cleared:
1649:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *           - LINEN bit in the USART_CR2 register,
1650:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *           - STOP and CLKEN bits in the USART_CR2 register,
1651:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *           - SCEN bit in the USART_CR3 register,
1652:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *           - HDSEL bit in the USART_CR3 register.
1653:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         This function also sets the UART/USART in IRDA mode (IREN bit).
1654:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   Macro @ref IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1655:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1656:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
1657:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         - Clear LINEN in CR2 using @ref LL_USART_DisableLIN() function
1658:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         - Clear CLKEN in CR2 using @ref LL_USART_DisableSCLKOutput() function
1659:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         - Clear SCEN in CR3 using @ref LL_USART_DisableSmartcard() function
1660:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         - Clear HDSEL in CR3 using @ref LL_USART_DisableHalfDuplex() function
1661:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         - Configure STOP in CR2 using @ref LL_USART_SetStopBitsLength() function
1662:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         - Set IREN in CR3 using @ref LL_USART_EnableIrda() function
1663:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   Other remaining configurations items related to Irda Mode
1664:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         (as Baud Rate, Word length, Power mode, ...) should be set using
1665:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         dedicated functions
1666:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_ConfigIrdaMode\n
1667:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         CR2          CLKEN         LL_USART_ConfigIrdaMode\n
1668:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         CR2          STOP          LL_USART_ConfigIrdaMode\n
1669:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigIrdaMode\n
1670:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigIrdaMode\n
1671:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         CR3          IREN          LL_USART_ConfigIrdaMode
1672:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
1673:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval None
1674:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
1675:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigIrdaMode(USART_TypeDef *USARTx)
1676:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
1677:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   /* In IRDA mode, the following bits must be kept cleared:
1678:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   - LINEN, STOP and CLKEN bits in the USART_CR2 register,
1679:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   - SCEN and HDSEL bits in the USART_CR3 register.*/
1680:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN | USART_CR2_STOP));
1681:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL));
1682:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   /* set the UART/USART in IRDA mode */
1683:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_IREN);
1684:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
1685:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
1686:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
1687:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in Multi processor Mode
1688:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         (several USARTs connected in a network, one of the USARTs can be the master,
1689:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         its TX output connected to the RX inputs of the other slaves USARTs).
1690:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   In MultiProcessor mode, the following bits must be kept cleared:
1691:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *           - LINEN bit in the USART_CR2 register,
1692:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *           - CLKEN bit in the USART_CR2 register,
1693:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *           - SCEN bit in the USART_CR3 register,
1694:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *           - IREN bit in the USART_CR3 register,
1695:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *           - HDSEL bit in the USART_CR3 register.
1696:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
1697:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         - Clear LINEN in CR2 using @ref LL_USART_DisableLIN() function
1698:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         - Clear CLKEN in CR2 using @ref LL_USART_DisableSCLKOutput() function
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 57


1699:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         - Clear SCEN in CR3 using @ref LL_USART_DisableSmartcard() function
1700:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         - Clear IREN in CR3 using @ref LL_USART_DisableIrda() function
1701:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         - Clear HDSEL in CR3 using @ref LL_USART_DisableHalfDuplex() function
1702:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @note   Other remaining configurations items related to Multi processor Mode
1703:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         (as Baud Rate, Wake Up Method, Node address, ...) should be set using
1704:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         dedicated functions
1705:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_ConfigMultiProcessMode\n
1706:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         CR2          CLKEN         LL_USART_ConfigMultiProcessMode\n
1707:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigMultiProcessMode\n
1708:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigMultiProcessMode\n
1709:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   *         CR3          IREN          LL_USART_ConfigMultiProcessMode
1710:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
1711:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval None
1712:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
1713:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigMultiProcessMode(USART_TypeDef *USARTx)
1714:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
1715:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   /* In Multi Processor mode, the following bits must be kept cleared:
1716:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   - LINEN and CLKEN bits in the USART_CR2 register,
1717:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   - IREN, SCEN and HDSEL bits in the USART_CR3 register.*/
1718:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
1719:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
1720:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
1721:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
1722:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
1723:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @}
1724:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
1725:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
1726:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /** @defgroup USART_LL_EF_FLAG_Management FLAG_Management
1727:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @{
1728:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
1729:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
1730:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
1731:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Check if the USART Parity Error Flag is set or not
1732:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll SR           PE            LL_USART_IsActiveFlag_PE
1733:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
1734:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1735:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
1736:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_PE(USART_TypeDef *USARTx)
1737:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
1738:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   return (READ_BIT(USARTx->SR, USART_SR_PE) == (USART_SR_PE));
1739:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
1740:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
1741:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
1742:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Check if the USART Framing Error Flag is set or not
1743:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll SR           FE            LL_USART_IsActiveFlag_FE
1744:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
1745:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1746:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
1747:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_FE(USART_TypeDef *USARTx)
1748:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
1749:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   return (READ_BIT(USARTx->SR, USART_SR_FE) == (USART_SR_FE));
1750:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
1751:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
1752:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
1753:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Check if the USART Noise error detected Flag is set or not
1754:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll SR           NF            LL_USART_IsActiveFlag_NE
1755:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 58


1756:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1757:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
1758:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_NE(USART_TypeDef *USARTx)
1759:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
1760:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   return (READ_BIT(USARTx->SR, USART_SR_NE) == (USART_SR_NE));
1761:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
1762:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
1763:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
1764:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Check if the USART OverRun Error Flag is set or not
1765:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll SR           ORE           LL_USART_IsActiveFlag_ORE
1766:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
1767:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1768:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
1769:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_ORE(USART_TypeDef *USARTx)
1770:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
1771:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   return (READ_BIT(USARTx->SR, USART_SR_ORE) == (USART_SR_ORE));
1772:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
1773:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
1774:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
1775:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Check if the USART IDLE line detected Flag is set or not
1776:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll SR           IDLE          LL_USART_IsActiveFlag_IDLE
1777:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
1778:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1779:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
1780:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_IDLE(USART_TypeDef *USARTx)
1781:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
1782:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   return (READ_BIT(USARTx->SR, USART_SR_IDLE) == (USART_SR_IDLE));
1783:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** }
1784:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** 
1785:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** /**
1786:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @brief  Check if the USART Read Data Register Not Empty Flag is set or not
1787:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @rmtoll SR           RXNE          LL_USART_IsActiveFlag_RXNE
1788:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @param  USARTx USART Instance
1789:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1790:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   */
1791:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_RXNE(USART_TypeDef *USARTx)
 310              		.loc 3 1791 26 view .LVU40
 311              	.LBB21:
1792:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h **** {
1793:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usart.h ****   return (READ_BIT(USARTx->SR, USART_SR_RXNE) == (USART_SR_RXNE));
 312              		.loc 3 1793 3 view .LVU41
 313              		.loc 3 1793 11 is_stmt 0 view .LVU42
 314 0002 044B     		ldr	r3, .L26
 315 0004 1B68     		ldr	r3, [r3]
 316              	.LVL6:
 317              		.loc 3 1793 11 view .LVU43
 318              	.LBE21:
 319              	.LBE20:
 320              		.loc 1 231 6 view .LVU44
 321 0006 13F0200F 		tst	r3, #32
 322 000a 00D1     		bne	.L25
 323              	.L22:
 232:Core/Src/stm32l1xx_it.c ****   {
 233:Core/Src/stm32l1xx_it.c ****     receiveByteIntoBuffer();
 234:Core/Src/stm32l1xx_it.c ****   }
 235:Core/Src/stm32l1xx_it.c **** 
 236:Core/Src/stm32l1xx_it.c ****   /* USER CODE END USART1_IRQn 0 */
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 59


 237:Core/Src/stm32l1xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 1 */
 238:Core/Src/stm32l1xx_it.c **** 
 239:Core/Src/stm32l1xx_it.c ****   /* USER CODE END USART1_IRQn 1 */
 240:Core/Src/stm32l1xx_it.c **** }
 324              		.loc 1 240 1 view .LVU45
 325 000c 08BD     		pop	{r3, pc}
 326              	.L25:
 233:Core/Src/stm32l1xx_it.c ****   }
 327              		.loc 1 233 5 is_stmt 1 view .LVU46
 328 000e FFF7FEFF 		bl	receiveByteIntoBuffer
 329              	.LVL7:
 330              		.loc 1 240 1 is_stmt 0 view .LVU47
 331 0012 FBE7     		b	.L22
 332              	.L27:
 333              		.align	2
 334              	.L26:
 335 0014 00380140 		.word	1073821696
 336              		.cfi_endproc
 337              	.LFE842:
 339              		.section	.text.TIM6_IRQHandler,"ax",%progbits
 340              		.align	1
 341              		.global	TIM6_IRQHandler
 342              		.syntax unified
 343              		.thumb
 344              		.thumb_func
 345              		.fpu softvfp
 347              	TIM6_IRQHandler:
 348              	.LFB843:
 241:Core/Src/stm32l1xx_it.c **** 
 242:Core/Src/stm32l1xx_it.c **** /**
 243:Core/Src/stm32l1xx_it.c ****   * @brief This function handles TIM6 global interrupt.
 244:Core/Src/stm32l1xx_it.c ****   */
 245:Core/Src/stm32l1xx_it.c **** void TIM6_IRQHandler(void)
 246:Core/Src/stm32l1xx_it.c **** {
 349              		.loc 1 246 1 is_stmt 1 view -0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 0
 352              		@ frame_needed = 0, uses_anonymous_args = 0
 353              		@ link register save eliminated.
 247:Core/Src/stm32l1xx_it.c ****   /* USER CODE BEGIN TIM6_IRQn 0 */
 248:Core/Src/stm32l1xx_it.c ****   if (LL_TIM_IsActiveFlag_UPDATE(TIM6))
 354              		.loc 1 248 3 view .LVU49
 355              	.LVL8:
 356              	.LBB22:
 357              	.LBI22:
 358              		.file 4 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h"
   1:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
   2:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   ******************************************************************************
   3:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @file    stm32l1xx_ll_tim.h
   4:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @author  MCD Application Team
   5:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief   Header file of TIM LL module.
   6:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   ******************************************************************************
   7:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****     * @attention
   8:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *
   9:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  10:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * All rights reserved.</center></h2>
  11:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 60


  12:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * the "License"; You may not use this file except in compliance with the
  14:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * License. You may obtain a copy of the License at:
  15:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *
  17:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   ******************************************************************************
  18:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
  19:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
  20:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  21:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #ifndef __STM32L1xx_LL_TIM_H
  22:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define __STM32L1xx_LL_TIM_H
  23:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
  24:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #ifdef __cplusplus
  25:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** extern "C" {
  26:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #endif
  27:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
  28:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /* Includes ------------------------------------------------------------------*/
  29:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #include "stm32l1xx.h"
  30:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
  31:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @addtogroup STM32L1xx_LL_Driver
  32:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
  33:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
  34:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
  35:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #if defined (TIM2) || defined (TIM3) || defined (TIM4) || defined (TIM5) || defined (TIM9) || defin
  36:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
  37:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL TIM
  38:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
  39:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
  40:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
  41:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /* Private types -------------------------------------------------------------*/
  42:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /* Private variables ---------------------------------------------------------*/
  43:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_Private_Variables TIM Private Variables
  44:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
  45:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
  46:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** static const uint8_t OFFSET_TAB_CCMRx[] =
  47:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
  48:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   0x00U,   /* 0: TIMx_CH1  */
  49:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   0x00U,   /* 1: NA */
  50:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   0x00U,   /* 2: TIMx_CH2  */
  51:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   0x00U,   /* 3: NA */
  52:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   0x04U,   /* 4: TIMx_CH3  */
  53:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   0x00U,   /* 5: NA */
  54:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   0x04U    /* 6: TIMx_CH4  */
  55:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** };
  56:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
  57:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** static const uint8_t SHIFT_TAB_OCxx[] =
  58:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
  59:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   0U,            /* 0: OC1M, OC1FE, OC1PE */
  60:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   0U,            /* 1: - NA */
  61:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   8U,            /* 2: OC2M, OC2FE, OC2PE */
  62:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   0U,            /* 3: - NA */
  63:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   0U,            /* 4: OC3M, OC3FE, OC3PE */
  64:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   0U,            /* 5: - NA */
  65:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   8U             /* 6: OC4M, OC4FE, OC4PE */
  66:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** };
  67:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
  68:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** static const uint8_t SHIFT_TAB_ICxx[] =
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 61


  69:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
  70:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   0U,            /* 0: CC1S, IC1PSC, IC1F */
  71:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   0U,            /* 1: - NA */
  72:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   8U,            /* 2: CC2S, IC2PSC, IC2F */
  73:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   0U,            /* 3: - NA */
  74:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   0U,            /* 4: CC3S, IC3PSC, IC3F */
  75:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   0U,            /* 5: - NA */
  76:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   8U             /* 6: CC4S, IC4PSC, IC4F */
  77:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** };
  78:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
  79:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** static const uint8_t SHIFT_TAB_CCxP[] =
  80:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
  81:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   0U,            /* 0: CC1P */
  82:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   0U,            /* 1: NA */
  83:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   4U,            /* 2: CC2P */
  84:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   0U,            /* 3: NA */
  85:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   8U,            /* 4: CC3P */
  86:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   0U,            /* 5: NA */
  87:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   12U            /* 6: CC4P */
  88:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** };
  89:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
  90:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
  91:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
  92:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
  93:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
  94:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /* Private constants ---------------------------------------------------------*/
  95:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_Private_Constants TIM Private Constants
  96:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
  97:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
  98:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
  99:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 100:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define TIMx_OR_RMP_SHIFT  16U
 101:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define TIMx_OR_RMP_MASK   0x0000FFFFU
 102:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define TIM_OR_RMP_MASK    ((TIM_OR_TI1RMP | TIM_OR_ETR_RMP | TIM_OR_TI1_RMP_RI) << TIMx_OR_RMP_SHI
 103:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define TIM9_OR_RMP_MASK   ((TIM_OR_TI1RMP | TIM9_OR_ITR1_RMP) << TIMx_OR_RMP_SHIFT)
 104:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define TIM2_OR_RMP_MASK   (TIM2_OR_ITR1_RMP << TIMx_OR_RMP_SHIFT)
 105:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define TIM3_OR_RMP_MASK   (TIM3_OR_ITR2_RMP << TIMx_OR_RMP_SHIFT)
 106:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 107:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 108:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 109:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 110:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 111:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 112:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 113:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /* Private macros ------------------------------------------------------------*/
 114:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_Private_Macros TIM Private Macros
 115:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 116:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 117:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @brief  Convert channel id into channel index.
 118:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
 119:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
 120:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
 121:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
 122:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
 123:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval none
 124:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 125:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define TIM_GET_CHANNEL_INDEX( __CHANNEL__) \
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 62


 126:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** (((__CHANNEL__) == LL_TIM_CHANNEL_CH1) ? 0U :\
 127:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** ((__CHANNEL__) == LL_TIM_CHANNEL_CH2) ? 2U :\
 128:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** ((__CHANNEL__) == LL_TIM_CHANNEL_CH3) ? 4U : 6U)
 129:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 130:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 131:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 132:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 133:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 134:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 135:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /* Exported types ------------------------------------------------------------*/
 136:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #if defined(USE_FULL_LL_DRIVER)
 137:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_ES_INIT TIM Exported Init structure
 138:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 139:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 140:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 141:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 142:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  TIM Time Base configuration structure definition.
 143:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 144:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** typedef struct
 145:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 146:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint16_t Prescaler;         /*!< Specifies the prescaler value used to divide the TIM clock.
 147:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                    This parameter can be a number between Min_Data=0x0000 and Max_D
 148:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 149:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                    This feature can be modified afterwards using unitary function @
 150:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 151:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint32_t CounterMode;       /*!< Specifies the counter mode.
 152:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                    This parameter can be a value of @ref TIM_LL_EC_COUNTERMODE.
 153:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 154:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                    This feature can be modified afterwards using unitary function @
 155:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 156:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint32_t Autoreload;        /*!< Specifies the auto reload value to be loaded into the active
 157:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                    Auto-Reload Register at the next update event.
 158:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                    This parameter must be a number between Min_Data=0x0000 and Max_
 159:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                    Some timer instances may support 32 bits counters. In that case 
 160:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 161:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                    This feature can be modified afterwards using unitary function @
 162:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 163:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint32_t ClockDivision;     /*!< Specifies the clock division.
 164:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                    This parameter can be a value of @ref TIM_LL_EC_CLOCKDIVISION.
 165:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 166:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                    This feature can be modified afterwards using unitary function @
 167:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** } LL_TIM_InitTypeDef;
 168:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 169:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 170:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  TIM Output Compare configuration structure definition.
 171:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 172:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** typedef struct
 173:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 174:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint32_t OCMode;        /*!< Specifies the output mode.
 175:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCMODE.
 176:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 177:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function @ref 
 178:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 179:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint32_t OCState;       /*!< Specifies the TIM Output Compare state.
 180:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCSTATE.
 181:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 182:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                This feature can be modified afterwards using unitary functions @ref
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 63


 183:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 184:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint32_t CompareValue;  /*!< Specifies the Compare value to be loaded into the Capture Compare Re
 185:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                This parameter can be a number between Min_Data=0x0000 and Max_Data=
 186:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 187:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function LL_TI
 188:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 189:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint32_t OCPolarity;    /*!< Specifies the output polarity.
 190:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCPOLARITY.
 191:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 192:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function @ref 
 193:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 194:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 195:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** } LL_TIM_OC_InitTypeDef;
 196:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 197:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 198:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  TIM Input Capture configuration structure definition.
 199:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 200:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 201:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** typedef struct
 202:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 203:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 204:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint32_t ICPolarity;    /*!< Specifies the active edge of the input signal.
 205:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_IC_POLARITY.
 206:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 207:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function @ref 
 208:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 209:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint32_t ICActiveInput; /*!< Specifies the input.
 210:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_ACTIVEINPUT.
 211:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 212:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function @ref 
 213:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 214:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint32_t ICPrescaler;   /*!< Specifies the Input Capture Prescaler.
 215:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_ICPSC.
 216:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 217:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function @ref 
 218:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 219:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint32_t ICFilter;      /*!< Specifies the input capture filter.
 220:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_IC_FILTER.
 221:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 222:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function @ref 
 223:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** } LL_TIM_IC_InitTypeDef;
 224:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 225:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 226:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 227:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  TIM Encoder interface configuration structure definition.
 228:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 229:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** typedef struct
 230:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 231:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint32_t EncoderMode;     /*!< Specifies the encoder resolution (x2 or x4).
 232:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_ENCODERMODE.
 233:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 234:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 235:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 236:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint32_t IC1Polarity;     /*!< Specifies the active edge of TI1 input.
 237:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_IC_POLARITY.
 238:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 239:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 64


 240:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 241:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint32_t IC1ActiveInput;  /*!< Specifies the TI1 input source
 242:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_ACTIVEINPUT.
 243:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 244:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 245:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 246:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint32_t IC1Prescaler;    /*!< Specifies the TI1 input prescaler value.
 247:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_ICPSC.
 248:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 249:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 250:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 251:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint32_t IC1Filter;       /*!< Specifies the TI1 input filter.
 252:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_IC_FILTER.
 253:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 254:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 255:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 256:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint32_t IC2Polarity;      /*!< Specifies the active edge of TI2 input.
 257:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_IC_POLARITY.
 258:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 259:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 260:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 261:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint32_t IC2ActiveInput;  /*!< Specifies the TI2 input source
 262:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_ACTIVEINPUT.
 263:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 264:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 265:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 266:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint32_t IC2Prescaler;    /*!< Specifies the TI2 input prescaler value.
 267:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_ICPSC.
 268:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 269:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 270:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 271:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint32_t IC2Filter;       /*!< Specifies the TI2 input filter.
 272:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_IC_FILTER.
 273:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 274:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 275:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 276:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** } LL_TIM_ENCODER_InitTypeDef;
 277:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 278:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 279:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 280:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 281:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 282:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #endif /* USE_FULL_LL_DRIVER */
 283:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 284:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /* Exported constants --------------------------------------------------------*/
 285:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_Exported_Constants TIM Exported Constants
 286:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 287:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 288:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 289:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_GET_FLAG Get Flags Defines
 290:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief    Flags defines which can be used with LL_TIM_ReadReg function.
 291:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 292:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 293:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_SR_UIF                          TIM_SR_UIF           /*!< Update interrupt flag */
 294:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_SR_CC1IF                        TIM_SR_CC1IF         /*!< Capture/compare 1 interrup
 295:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_SR_CC2IF                        TIM_SR_CC2IF         /*!< Capture/compare 2 interrup
 296:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_SR_CC3IF                        TIM_SR_CC3IF         /*!< Capture/compare 3 interrup
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 65


 297:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_SR_CC4IF                        TIM_SR_CC4IF         /*!< Capture/compare 4 interrup
 298:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_SR_TIF                          TIM_SR_TIF           /*!< Trigger interrupt flag */
 299:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_SR_CC1OF                        TIM_SR_CC1OF         /*!< Capture/Compare 1 overcapt
 300:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_SR_CC2OF                        TIM_SR_CC2OF         /*!< Capture/Compare 2 overcapt
 301:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_SR_CC3OF                        TIM_SR_CC3OF         /*!< Capture/Compare 3 overcapt
 302:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_SR_CC4OF                        TIM_SR_CC4OF         /*!< Capture/Compare 4 overcapt
 303:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 304:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 305:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 306:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 307:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_IT IT Defines
 308:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief    IT defines which can be used with LL_TIM_ReadReg and  LL_TIM_WriteReg functions.
 309:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 310:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 311:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DIER_UIE                        TIM_DIER_UIE         /*!< Update interrupt enable */
 312:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DIER_CC1IE                      TIM_DIER_CC1IE       /*!< Capture/compare 1 interrup
 313:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DIER_CC2IE                      TIM_DIER_CC2IE       /*!< Capture/compare 2 interrup
 314:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DIER_CC3IE                      TIM_DIER_CC3IE       /*!< Capture/compare 3 interrup
 315:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DIER_CC4IE                      TIM_DIER_CC4IE       /*!< Capture/compare 4 interrup
 316:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DIER_TIE                        TIM_DIER_TIE         /*!< Trigger interrupt enable *
 317:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 318:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 319:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 320:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 321:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_UPDATESOURCE Update Source
 322:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 323:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 324:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_UPDATESOURCE_REGULAR            0x00000000U          /*!< Counter overflow/underflow
 325:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_UPDATESOURCE_COUNTER            TIM_CR1_URS          /*!< Only counter overflow/unde
 326:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 327:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 328:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 329:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 330:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ONEPULSEMODE One Pulse Mode
 331:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 332:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 333:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ONEPULSEMODE_SINGLE             TIM_CR1_OPM          /*!< Counter is not stopped at 
 334:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ONEPULSEMODE_REPETITIVE         0x00000000U          /*!< Counter stops counting at 
 335:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 336:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 337:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 338:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 339:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_COUNTERMODE Counter Mode
 340:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 341:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 342:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_COUNTERMODE_UP                  0x00000000U          /*!<Counter used as upcounter *
 343:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_COUNTERMODE_DOWN                TIM_CR1_DIR          /*!< Counter used as downcounte
 344:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_COUNTERMODE_CENTER_UP           TIM_CR1_CMS_0        /*!< The counter counts up and 
 345:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_COUNTERMODE_CENTER_DOWN         TIM_CR1_CMS_1        /*!<The counter counts up and d
 346:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_COUNTERMODE_CENTER_UP_DOWN      TIM_CR1_CMS          /*!< The counter counts up and 
 347:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 348:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 349:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 350:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 351:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_CLOCKDIVISION Clock Division
 352:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 353:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 66


 354:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_CLOCKDIVISION_DIV1              0x00000000U          /*!< tDTS=tCK_INT */
 355:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_CLOCKDIVISION_DIV2              TIM_CR1_CKD_0        /*!< tDTS=2*tCK_INT */
 356:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_CLOCKDIVISION_DIV4              TIM_CR1_CKD_1        /*!< tDTS=4*tCK_INT */
 357:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 358:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 359:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 360:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 361:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_COUNTERDIRECTION Counter Direction
 362:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 363:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 364:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_COUNTERDIRECTION_UP             0x00000000U          /*!< Timer counter counts up */
 365:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_COUNTERDIRECTION_DOWN           TIM_CR1_DIR          /*!< Timer counter counts down 
 366:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 367:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 368:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 369:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 370:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 371:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_CCDMAREQUEST Capture Compare DMA Request
 372:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 373:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 374:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_CCDMAREQUEST_CC                 0x00000000U          /*!< CCx DMA request sent when 
 375:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_CCDMAREQUEST_UPDATE             TIM_CR2_CCDS         /*!< CCx DMA requests sent when
 376:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 377:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 378:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 379:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 380:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 381:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_CHANNEL Channel
 382:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 383:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 384:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH1                     TIM_CCER_CC1E     /*!< Timer input/output channel 1 
 385:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH2                     TIM_CCER_CC2E     /*!< Timer input/output channel 2 
 386:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH3                     TIM_CCER_CC3E     /*!< Timer input/output channel 3 
 387:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH4                     TIM_CCER_CC4E     /*!< Timer input/output channel 4 
 388:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 389:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 390:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 391:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 392:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #if defined(USE_FULL_LL_DRIVER)
 393:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OCSTATE Output Configuration State
 394:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 395:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 396:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_OCSTATE_DISABLE                 0x00000000U             /*!< OCx is not active */
 397:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_OCSTATE_ENABLE                  TIM_CCER_CC1E           /*!< OCx signal is output on
 398:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 399:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 400:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 401:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #endif /* USE_FULL_LL_DRIVER */
 402:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 403:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OCMODE Output Configuration Mode
 404:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 405:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 406:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_OCMODE_FROZEN                   0x00000000U                                         
 407:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_OCMODE_ACTIVE                   TIM_CCMR1_OC1M_0                                    
 408:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_OCMODE_INACTIVE                 TIM_CCMR1_OC1M_1                                    
 409:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_OCMODE_TOGGLE                   (TIM_CCMR1_OC1M_1 | TIM_CCMR1_OC1M_0)               
 410:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_OCMODE_FORCED_INACTIVE          TIM_CCMR1_OC1M_2                                    
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 67


 411:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_OCMODE_FORCED_ACTIVE            (TIM_CCMR1_OC1M_2 | TIM_CCMR1_OC1M_0)               
 412:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_OCMODE_PWM1                     (TIM_CCMR1_OC1M_2 | TIM_CCMR1_OC1M_1)               
 413:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_OCMODE_PWM2                     (TIM_CCMR1_OC1M_2 | TIM_CCMR1_OC1M_1 | TIM_CCMR1_OC1
 414:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 415:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 416:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 417:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 418:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OCPOLARITY Output Configuration Polarity
 419:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 420:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 421:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_OCPOLARITY_HIGH                 0x00000000U                 /*!< OCxactive high*/
 422:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_OCPOLARITY_LOW                  TIM_CCER_CC1P               /*!< OCxactive low*/
 423:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 424:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 425:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 426:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 427:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 428:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 429:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ACTIVEINPUT Active Input Selection
 430:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 431:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 432:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ACTIVEINPUT_DIRECTTI            (TIM_CCMR1_CC1S_0 << 16U) /*!< ICx is mapped on TIx 
 433:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ACTIVEINPUT_INDIRECTTI          (TIM_CCMR1_CC1S_1 << 16U) /*!< ICx is mapped on TIy 
 434:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ACTIVEINPUT_TRC                 (TIM_CCMR1_CC1S << 16U)   /*!< ICx is mapped on TRC 
 435:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 436:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 437:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 438:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 439:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ICPSC Input Configuration Prescaler
 440:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 441:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 442:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ICPSC_DIV1                      0x00000000U                    /*!< No prescaler, ca
 443:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ICPSC_DIV2                      (TIM_CCMR1_IC1PSC_0 << 16U)    /*!< Capture is done 
 444:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ICPSC_DIV4                      (TIM_CCMR1_IC1PSC_1 << 16U)    /*!< Capture is done 
 445:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ICPSC_DIV8                      (TIM_CCMR1_IC1PSC << 16U)      /*!< Capture is done 
 446:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 447:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 448:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 449:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 450:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_IC_FILTER Input Configuration Filter
 451:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 452:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 453:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV1                 0x00000000U                                         
 454:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV1_N2              (TIM_CCMR1_IC1F_0 << 16U)                           
 455:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV1_N4              (TIM_CCMR1_IC1F_1 << 16U)                           
 456:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV1_N8              ((TIM_CCMR1_IC1F_1 | TIM_CCMR1_IC1F_0) << 16U)      
 457:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV2_N6              (TIM_CCMR1_IC1F_2 << 16U)                           
 458:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV2_N8              ((TIM_CCMR1_IC1F_2 | TIM_CCMR1_IC1F_0) << 16U)      
 459:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV4_N6              ((TIM_CCMR1_IC1F_2 | TIM_CCMR1_IC1F_1) << 16U)      
 460:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV4_N8              ((TIM_CCMR1_IC1F_2 | TIM_CCMR1_IC1F_1 | TIM_CCMR1_IC
 461:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV8_N6              (TIM_CCMR1_IC1F_3 << 16U)                           
 462:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV8_N8              ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_0) << 16U)      
 463:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV16_N5             ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_1) << 16U)      
 464:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV16_N6             ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_1 | TIM_CCMR1_IC
 465:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV16_N8             ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_2) << 16U)      
 466:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV32_N5             ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_2 | TIM_CCMR1_IC
 467:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV32_N6             ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_2 | TIM_CCMR1_IC
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 68


 468:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV32_N8             (TIM_CCMR1_IC1F << 16U)                             
 469:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 470:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 471:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 472:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 473:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_IC_POLARITY Input Configuration Polarity
 474:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 475:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 476:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_IC_POLARITY_RISING              0x00000000U                      /*!< The circuit is
 477:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_IC_POLARITY_FALLING             TIM_CCER_CC1P                    /*!< The circuit is
 478:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_IC_POLARITY_BOTHEDGE            (TIM_CCER_CC1P | TIM_CCER_CC1NP) /*!< The circuit is
 479:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 480:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 481:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 482:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 483:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_CLOCKSOURCE Clock Source
 484:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 485:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 486:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_CLOCKSOURCE_INTERNAL            0x00000000U                                         
 487:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_CLOCKSOURCE_EXT_MODE1           (TIM_SMCR_SMS_2 | TIM_SMCR_SMS_1 | TIM_SMCR_SMS_0)  
 488:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_CLOCKSOURCE_EXT_MODE2           TIM_SMCR_ECE                                        
 489:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 490:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 491:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 492:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 493:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ENCODERMODE Encoder Mode
 494:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 495:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 496:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ENCODERMODE_X2_TI1                     TIM_SMCR_SMS_0                               
 497:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ENCODERMODE_X2_TI2                     TIM_SMCR_SMS_1                               
 498:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ENCODERMODE_X4_TI12                   (TIM_SMCR_SMS_1 | TIM_SMCR_SMS_0)             
 499:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 500:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 501:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 502:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 503:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TRGO Trigger Output
 504:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 505:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 506:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TRGO_RESET                      0x00000000U                                     /*!<
 507:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TRGO_ENABLE                     TIM_CR2_MMS_0                                   /*!<
 508:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TRGO_UPDATE                     TIM_CR2_MMS_1                                   /*!<
 509:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TRGO_CC1IF                      (TIM_CR2_MMS_1 | TIM_CR2_MMS_0)                 /*!<
 510:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TRGO_OC1REF                     TIM_CR2_MMS_2                                   /*!<
 511:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TRGO_OC2REF                     (TIM_CR2_MMS_2 | TIM_CR2_MMS_0)                 /*!<
 512:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TRGO_OC3REF                     (TIM_CR2_MMS_2 | TIM_CR2_MMS_1)                 /*!<
 513:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TRGO_OC4REF                     (TIM_CR2_MMS_2 | TIM_CR2_MMS_1 | TIM_CR2_MMS_0) /*!<
 514:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 515:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 516:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 517:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 518:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 519:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_SLAVEMODE Slave Mode
 520:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 521:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 522:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_SLAVEMODE_DISABLED              0x00000000U                         /*!< Slave mode 
 523:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_SLAVEMODE_RESET                 TIM_SMCR_SMS_2                      /*!< Reset Mode 
 524:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_SLAVEMODE_GATED                 (TIM_SMCR_SMS_2 | TIM_SMCR_SMS_0)   /*!< Gated Mode 
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 69


 525:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_SLAVEMODE_TRIGGER               (TIM_SMCR_SMS_2 | TIM_SMCR_SMS_1)   /*!< Trigger Mod
 526:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 527:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 528:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 529:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 530:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TS Trigger Selection
 531:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 532:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 533:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TS_ITR0                         0x00000000U                                         
 534:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TS_ITR1                         TIM_SMCR_TS_0                                       
 535:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TS_ITR2                         TIM_SMCR_TS_1                                       
 536:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TS_ITR3                         (TIM_SMCR_TS_0 | TIM_SMCR_TS_1)                     
 537:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TS_TI1F_ED                      TIM_SMCR_TS_2                                       
 538:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TS_TI1FP1                       (TIM_SMCR_TS_2 | TIM_SMCR_TS_0)                     
 539:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TS_TI2FP2                       (TIM_SMCR_TS_2 | TIM_SMCR_TS_1)                     
 540:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TS_ETRF                         (TIM_SMCR_TS_2 | TIM_SMCR_TS_1 | TIM_SMCR_TS_0)     
 541:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 542:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 543:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 544:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 545:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ETR_POLARITY External Trigger Polarity
 546:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 547:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 548:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ETR_POLARITY_NONINVERTED        0x00000000U             /*!< ETR is non-inverted, ac
 549:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ETR_POLARITY_INVERTED           TIM_SMCR_ETP            /*!< ETR is inverted, active
 550:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 551:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 552:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 553:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 554:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ETR_PRESCALER External Trigger Prescaler
 555:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 556:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 557:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ETR_PRESCALER_DIV1              0x00000000U             /*!< ETR prescaler OFF */
 558:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ETR_PRESCALER_DIV2              TIM_SMCR_ETPS_0         /*!< ETR frequency is divide
 559:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ETR_PRESCALER_DIV4              TIM_SMCR_ETPS_1         /*!< ETR frequency is divide
 560:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ETR_PRESCALER_DIV8              TIM_SMCR_ETPS           /*!< ETR frequency is divide
 561:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 562:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 563:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 564:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 565:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ETR_FILTER External Trigger Filter
 566:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 567:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 568:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV1                0x00000000U                                         
 569:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV1_N2             TIM_SMCR_ETF_0                                      
 570:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV1_N4             TIM_SMCR_ETF_1                                      
 571:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV1_N8             (TIM_SMCR_ETF_1 | TIM_SMCR_ETF_0)                   
 572:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV2_N6             TIM_SMCR_ETF_2                                      
 573:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV2_N8             (TIM_SMCR_ETF_2 | TIM_SMCR_ETF_0)                   
 574:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV4_N6             (TIM_SMCR_ETF_2 | TIM_SMCR_ETF_1)                   
 575:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV4_N8             (TIM_SMCR_ETF_2 | TIM_SMCR_ETF_1 | TIM_SMCR_ETF_0)  
 576:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV8_N6             TIM_SMCR_ETF_3                                      
 577:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV8_N8             (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_0)                   
 578:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV16_N5            (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_1)                   
 579:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV16_N6            (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_1 | TIM_SMCR_ETF_0)  
 580:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV16_N8            (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_2)                   
 581:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV32_N5            (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_2 | TIM_SMCR_ETF_0)  
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 70


 582:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV32_N6            (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_2 | TIM_SMCR_ETF_1)  
 583:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV32_N8            TIM_SMCR_ETF                                        
 584:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 585:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 586:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 587:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 588:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 589:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 590:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 591:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 592:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 593:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 594:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_DMABURST_BASEADDR DMA Burst Base Address
 595:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 596:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 597:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CR1           0x00000000U                                         
 598:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CR2           TIM_DCR_DBA_0                                       
 599:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_SMCR          TIM_DCR_DBA_1                                       
 600:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_DIER          (TIM_DCR_DBA_1 |  TIM_DCR_DBA_0)                    
 601:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_SR            TIM_DCR_DBA_2                                       
 602:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_EGR           (TIM_DCR_DBA_2 | TIM_DCR_DBA_0)                     
 603:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCMR1         (TIM_DCR_DBA_2 | TIM_DCR_DBA_1)                     
 604:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCMR2         (TIM_DCR_DBA_2 | TIM_DCR_DBA_1 | TIM_DCR_DBA_0)     
 605:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCER          TIM_DCR_DBA_3                                       
 606:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CNT           (TIM_DCR_DBA_3 | TIM_DCR_DBA_0)                     
 607:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_PSC           (TIM_DCR_DBA_3 | TIM_DCR_DBA_1)                     
 608:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_ARR           (TIM_DCR_DBA_3 | TIM_DCR_DBA_1 | TIM_DCR_DBA_0)     
 609:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCR1          (TIM_DCR_DBA_3 | TIM_DCR_DBA_2 | TIM_DCR_DBA_0)     
 610:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCR2          (TIM_DCR_DBA_3 | TIM_DCR_DBA_2 | TIM_DCR_DBA_1)     
 611:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCR3          (TIM_DCR_DBA_3 | TIM_DCR_DBA_2 | TIM_DCR_DBA_1 | TIM
 612:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCR4          TIM_DCR_DBA_4                                       
 613:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_OR            (TIM_DCR_DBA_4 | TIM_DCR_DBA_2)                     
 614:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 615:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 616:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 617:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 618:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_DMABURST_LENGTH DMA Burst Length
 619:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 620:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 621:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_1TRANSFER       0x00000000U                                         
 622:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_2TRANSFERS      TIM_DCR_DBL_0                                       
 623:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_3TRANSFERS      TIM_DCR_DBL_1                                       
 624:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_4TRANSFERS      (TIM_DCR_DBL_1 |  TIM_DCR_DBL_0)                    
 625:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_5TRANSFERS      TIM_DCR_DBL_2                                       
 626:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_6TRANSFERS      (TIM_DCR_DBL_2 | TIM_DCR_DBL_0)                     
 627:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_7TRANSFERS      (TIM_DCR_DBL_2 | TIM_DCR_DBL_1)                     
 628:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_8TRANSFERS      (TIM_DCR_DBL_2 | TIM_DCR_DBL_1 | TIM_DCR_DBL_0)     
 629:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_9TRANSFERS      TIM_DCR_DBL_3                                       
 630:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_10TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_0)                     
 631:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_11TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_1)                     
 632:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_12TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_1 | TIM_DCR_DBL_0)     
 633:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_13TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_2)                     
 634:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_14TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_2 | TIM_DCR_DBL_0)     
 635:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_15TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_2 | TIM_DCR_DBL_1)     
 636:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_16TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_2 | TIM_DCR_DBL_1 | TIM
 637:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_17TRANSFERS     TIM_DCR_DBL_4                                       
 638:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_18TRANSFERS     (TIM_DCR_DBL_4 |  TIM_DCR_DBL_0)                    
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 71


 639:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 640:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 641:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 642:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 643:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM10_TI1_RMP  TIM10 input 1 remapping capability
 644:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 645:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 646:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM10_TI1_RMP_GPIO   TIM_OR_RMP_MASK                                         /*!< TI
 647:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM10_TI1_RMP_LSI    (TIM_OR_TI1RMP_0 | TIM_OR_RMP_MASK)                     /*!< TI
 648:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM10_TI1_RMP_LSE    (TIM_OR_TI1RMP_1 | TIM_OR_RMP_MASK)                     /*!< TI
 649:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM10_TI1_RMP_RTC    (TIM_OR_TI1RMP_0 | TIM_OR_TI1RMP_1 | TIM_OR_RMP_MASK)   /*!< TI
 650:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 651:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 652:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 653:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 654:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM10_ETR_RMP  TIM10 ETR remap
 655:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 656:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 657:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM10_ETR_RMP_LSE      TIM_OR_RMP_MASK                                         /*!< 
 658:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM10_ETR_RMP_TIM9_TGO (TIM_OR_ETR_RMP | TIM_OR_RMP_MASK)                      /*!< 
 659:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 660:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 661:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 662:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 663:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM10_TI1_RMP_RI TIM10 Input 1 remap for Routing Interface (RI)
 664:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** * @{
 665:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** */
 666:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM10_TI1_RMP          TIM_OR_RMP_MASK                                         /*!< 
 667:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM10_TI1_RMP_RI       (TIM_OR_TI1_RMP_RI | TIM_OR_RMP_MASK)                   /*!< 
 668:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 669:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 670:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 671:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 672:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM11_TI1_RMP  TIM11 input 1 remapping capability
 673:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 674:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 675:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM11_TI1_RMP_GPIO       TIM_OR_RMP_MASK                                       /*!< 
 676:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM11_TI1_RMP_MSI        (TIM_OR_TI1RMP_0 | TIM_OR_RMP_MASK)                   /*!< 
 677:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM11_TI1_RMP_HSE_RTC    (TIM_OR_TI1RMP_1 | TIM_OR_RMP_MASK)                   /*!< 
 678:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM11_TI1_RMP_GPIO1      (TIM_OR_TI1RMP_0 | TIM_OR_TI1RMP_1 | TIM_OR_RMP_MASK) /*!< 
 679:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 680:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 681:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 682:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 683:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM11_ETR_RMP  TIM11 ETR remap
 684:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 685:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 686:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM11_ETR_RMP_LSE      TIM_OR_RMP_MASK                                         /*!< 
 687:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM11_ETR_RMP_TIM9_TGO (TIM_OR_ETR_RMP | TIM_OR_RMP_MASK)                      /*!< 
 688:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 689:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 690:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 691:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 692:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM11_TI1_RMP_RI TIM11 Input 1 remap for Routing Interface (RI)
 693:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 694:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 695:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM11_TI1_RMP          TIM_OR_RMP_MASK                                         /*!< 
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 72


 696:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM11_TI1_RMP_RI       (TIM_OR_TI1_RMP_RI | TIM_OR_RMP_MASK)                   /*!< 
 697:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 698:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 699:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 700:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 701:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM9_TI1_RMP TIM9 Input 1 remap
 702:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 703:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 704:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM9_TI1_RMP_GPIO     TIM9_OR_RMP_MASK                                          /*!<
 705:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM9_TI1_RMP_LSE      (TIM_OR_TI1RMP_0 | TIM9_OR_RMP_MASK)                      /*!<
 706:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM9_TI1_RMP_GPIO1    (TIM_OR_TI1RMP_1 | TIM9_OR_RMP_MASK)                      /*!<
 707:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM9_TI1_RMP_GPIO2    (TIM_OR_TI1RMP_0 | TIM_OR_TI1RMP_1 | TIM9_OR_RMP_MASK)    /*!<
 708:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 709:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 710:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 711:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 712:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM9_ITR1_RMP  TIM9 ITR1 remap
 713:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 714:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 715:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM9_ITR1_RMP_TIM3_TGO   TIM9_OR_RMP_MASK                                     /*!< T
 716:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM9_ITR1_RMP_TOUCH_IO   (TIM9_OR_ITR1_RMP | TIM9_OR_RMP_MASK)                /*!< T
 717:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 718:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 719:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 720:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 721:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM2_ITR1_RMP  TIM2 internal trigger 1 remap
 722:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** * @{
 723:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** */
 724:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM2_TIR1_RMP_TIM10_OC    TIM9_OR_RMP_MASK                                     /*!< 
 725:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM2_TIR1_RMP_TIM5_TGO    (TIM2_OR_ITR1_RMP | TIM9_OR_RMP_MASK)                /*!< 
 726:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 727:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 728:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 729:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 730:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM3_ITR2_RMP  TIM3 internal trigger 2 remap
 731:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 732:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 733:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM3_TIR2_RMP_TIM11_OC    TIM9_OR_RMP_MASK                                     /*!< 
 734:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM3_TIR2_RMP_TIM5_TGO    (TIM3_OR_ITR2_RMP | TIM9_OR_RMP_MASK)                /*!< 
 735:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 736:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 737:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 738:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 739:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 740:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OCREF_CLR_INT OCREF clear input selection
 741:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 742:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 743:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_OCREF_CLR_INT_OCREF_CLR     0x00000000U         /*!< OCREF_CLR_INT is connected to t
 744:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_OCREF_CLR_INT_ETR           TIM_SMCR_OCCS       /*!< OCREF_CLR_INT is connected to E
 745:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 746:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 747:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 748:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 749:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 750:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 751:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 752:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 73


 753:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /* Exported macro ------------------------------------------------------------*/
 754:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_Exported_Macros TIM Exported Macros
 755:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 756:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 757:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 758:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EM_WRITE_READ Common Write and read registers Macros
 759:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 760:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 761:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 762:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Write a value in TIM register.
 763:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  __INSTANCE__ TIM Instance
 764:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  __REG__ Register to be written
 765:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  __VALUE__ Value to be written in the register
 766:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
 767:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 768:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG((__INSTANCE__)->__REG__, (__VAL
 769:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 770:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 771:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Read a value in TIM register.
 772:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  __INSTANCE__ TIM Instance
 773:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  __REG__ Register to be read
 774:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval Register value
 775:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 776:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ReadReg(__INSTANCE__, __REG__) READ_REG((__INSTANCE__)->__REG__)
 777:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 778:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 779:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 780:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 781:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EM_Exported_Macros Exported_Macros
 782:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 783:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 784:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 785:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 786:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  HELPER macro calculating the prescaler value to achieve the required counter clock freq
 787:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_CALC_PSC (80000000, 1000000);
 788:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz)
 789:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  __CNTCLK__ counter clock frequency (in Hz)
 790:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval Prescaler value  (between Min_Data=0 and Max_Data=65535)
 791:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 792:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define __LL_TIM_CALC_PSC(__TIMCLK__, __CNTCLK__)   \
 793:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****    (((__TIMCLK__) >= (__CNTCLK__)) ? (uint32_t)(((__TIMCLK__)/(__CNTCLK__)) - 1U) : 0U)
 794:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 795:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 796:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  HELPER macro calculating the auto-reload value to achieve the required output signal fr
 797:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_CALC_ARR (1000000, @ref LL_TIM_GetPrescaler (), 10000);
 798:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz)
 799:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  __PSC__ prescaler
 800:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  __FREQ__ output signal frequency (in Hz)
 801:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval  Auto-reload value  (between Min_Data=0 and Max_Data=65535)
 802:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 803:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define __LL_TIM_CALC_ARR(__TIMCLK__, __PSC__, __FREQ__) \
 804:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****      ((((__TIMCLK__)/((__PSC__) + 1U)) >= (__FREQ__)) ? (((__TIMCLK__)/((__FREQ__) * ((__PSC__) + 1
 805:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 806:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 807:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  HELPER macro calculating the compare value required to achieve the required timer outpu
 808:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_CALC_DELAY (1000000, @ref LL_TIM_GetPrescaler (), 10);
 809:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz)
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 74


 810:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  __PSC__ prescaler
 811:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  __DELAY__ timer output compare active/inactive delay (in us)
 812:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval Compare value  (between Min_Data=0 and Max_Data=65535)
 813:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 814:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define __LL_TIM_CALC_DELAY(__TIMCLK__, __PSC__, __DELAY__)  \
 815:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** ((uint32_t)(((uint64_t)(__TIMCLK__) * (uint64_t)(__DELAY__)) \
 816:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****           / ((uint64_t)1000000U * (uint64_t)((__PSC__) + 1U))))
 817:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 818:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 819:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  HELPER macro calculating the auto-reload value to achieve the required pulse duration (
 820:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_CALC_PULSE (1000000, @ref LL_TIM_GetPrescaler (), 10, 20);
 821:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz)
 822:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  __PSC__ prescaler
 823:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  __DELAY__ timer output compare active/inactive delay (in us)
 824:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  __PULSE__ pulse duration (in us)
 825:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval Auto-reload value  (between Min_Data=0 and Max_Data=65535)
 826:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 827:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define __LL_TIM_CALC_PULSE(__TIMCLK__, __PSC__, __DELAY__, __PULSE__)  \
 828:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****  ((uint32_t)(__LL_TIM_CALC_DELAY((__TIMCLK__), (__PSC__), (__PULSE__)) \
 829:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****            + __LL_TIM_CALC_DELAY((__TIMCLK__), (__PSC__), (__DELAY__))))
 830:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 831:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 832:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  HELPER macro retrieving the ratio of the input capture prescaler
 833:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_GET_ICPSC_RATIO (@ref LL_TIM_IC_GetPrescaler ());
 834:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  __ICPSC__ This parameter can be one of the following values:
 835:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV1
 836:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV2
 837:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV4
 838:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV8
 839:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval Input capture prescaler ratio (1, 2, 4 or 8)
 840:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 841:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define __LL_TIM_GET_ICPSC_RATIO(__ICPSC__)  \
 842:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****    ((uint32_t)(0x01U << (((__ICPSC__) >> 16U) >> TIM_CCMR1_IC1PSC_Pos)))
 843:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 844:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 845:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 846:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 847:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 848:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 849:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 850:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 851:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 852:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 853:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 854:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /* Exported functions --------------------------------------------------------*/
 855:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_Exported_Functions TIM Exported Functions
 856:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 857:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 858:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 859:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Time_Base Time Base configuration
 860:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 861:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 862:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 863:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Enable timer counter.
 864:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR1          CEN           LL_TIM_EnableCounter
 865:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
 866:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 75


 867:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 868:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableCounter(TIM_TypeDef *TIMx)
 869:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 870:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   SET_BIT(TIMx->CR1, TIM_CR1_CEN);
 871:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 872:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 873:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 874:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Disable timer counter.
 875:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR1          CEN           LL_TIM_DisableCounter
 876:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
 877:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
 878:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 879:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableCounter(TIM_TypeDef *TIMx)
 880:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 881:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   CLEAR_BIT(TIMx->CR1, TIM_CR1_CEN);
 882:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 883:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 884:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 885:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Indicates whether the timer counter is enabled.
 886:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR1          CEN           LL_TIM_IsEnabledCounter
 887:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
 888:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
 889:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 890:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledCounter(TIM_TypeDef *TIMx)
 891:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 892:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(TIMx->CR1, TIM_CR1_CEN) == (TIM_CR1_CEN)) ? 1UL : 0UL);
 893:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 894:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 895:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 896:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Enable update event generation.
 897:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR1          UDIS          LL_TIM_EnableUpdateEvent
 898:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
 899:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
 900:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 901:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableUpdateEvent(TIM_TypeDef *TIMx)
 902:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 903:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   CLEAR_BIT(TIMx->CR1, TIM_CR1_UDIS);
 904:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 905:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 906:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 907:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Disable update event generation.
 908:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR1          UDIS          LL_TIM_DisableUpdateEvent
 909:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
 910:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
 911:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 912:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableUpdateEvent(TIM_TypeDef *TIMx)
 913:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 914:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   SET_BIT(TIMx->CR1, TIM_CR1_UDIS);
 915:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 916:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 917:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 918:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Indicates whether update event generation is enabled.
 919:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR1          UDIS          LL_TIM_IsEnabledUpdateEvent
 920:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
 921:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval Inverted state of bit (0 or 1).
 922:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 923:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledUpdateEvent(TIM_TypeDef *TIMx)
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 76


 924:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 925:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(TIMx->CR1, TIM_CR1_UDIS) == (uint32_t)RESET) ? 1UL : 0UL);
 926:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 927:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 928:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 929:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Set update event source
 930:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Update event source set to LL_TIM_UPDATESOURCE_REGULAR: any of the following events
 931:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       generate an update interrupt or DMA request if enabled:
 932:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *        - Counter overflow/underflow
 933:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *        - Setting the UG bit
 934:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *        - Update generation through the slave mode controller
 935:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Update event source set to LL_TIM_UPDATESOURCE_COUNTER: only counter
 936:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       overflow/underflow generates an update interrupt or DMA request if enabled.
 937:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR1          URS           LL_TIM_SetUpdateSource
 938:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
 939:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  UpdateSource This parameter can be one of the following values:
 940:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_UPDATESOURCE_REGULAR
 941:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_UPDATESOURCE_COUNTER
 942:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
 943:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 944:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetUpdateSource(TIM_TypeDef *TIMx, uint32_t UpdateSource)
 945:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 946:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   MODIFY_REG(TIMx->CR1, TIM_CR1_URS, UpdateSource);
 947:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 948:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 949:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 950:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Get actual event update source
 951:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR1          URS           LL_TIM_GetUpdateSource
 952:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
 953:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
 954:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_UPDATESOURCE_REGULAR
 955:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_UPDATESOURCE_COUNTER
 956:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 957:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetUpdateSource(TIM_TypeDef *TIMx)
 958:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 959:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_URS));
 960:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 961:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 962:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 963:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Set one pulse mode (one shot v.s. repetitive).
 964:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR1          OPM           LL_TIM_SetOnePulseMode
 965:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
 966:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  OnePulseMode This parameter can be one of the following values:
 967:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ONEPULSEMODE_SINGLE
 968:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ONEPULSEMODE_REPETITIVE
 969:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
 970:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 971:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetOnePulseMode(TIM_TypeDef *TIMx, uint32_t OnePulseMode)
 972:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 973:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   MODIFY_REG(TIMx->CR1, TIM_CR1_OPM, OnePulseMode);
 974:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 975:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 976:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 977:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Get actual one pulse mode.
 978:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR1          OPM           LL_TIM_GetOnePulseMode
 979:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
 980:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 77


 981:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ONEPULSEMODE_SINGLE
 982:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ONEPULSEMODE_REPETITIVE
 983:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 984:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetOnePulseMode(TIM_TypeDef *TIMx)
 985:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 986:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_OPM));
 987:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 988:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 989:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 990:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Set the timer counter counting mode.
 991:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx) can be used to
 992:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       check whether or not the counter mode selection feature is supported
 993:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       by a timer instance.
 994:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Switching from Center Aligned counter mode to Edge counter mode (or reverse)
 995:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       requires a timer reset to avoid unexpected direction
 996:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       due to DIR bit readonly in center aligned mode.
 997:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR1          DIR           LL_TIM_SetCounterMode\n
 998:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CR1          CMS           LL_TIM_SetCounterMode
 999:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1000:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  CounterMode This parameter can be one of the following values:
1001:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_UP
1002:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_DOWN
1003:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_UP
1004:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_DOWN
1005:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_UP_DOWN
1006:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1007:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1008:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetCounterMode(TIM_TypeDef *TIMx, uint32_t CounterMode)
1009:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1010:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   MODIFY_REG(TIMx->CR1, (TIM_CR1_DIR | TIM_CR1_CMS), CounterMode);
1011:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1012:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1013:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1014:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Get actual counter mode.
1015:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx) can be used to
1016:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       check whether or not the counter mode selection feature is supported
1017:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       by a timer instance.
1018:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR1          DIR           LL_TIM_GetCounterMode\n
1019:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CR1          CMS           LL_TIM_GetCounterMode
1020:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1021:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1022:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_UP
1023:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_DOWN
1024:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_UP
1025:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_DOWN
1026:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_UP_DOWN
1027:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1028:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetCounterMode(TIM_TypeDef *TIMx)
1029:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1030:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_DIR | TIM_CR1_CMS));
1031:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1032:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1033:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1034:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Enable auto-reload (ARR) preload.
1035:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR1          ARPE          LL_TIM_EnableARRPreload
1036:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1037:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 78


1038:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1039:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableARRPreload(TIM_TypeDef *TIMx)
1040:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1041:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   SET_BIT(TIMx->CR1, TIM_CR1_ARPE);
1042:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1043:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1044:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1045:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Disable auto-reload (ARR) preload.
1046:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR1          ARPE          LL_TIM_DisableARRPreload
1047:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1048:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1049:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1050:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableARRPreload(TIM_TypeDef *TIMx)
1051:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1052:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   CLEAR_BIT(TIMx->CR1,TIM_CR1_ARPE);
1053:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1054:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1055:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1056:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Indicates whether auto-reload (ARR) preload is enabled.
1057:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR1          ARPE          LL_TIM_IsEnabledARRPreload
1058:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1059:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
1060:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1061:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledARRPreload(TIM_TypeDef *TIMx)
1062:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1063:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(TIMx->CR1, TIM_CR1_ARPE) == (TIM_CR1_ARPE)) ? 1UL : 0UL);
1064:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1065:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1066:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1067:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Set the division ratio between the timer clock  and the sampling clock used by the dead
1068:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx) can be used to check
1069:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not the clock division feature is supported by the timer
1070:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       instance.
1071:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR1          CKD           LL_TIM_SetClockDivision
1072:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1073:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  ClockDivision This parameter can be one of the following values:
1074:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV1
1075:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV2
1076:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV4
1077:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1078:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1079:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetClockDivision(TIM_TypeDef *TIMx, uint32_t ClockDivision)
1080:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1081:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   MODIFY_REG(TIMx->CR1, TIM_CR1_CKD, ClockDivision);
1082:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1083:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1084:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1085:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Get the actual division ratio between the timer clock  and the sampling clock used by t
1086:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx) can be used to check
1087:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not the clock division feature is supported by the timer
1088:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       instance.
1089:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR1          CKD           LL_TIM_GetClockDivision
1090:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1091:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1092:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV1
1093:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV2
1094:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV4
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 79


1095:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1096:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetClockDivision(TIM_TypeDef *TIMx)
1097:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1098:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_CKD));
1099:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1100:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1101:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1102:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Set the counter value.
1103:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
1104:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
1105:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CNT          CNT           LL_TIM_SetCounter
1106:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1107:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Counter Counter value (between Min_Data=0 and Max_Data=0xFFFF or 0xFFFFFFFF)
1108:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1109:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1110:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetCounter(TIM_TypeDef *TIMx, uint32_t Counter)
1111:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1112:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   WRITE_REG(TIMx->CNT, Counter);
1113:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1114:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1115:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1116:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Get the counter value.
1117:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
1118:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
1119:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CNT          CNT           LL_TIM_GetCounter
1120:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1121:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval Counter value (between Min_Data=0 and Max_Data=0xFFFF or 0xFFFFFFFF)
1122:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1123:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetCounter(TIM_TypeDef *TIMx)
1124:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1125:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CNT));
1126:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1127:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1128:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1129:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Get the current direction of the counter
1130:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR1          DIR           LL_TIM_GetDirection
1131:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1132:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1133:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERDIRECTION_UP
1134:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERDIRECTION_DOWN
1135:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1136:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetDirection(TIM_TypeDef *TIMx)
1137:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1138:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_DIR));
1139:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1140:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1141:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1142:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Set the prescaler value.
1143:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note The counter clock frequency CK_CNT is equal to fCK_PSC / (PSC[15:0] + 1).
1144:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note The prescaler can be changed on the fly as this control register is buffered. The new
1145:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       prescaler ratio is taken into account at the next update event.
1146:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Helper macro @ref __LL_TIM_CALC_PSC can be used to calculate the Prescaler parameter
1147:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll PSC          PSC           LL_TIM_SetPrescaler
1148:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1149:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Prescaler between Min_Data=0 and Max_Data=65535
1150:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1151:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 80


1152:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetPrescaler(TIM_TypeDef *TIMx, uint32_t Prescaler)
1153:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1154:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   WRITE_REG(TIMx->PSC, Prescaler);
1155:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1156:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1157:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1158:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Get the prescaler value.
1159:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll PSC          PSC           LL_TIM_GetPrescaler
1160:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1161:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval  Prescaler value between Min_Data=0 and Max_Data=65535
1162:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1163:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetPrescaler(TIM_TypeDef *TIMx)
1164:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1165:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->PSC));
1166:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1167:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1168:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1169:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Set the auto-reload value.
1170:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note The counter is blocked while the auto-reload value is null.
1171:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
1172:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
1173:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Helper macro @ref __LL_TIM_CALC_ARR can be used to calculate the AutoReload parameter
1174:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll ARR          ARR           LL_TIM_SetAutoReload
1175:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1176:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  AutoReload between Min_Data=0 and Max_Data=65535
1177:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1178:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1179:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetAutoReload(TIM_TypeDef *TIMx, uint32_t AutoReload)
1180:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1181:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   WRITE_REG(TIMx->ARR, AutoReload);
1182:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1183:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1184:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1185:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Get the auto-reload value.
1186:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll ARR          ARR           LL_TIM_GetAutoReload
1187:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
1188:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
1189:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1190:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval Auto-reload value
1191:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1192:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetAutoReload(TIM_TypeDef *TIMx)
1193:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1194:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->ARR));
1195:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1196:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1197:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1198:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
1199:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1200:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1201:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Capture_Compare Capture Compare configuration
1202:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
1203:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1204:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1205:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Set the trigger of the capture/compare DMA request.
1206:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR2          CCDS          LL_TIM_CC_SetDMAReqTrigger
1207:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1208:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  DMAReqTrigger This parameter can be one of the following values:
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 81


1209:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCDMAREQUEST_CC
1210:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCDMAREQUEST_UPDATE
1211:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1212:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1213:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_SetDMAReqTrigger(TIM_TypeDef *TIMx, uint32_t DMAReqTrigger)
1214:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1215:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   MODIFY_REG(TIMx->CR2, TIM_CR2_CCDS, DMAReqTrigger);
1216:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1217:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1218:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1219:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Get actual trigger of the capture/compare DMA request.
1220:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR2          CCDS          LL_TIM_CC_GetDMAReqTrigger
1221:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1222:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1223:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCDMAREQUEST_CC
1224:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCDMAREQUEST_UPDATE
1225:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1226:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_CC_GetDMAReqTrigger(TIM_TypeDef *TIMx)
1227:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1228:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR2, TIM_CR2_CCDS));
1229:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1230:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1231:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1232:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Enable capture/compare channels.
1233:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCER         CC1E          LL_TIM_CC_EnableChannel\n
1234:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC2E          LL_TIM_CC_EnableChannel\n
1235:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC3E          LL_TIM_CC_EnableChannel\n
1236:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC4E          LL_TIM_CC_EnableChannel
1237:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1238:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channels This parameter can be a combination of the following values:
1239:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1240:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1241:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1242:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1243:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1244:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1245:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_EnableChannel(TIM_TypeDef *TIMx, uint32_t Channels)
1246:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1247:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   SET_BIT(TIMx->CCER, Channels);
1248:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1249:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1250:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1251:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Disable capture/compare channels.
1252:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCER         CC1E          LL_TIM_CC_DisableChannel\n
1253:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC2E          LL_TIM_CC_DisableChannel\n
1254:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC3E          LL_TIM_CC_DisableChannel\n
1255:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC4E          LL_TIM_CC_DisableChannel
1256:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1257:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channels This parameter can be a combination of the following values:
1258:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1259:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1260:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1261:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1262:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1263:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1264:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_DisableChannel(TIM_TypeDef *TIMx, uint32_t Channels)
1265:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 82


1266:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   CLEAR_BIT(TIMx->CCER, Channels);
1267:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1268:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1269:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1270:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Indicate whether channel(s) is(are) enabled.
1271:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCER         CC1E          LL_TIM_CC_IsEnabledChannel\n
1272:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC2E          LL_TIM_CC_IsEnabledChannel\n
1273:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC3E          LL_TIM_CC_IsEnabledChannel\n
1274:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC4E          LL_TIM_CC_IsEnabledChannel
1275:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1276:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channels This parameter can be a combination of the following values:
1277:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1278:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1279:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1280:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1281:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
1282:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1283:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_CC_IsEnabledChannel(TIM_TypeDef *TIMx, uint32_t Channels)
1284:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1285:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(TIMx->CCER, Channels) == (Channels)) ? 1UL : 0UL);
1286:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1287:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1288:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1289:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
1290:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1291:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1292:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Output_Channel Output channel configuration
1293:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
1294:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1295:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1296:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Configure an output channel.
1297:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCMR1        CC1S          LL_TIM_OC_ConfigOutput\n
1298:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR1        CC2S          LL_TIM_OC_ConfigOutput\n
1299:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        CC3S          LL_TIM_OC_ConfigOutput\n
1300:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        CC4S          LL_TIM_OC_ConfigOutput\n
1301:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC1P          LL_TIM_OC_ConfigOutput\n
1302:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_OC_ConfigOutput\n
1303:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_OC_ConfigOutput\n
1304:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_OC_ConfigOutput\n
1305:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1306:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1307:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1308:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1309:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1310:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1311:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Configuration This parameter must be a combination of all the following values:
1312:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCPOLARITY_HIGH or @ref LL_TIM_OCPOLARITY_LOW
1313:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1314:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1315:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_ConfigOutput(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t Configura
1316:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1317:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1318:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
1319:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   CLEAR_BIT(*pReg, (TIM_CCMR1_CC1S << SHIFT_TAB_OCxx[iChannel]));
1320:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   MODIFY_REG(TIMx->CCER, (TIM_CCER_CC1P << SHIFT_TAB_CCxP[iChannel]),
1321:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****              (Configuration & TIM_CCER_CC1P) << SHIFT_TAB_CCxP[iChannel]);
1322:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 83


1323:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1324:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1325:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Define the behavior of the output reference signal OCxREF from which
1326:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         OCx and OCxN (when relevant) are derived.
1327:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCMR1        OC1M          LL_TIM_OC_SetMode\n
1328:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR1        OC2M          LL_TIM_OC_SetMode\n
1329:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        OC3M          LL_TIM_OC_SetMode\n
1330:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        OC4M          LL_TIM_OC_SetMode
1331:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1332:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1333:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1334:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1335:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1336:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1337:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Mode This parameter can be one of the following values:
1338:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FROZEN
1339:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_ACTIVE
1340:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_INACTIVE
1341:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_TOGGLE
1342:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FORCED_INACTIVE
1343:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FORCED_ACTIVE
1344:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_PWM1
1345:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_PWM2
1346:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1347:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1348:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetMode(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t Mode)
1349:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1350:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1351:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
1352:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_OC1M  | TIM_CCMR1_CC1S) << SHIFT_TAB_OCxx[iChannel]),  Mode << SHIF
1353:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1354:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1355:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1356:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Get the output compare mode of an output channel.
1357:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCMR1        OC1M          LL_TIM_OC_GetMode\n
1358:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR1        OC2M          LL_TIM_OC_GetMode\n
1359:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        OC3M          LL_TIM_OC_GetMode\n
1360:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        OC4M          LL_TIM_OC_GetMode
1361:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1362:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1363:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1364:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1365:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1366:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1367:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1368:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FROZEN
1369:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_ACTIVE
1370:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_INACTIVE
1371:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_TOGGLE
1372:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FORCED_INACTIVE
1373:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FORCED_ACTIVE
1374:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_PWM1
1375:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_PWM2
1376:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1377:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetMode(TIM_TypeDef *TIMx, uint32_t Channel)
1378:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1379:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 84


1380:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFS
1381:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return (READ_BIT(*pReg, ((TIM_CCMR1_OC1M  | TIM_CCMR1_CC1S) << SHIFT_TAB_OCxx[iChannel])) >> SHIF
1382:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1383:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1384:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1385:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Set the polarity of an output channel.
1386:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCER         CC1P          LL_TIM_OC_SetPolarity\n
1387:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_OC_SetPolarity\n
1388:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_OC_SetPolarity\n
1389:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_OC_SetPolarity
1390:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1391:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1392:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1393:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1394:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1395:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1396:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Polarity This parameter can be one of the following values:
1397:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCPOLARITY_HIGH
1398:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCPOLARITY_LOW
1399:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1400:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1401:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetPolarity(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t Polarity)
1402:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1403:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1404:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   MODIFY_REG(TIMx->CCER, (TIM_CCER_CC1P << SHIFT_TAB_CCxP[iChannel]),  Polarity << SHIFT_TAB_CCxP[i
1405:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1406:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1407:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1408:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Get the polarity of an output channel.
1409:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCER         CC1P          LL_TIM_OC_GetPolarity\n
1410:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_OC_GetPolarity\n
1411:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_OC_GetPolarity\n
1412:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_OC_GetPolarity
1413:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1414:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1415:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1416:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1417:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1418:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1419:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1420:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCPOLARITY_HIGH
1421:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCPOLARITY_LOW
1422:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1423:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetPolarity(TIM_TypeDef *TIMx, uint32_t Channel)
1424:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1425:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1426:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return (READ_BIT(TIMx->CCER, (TIM_CCER_CC1P << SHIFT_TAB_CCxP[iChannel])) >> SHIFT_TAB_CCxP[iChan
1427:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1428:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1429:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1430:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Enable fast mode for the output channel.
1431:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Acts only if the channel is configured in PWM1 or PWM2 mode.
1432:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCMR1        OC1FE          LL_TIM_OC_EnableFast\n
1433:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR1        OC2FE          LL_TIM_OC_EnableFast\n
1434:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        OC3FE          LL_TIM_OC_EnableFast\n
1435:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        OC4FE          LL_TIM_OC_EnableFast
1436:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 85


1437:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1438:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1439:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1440:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1441:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1442:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1443:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1444:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_EnableFast(TIM_TypeDef *TIMx, uint32_t Channel)
1445:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1446:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1447:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
1448:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   SET_BIT(*pReg, (TIM_CCMR1_OC1FE << SHIFT_TAB_OCxx[iChannel]));
1449:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1450:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1451:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1452:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1453:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Disable fast mode for the output channel.
1454:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCMR1        OC1FE          LL_TIM_OC_DisableFast\n
1455:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR1        OC2FE          LL_TIM_OC_DisableFast\n
1456:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        OC3FE          LL_TIM_OC_DisableFast\n
1457:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        OC4FE          LL_TIM_OC_DisableFast
1458:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1459:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1460:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1461:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1462:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1463:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1464:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1465:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1466:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_DisableFast(TIM_TypeDef *TIMx, uint32_t Channel)
1467:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1468:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1469:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
1470:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   CLEAR_BIT(*pReg, (TIM_CCMR1_OC1FE << SHIFT_TAB_OCxx[iChannel]));
1471:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1472:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1473:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1474:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1475:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Indicates whether fast mode is enabled for the output channel.
1476:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCMR1        OC1FE          LL_TIM_OC_IsEnabledFast\n
1477:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR1        OC2FE          LL_TIM_OC_IsEnabledFast\n
1478:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        OC3FE          LL_TIM_OC_IsEnabledFast\n
1479:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        OC4FE          LL_TIM_OC_IsEnabledFast\n
1480:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1481:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1482:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1483:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1484:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1485:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1486:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
1487:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1488:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_IsEnabledFast(TIM_TypeDef *TIMx, uint32_t Channel)
1489:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1490:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1491:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFS
1492:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register uint32_t bitfield = TIM_CCMR1_OC1FE << SHIFT_TAB_OCxx[iChannel];
1493:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(*pReg, bitfield) == bitfield) ? 1UL : 0UL);
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 86


1494:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1495:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1496:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1497:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Enable compare register (TIMx_CCRx) preload for the output channel.
1498:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCMR1        OC1PE          LL_TIM_OC_EnablePreload\n
1499:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR1        OC2PE          LL_TIM_OC_EnablePreload\n
1500:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        OC3PE          LL_TIM_OC_EnablePreload\n
1501:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        OC4PE          LL_TIM_OC_EnablePreload
1502:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1503:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1504:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1505:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1506:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1507:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1508:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1509:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1510:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_EnablePreload(TIM_TypeDef *TIMx, uint32_t Channel)
1511:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1512:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1513:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
1514:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   SET_BIT(*pReg, (TIM_CCMR1_OC1PE << SHIFT_TAB_OCxx[iChannel]));
1515:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1516:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1517:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1518:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Disable compare register (TIMx_CCRx) preload for the output channel.
1519:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCMR1        OC1PE          LL_TIM_OC_DisablePreload\n
1520:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR1        OC2PE          LL_TIM_OC_DisablePreload\n
1521:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        OC3PE          LL_TIM_OC_DisablePreload\n
1522:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        OC4PE          LL_TIM_OC_DisablePreload
1523:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1524:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1525:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1526:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1527:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1528:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1529:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1530:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1531:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_DisablePreload(TIM_TypeDef *TIMx, uint32_t Channel)
1532:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1533:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1534:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
1535:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   CLEAR_BIT(*pReg, (TIM_CCMR1_OC1PE << SHIFT_TAB_OCxx[iChannel]));
1536:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1537:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1538:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1539:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Indicates whether compare register (TIMx_CCRx) preload is enabled for the output channe
1540:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCMR1        OC1PE          LL_TIM_OC_IsEnabledPreload\n
1541:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR1        OC2PE          LL_TIM_OC_IsEnabledPreload\n
1542:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        OC3PE          LL_TIM_OC_IsEnabledPreload\n
1543:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        OC4PE          LL_TIM_OC_IsEnabledPreload\n
1544:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1545:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1546:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1547:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1548:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1549:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1550:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 87


1551:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1552:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_IsEnabledPreload(TIM_TypeDef *TIMx, uint32_t Channel)
1553:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1554:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1555:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFS
1556:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register uint32_t bitfield = TIM_CCMR1_OC1PE << SHIFT_TAB_OCxx[iChannel];
1557:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(*pReg, bitfield) == bitfield) ? 1UL : 0UL);
1558:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1559:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1560:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1561:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Enable clearing the output channel on an external event.
1562:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note This function can only be used in Output compare and PWM modes. It does not work in Force
1563:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_OCXREF_CLEAR_INSTANCE(TIMx) can be used to check whether
1564:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       or not a timer instance can clear the OCxREF signal on an external event.
1565:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCMR1        OC1CE          LL_TIM_OC_EnableClear\n
1566:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR1        OC2CE          LL_TIM_OC_EnableClear\n
1567:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        OC3CE          LL_TIM_OC_EnableClear\n
1568:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        OC4CE          LL_TIM_OC_EnableClear
1569:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1570:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1571:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1572:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1573:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1574:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1575:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1576:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1577:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_EnableClear(TIM_TypeDef *TIMx, uint32_t Channel)
1578:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1579:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1580:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
1581:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   SET_BIT(*pReg, (TIM_CCMR1_OC1CE << SHIFT_TAB_OCxx[iChannel]));
1582:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1583:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1584:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1585:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Disable clearing the output channel on an external event.
1586:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_OCXREF_CLEAR_INSTANCE(TIMx) can be used to check whether
1587:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       or not a timer instance can clear the OCxREF signal on an external event.
1588:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCMR1        OC1CE          LL_TIM_OC_DisableClear\n
1589:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR1        OC2CE          LL_TIM_OC_DisableClear\n
1590:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        OC3CE          LL_TIM_OC_DisableClear\n
1591:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        OC4CE          LL_TIM_OC_DisableClear
1592:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1593:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1594:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1595:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1596:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1597:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1598:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1599:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1600:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_DisableClear(TIM_TypeDef *TIMx, uint32_t Channel)
1601:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1602:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1603:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
1604:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   CLEAR_BIT(*pReg, (TIM_CCMR1_OC1CE << SHIFT_TAB_OCxx[iChannel]));
1605:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1606:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1607:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 88


1608:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Indicates clearing the output channel on an external event is enabled for the output ch
1609:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note This function enables clearing the output channel on an external event.
1610:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note This function can only be used in Output compare and PWM modes. It does not work in Force
1611:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_OCXREF_CLEAR_INSTANCE(TIMx) can be used to check whether
1612:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       or not a timer instance can clear the OCxREF signal on an external event.
1613:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCMR1        OC1CE          LL_TIM_OC_IsEnabledClear\n
1614:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR1        OC2CE          LL_TIM_OC_IsEnabledClear\n
1615:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        OC3CE          LL_TIM_OC_IsEnabledClear\n
1616:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        OC4CE          LL_TIM_OC_IsEnabledClear\n
1617:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1618:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1619:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1620:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1621:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1622:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1623:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
1624:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1625:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_IsEnabledClear(TIM_TypeDef *TIMx, uint32_t Channel)
1626:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1627:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1628:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFS
1629:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register uint32_t bitfield = TIM_CCMR1_OC1CE << SHIFT_TAB_OCxx[iChannel];
1630:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(*pReg, bitfield) == bitfield) ? 1UL : 0UL);
1631:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1632:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1633:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1634:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Set compare value for output channel 1 (TIMx_CCR1).
1635:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note In 32-bit timer implementations compare value can be between 0x00000000 and 0xFFFFFFFF.
1636:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
1637:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
1638:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CC1_INSTANCE(TIMx) can be used to check whether or not
1639:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       output channel 1 is supported by a timer instance.
1640:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCR1         CCR1          LL_TIM_OC_SetCompareCH1
1641:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1642:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  CompareValue between Min_Data=0 and Max_Data=65535
1643:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1644:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1645:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetCompareCH1(TIM_TypeDef *TIMx, uint32_t CompareValue)
1646:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1647:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   WRITE_REG(TIMx->CCR1, CompareValue);
1648:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1649:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1650:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1651:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Set compare value for output channel 2 (TIMx_CCR2).
1652:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note In 32-bit timer implementations compare value can be between 0x00000000 and 0xFFFFFFFF.
1653:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
1654:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
1655:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CC2_INSTANCE(TIMx) can be used to check whether or not
1656:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       output channel 2 is supported by a timer instance.
1657:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCR2         CCR2          LL_TIM_OC_SetCompareCH2
1658:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1659:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  CompareValue between Min_Data=0 and Max_Data=65535
1660:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1661:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1662:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetCompareCH2(TIM_TypeDef *TIMx, uint32_t CompareValue)
1663:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1664:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   WRITE_REG(TIMx->CCR2, CompareValue);
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 89


1665:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1666:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1667:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1668:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Set compare value for output channel 3 (TIMx_CCR3).
1669:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note In 32-bit timer implementations compare value can be between 0x00000000 and 0xFFFFFFFF.
1670:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
1671:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
1672:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CC3_INSTANCE(TIMx) can be used to check whether or not
1673:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       output channel is supported by a timer instance.
1674:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCR3         CCR3          LL_TIM_OC_SetCompareCH3
1675:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1676:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  CompareValue between Min_Data=0 and Max_Data=65535
1677:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1678:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1679:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetCompareCH3(TIM_TypeDef *TIMx, uint32_t CompareValue)
1680:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1681:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   WRITE_REG(TIMx->CCR3, CompareValue);
1682:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1683:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1684:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1685:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Set compare value for output channel 4 (TIMx_CCR4).
1686:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note In 32-bit timer implementations compare value can be between 0x00000000 and 0xFFFFFFFF.
1687:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
1688:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
1689:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CC4_INSTANCE(TIMx) can be used to check whether or not
1690:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       output channel 4 is supported by a timer instance.
1691:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCR4         CCR4          LL_TIM_OC_SetCompareCH4
1692:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1693:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  CompareValue between Min_Data=0 and Max_Data=65535
1694:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1695:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1696:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetCompareCH4(TIM_TypeDef *TIMx, uint32_t CompareValue)
1697:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1698:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   WRITE_REG(TIMx->CCR4, CompareValue);
1699:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1700:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1701:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1702:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Get compare value (TIMx_CCR1) set for  output channel 1.
1703:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note In 32-bit timer implementations returned compare value can be between 0x00000000 and 0xFF
1704:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
1705:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
1706:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CC1_INSTANCE(TIMx) can be used to check whether or not
1707:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       output channel 1 is supported by a timer instance.
1708:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCR1         CCR1          LL_TIM_OC_GetCompareCH1
1709:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1710:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval CompareValue (between Min_Data=0 and Max_Data=65535)
1711:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1712:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetCompareCH1(TIM_TypeDef *TIMx)
1713:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1714:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR1));
1715:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1716:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1717:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1718:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Get compare value (TIMx_CCR2) set for  output channel 2.
1719:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note In 32-bit timer implementations returned compare value can be between 0x00000000 and 0xFF
1720:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
1721:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 90


1722:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CC2_INSTANCE(TIMx) can be used to check whether or not
1723:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       output channel 2 is supported by a timer instance.
1724:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCR2         CCR2          LL_TIM_OC_GetCompareCH2
1725:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1726:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval CompareValue (between Min_Data=0 and Max_Data=65535)
1727:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1728:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetCompareCH2(TIM_TypeDef *TIMx)
1729:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1730:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR2));
1731:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1732:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1733:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1734:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Get compare value (TIMx_CCR3) set for  output channel 3.
1735:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note In 32-bit timer implementations returned compare value can be between 0x00000000 and 0xFF
1736:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
1737:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
1738:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CC3_INSTANCE(TIMx) can be used to check whether or not
1739:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       output channel 3 is supported by a timer instance.
1740:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCR3         CCR3          LL_TIM_OC_GetCompareCH3
1741:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1742:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval CompareValue (between Min_Data=0 and Max_Data=65535)
1743:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1744:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetCompareCH3(TIM_TypeDef *TIMx)
1745:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1746:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR3));
1747:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1748:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1749:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1750:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Get compare value (TIMx_CCR4) set for  output channel 4.
1751:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note In 32-bit timer implementations returned compare value can be between 0x00000000 and 0xFF
1752:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
1753:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
1754:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CC4_INSTANCE(TIMx) can be used to check whether or not
1755:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       output channel 4 is supported by a timer instance.
1756:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCR4         CCR4          LL_TIM_OC_GetCompareCH4
1757:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1758:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval CompareValue (between Min_Data=0 and Max_Data=65535)
1759:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1760:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetCompareCH4(TIM_TypeDef *TIMx)
1761:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1762:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR4));
1763:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1764:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1765:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1766:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
1767:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1768:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1769:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Input_Channel Input channel configuration
1770:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
1771:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1772:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1773:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Configure input channel.
1774:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCMR1        CC1S          LL_TIM_IC_Config\n
1775:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR1        IC1PSC        LL_TIM_IC_Config\n
1776:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR1        IC1F          LL_TIM_IC_Config\n
1777:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR1        CC2S          LL_TIM_IC_Config\n
1778:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR1        IC2PSC        LL_TIM_IC_Config\n
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 91


1779:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR1        IC2F          LL_TIM_IC_Config\n
1780:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        CC3S          LL_TIM_IC_Config\n
1781:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        IC3PSC        LL_TIM_IC_Config\n
1782:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        IC3F          LL_TIM_IC_Config\n
1783:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        CC4S          LL_TIM_IC_Config\n
1784:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        IC4PSC        LL_TIM_IC_Config\n
1785:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        IC4F          LL_TIM_IC_Config\n
1786:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC1P          LL_TIM_IC_Config\n
1787:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC1NP         LL_TIM_IC_Config\n
1788:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_IC_Config\n
1789:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC2NP         LL_TIM_IC_Config\n
1790:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_IC_Config\n
1791:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC3NP         LL_TIM_IC_Config\n
1792:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_IC_Config\n
1793:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC4NP         LL_TIM_IC_Config
1794:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1795:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1796:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1797:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1798:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1799:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1800:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Configuration This parameter must be a combination of all the following values:
1801:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_DIRECTTI or @ref LL_TIM_ACTIVEINPUT_INDIRECTTI or @ref LL_
1802:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV1 or ... or @ref LL_TIM_ICPSC_DIV8
1803:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1 or ... or @ref LL_TIM_IC_FILTER_FDIV32_N8
1804:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_RISING or @ref LL_TIM_IC_POLARITY_FALLING or @ref LL_TIM_I
1805:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1806:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1807:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_Config(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t Configuration)
1808:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1809:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1810:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
1811:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_IC1F | TIM_CCMR1_IC1PSC | TIM_CCMR1_CC1S) << SHIFT_TAB_ICxx[iChanne
1812:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****              ((Configuration >> 16U) & (TIM_CCMR1_IC1F | TIM_CCMR1_IC1PSC | TIM_CCMR1_CC1S))  << SH
1813:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   MODIFY_REG(TIMx->CCER, ((TIM_CCER_CC1NP | TIM_CCER_CC1P) << SHIFT_TAB_CCxP[iChannel]),
1814:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****              (Configuration & (TIM_CCER_CC1NP | TIM_CCER_CC1P)) << SHIFT_TAB_CCxP[iChannel]);
1815:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1816:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1817:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1818:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Set the active input.
1819:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCMR1        CC1S          LL_TIM_IC_SetActiveInput\n
1820:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR1        CC2S          LL_TIM_IC_SetActiveInput\n
1821:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        CC3S          LL_TIM_IC_SetActiveInput\n
1822:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        CC4S          LL_TIM_IC_SetActiveInput
1823:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1824:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1825:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1826:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1827:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1828:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1829:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  ICActiveInput This parameter can be one of the following values:
1830:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_DIRECTTI
1831:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_INDIRECTTI
1832:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_TRC
1833:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1834:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1835:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_SetActiveInput(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ICActiv
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 92


1836:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1837:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1838:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
1839:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_CC1S) << SHIFT_TAB_ICxx[iChannel]), (ICActiveInput >> 16U) << SHIFT
1840:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1841:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1842:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1843:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Get the current active input.
1844:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCMR1        CC1S          LL_TIM_IC_GetActiveInput\n
1845:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR1        CC2S          LL_TIM_IC_GetActiveInput\n
1846:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        CC3S          LL_TIM_IC_GetActiveInput\n
1847:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        CC4S          LL_TIM_IC_GetActiveInput
1848:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1849:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1850:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1851:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1852:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1853:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1854:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1855:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_DIRECTTI
1856:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_INDIRECTTI
1857:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_TRC
1858:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1859:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetActiveInput(TIM_TypeDef *TIMx, uint32_t Channel)
1860:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1861:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1862:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFS
1863:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(*pReg, ((TIM_CCMR1_CC1S) << SHIFT_TAB_ICxx[iChannel])) >> SHIFT_TAB_ICxx[iChann
1864:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1865:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1866:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1867:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Set the prescaler of input channel.
1868:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCMR1        IC1PSC        LL_TIM_IC_SetPrescaler\n
1869:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR1        IC2PSC        LL_TIM_IC_SetPrescaler\n
1870:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        IC3PSC        LL_TIM_IC_SetPrescaler\n
1871:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        IC4PSC        LL_TIM_IC_SetPrescaler
1872:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1873:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1874:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1875:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1876:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1877:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1878:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  ICPrescaler This parameter can be one of the following values:
1879:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV1
1880:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV2
1881:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV4
1882:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV8
1883:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1884:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1885:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_SetPrescaler(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ICPrescal
1886:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1887:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1888:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
1889:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_IC1PSC) << SHIFT_TAB_ICxx[iChannel]), (ICPrescaler >> 16U) << SHIFT
1890:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1891:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1892:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 93


1893:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Get the current prescaler value acting on an  input channel.
1894:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCMR1        IC1PSC        LL_TIM_IC_GetPrescaler\n
1895:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR1        IC2PSC        LL_TIM_IC_GetPrescaler\n
1896:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        IC3PSC        LL_TIM_IC_GetPrescaler\n
1897:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        IC4PSC        LL_TIM_IC_GetPrescaler
1898:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1899:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1900:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1901:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1902:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1903:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1904:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1905:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV1
1906:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV2
1907:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV4
1908:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV8
1909:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1910:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetPrescaler(TIM_TypeDef *TIMx, uint32_t Channel)
1911:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1912:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1913:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFS
1914:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(*pReg, ((TIM_CCMR1_IC1PSC) << SHIFT_TAB_ICxx[iChannel])) >> SHIFT_TAB_ICxx[iCha
1915:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1916:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1917:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1918:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Set the input filter duration.
1919:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCMR1        IC1F          LL_TIM_IC_SetFilter\n
1920:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR1        IC2F          LL_TIM_IC_SetFilter\n
1921:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        IC3F          LL_TIM_IC_SetFilter\n
1922:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        IC4F          LL_TIM_IC_SetFilter
1923:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1924:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1925:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1926:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1927:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1928:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1929:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  ICFilter This parameter can be one of the following values:
1930:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1
1931:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N2
1932:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N4
1933:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N8
1934:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV2_N6
1935:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV2_N8
1936:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV4_N6
1937:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV4_N8
1938:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV8_N6
1939:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV8_N8
1940:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N5
1941:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N6
1942:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N8
1943:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N5
1944:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N6
1945:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N8
1946:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1947:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1948:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_SetFilter(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ICFilter)
1949:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 94


1950:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1951:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
1952:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_IC1F) << SHIFT_TAB_ICxx[iChannel]), (ICFilter >> 16U) << SHIFT_TAB_
1953:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1954:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1955:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1956:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Get the input filter duration.
1957:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCMR1        IC1F          LL_TIM_IC_GetFilter\n
1958:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR1        IC2F          LL_TIM_IC_GetFilter\n
1959:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        IC3F          LL_TIM_IC_GetFilter\n
1960:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        IC4F          LL_TIM_IC_GetFilter
1961:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1962:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1963:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1964:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1965:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1966:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1967:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1968:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1
1969:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N2
1970:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N4
1971:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N8
1972:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV2_N6
1973:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV2_N8
1974:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV4_N6
1975:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV4_N8
1976:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV8_N6
1977:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV8_N8
1978:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N5
1979:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N6
1980:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N8
1981:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N5
1982:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N6
1983:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N8
1984:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1985:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetFilter(TIM_TypeDef *TIMx, uint32_t Channel)
1986:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1987:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1988:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFS
1989:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(*pReg, ((TIM_CCMR1_IC1F) << SHIFT_TAB_ICxx[iChannel])) >> SHIFT_TAB_ICxx[iChann
1990:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1991:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1992:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1993:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Set the input channel polarity.
1994:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCER         CC1P          LL_TIM_IC_SetPolarity\n
1995:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC1NP         LL_TIM_IC_SetPolarity\n
1996:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_IC_SetPolarity\n
1997:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC2NP         LL_TIM_IC_SetPolarity\n
1998:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_IC_SetPolarity\n
1999:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC3NP         LL_TIM_IC_SetPolarity\n
2000:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_IC_SetPolarity\n
2001:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC4NP         LL_TIM_IC_SetPolarity
2002:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2003:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2004:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2005:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2006:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 95


2007:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2008:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  ICPolarity This parameter can be one of the following values:
2009:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_RISING
2010:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_FALLING
2011:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_BOTHEDGE
2012:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2013:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2014:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_SetPolarity(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ICPolarity
2015:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2016:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2017:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   MODIFY_REG(TIMx->CCER, ((TIM_CCER_CC1NP | TIM_CCER_CC1P) << SHIFT_TAB_CCxP[iChannel]),
2018:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****              ICPolarity << SHIFT_TAB_CCxP[iChannel]);
2019:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2020:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2021:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2022:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Get the current input channel polarity.
2023:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCER         CC1P          LL_TIM_IC_GetPolarity\n
2024:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC1NP         LL_TIM_IC_GetPolarity\n
2025:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_IC_GetPolarity\n
2026:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC2NP         LL_TIM_IC_GetPolarity\n
2027:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_IC_GetPolarity\n
2028:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC3NP         LL_TIM_IC_GetPolarity\n
2029:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_IC_GetPolarity\n
2030:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC4NP         LL_TIM_IC_GetPolarity
2031:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2032:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2033:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2034:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2035:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2036:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2037:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
2038:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_RISING
2039:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_FALLING
2040:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_BOTHEDGE
2041:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2042:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetPolarity(TIM_TypeDef *TIMx, uint32_t Channel)
2043:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2044:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2045:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return (READ_BIT(TIMx->CCER, ((TIM_CCER_CC1NP | TIM_CCER_CC1P) << SHIFT_TAB_CCxP[iChannel])) >>
2046:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****           SHIFT_TAB_CCxP[iChannel]);
2047:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2048:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2049:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2050:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Connect the TIMx_CH1, CH2 and CH3 pins  to the TI1 input (XOR combination).
2051:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_XOR_INSTANCE(TIMx) can be used to check whether or not
2052:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       a timer instance provides an XOR input.
2053:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR2          TI1S          LL_TIM_IC_EnableXORCombination
2054:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2055:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2056:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2057:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_EnableXORCombination(TIM_TypeDef *TIMx)
2058:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2059:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   SET_BIT(TIMx->CR2, TIM_CR2_TI1S);
2060:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2061:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2062:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2063:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Disconnect the TIMx_CH1, CH2 and CH3 pins  from the TI1 input.
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 96


2064:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_XOR_INSTANCE(TIMx) can be used to check whether or not
2065:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       a timer instance provides an XOR input.
2066:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR2          TI1S          LL_TIM_IC_DisableXORCombination
2067:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2068:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2069:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2070:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_DisableXORCombination(TIM_TypeDef *TIMx)
2071:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2072:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   CLEAR_BIT(TIMx->CR2, TIM_CR2_TI1S);
2073:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2074:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2075:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2076:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Indicates whether the TIMx_CH1, CH2 and CH3 pins are connectected to the TI1 input.
2077:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_XOR_INSTANCE(TIMx) can be used to check whether or not
2078:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * a timer instance provides an XOR input.
2079:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR2          TI1S          LL_TIM_IC_IsEnabledXORCombination
2080:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2081:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2082:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2083:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_IsEnabledXORCombination(TIM_TypeDef *TIMx)
2084:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2085:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(TIMx->CR2, TIM_CR2_TI1S) == (TIM_CR2_TI1S)) ? 1UL : 0UL);
2086:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2087:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2088:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2089:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Get captured value for input channel 1.
2090:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note In 32-bit timer implementations returned captured value can be between 0x00000000 and 0xF
2091:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2092:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2093:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CC1_INSTANCE(TIMx) can be used to check whether or not
2094:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       input channel 1 is supported by a timer instance.
2095:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCR1         CCR1          LL_TIM_IC_GetCaptureCH1
2096:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2097:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval CapturedValue (between Min_Data=0 and Max_Data=65535)
2098:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2099:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetCaptureCH1(TIM_TypeDef *TIMx)
2100:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2101:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR1));
2102:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2103:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2104:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2105:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Get captured value for input channel 2.
2106:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note In 32-bit timer implementations returned captured value can be between 0x00000000 and 0xF
2107:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2108:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2109:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CC2_INSTANCE(TIMx) can be used to check whether or not
2110:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       input channel 2 is supported by a timer instance.
2111:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCR2         CCR2          LL_TIM_IC_GetCaptureCH2
2112:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2113:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval CapturedValue (between Min_Data=0 and Max_Data=65535)
2114:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2115:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetCaptureCH2(TIM_TypeDef *TIMx)
2116:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2117:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR2));
2118:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2119:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2120:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 97


2121:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Get captured value for input channel 3.
2122:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note In 32-bit timer implementations returned captured value can be between 0x00000000 and 0xF
2123:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2124:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2125:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CC3_INSTANCE(TIMx) can be used to check whether or not
2126:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       input channel 3 is supported by a timer instance.
2127:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCR3         CCR3          LL_TIM_IC_GetCaptureCH3
2128:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2129:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval CapturedValue (between Min_Data=0 and Max_Data=65535)
2130:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2131:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetCaptureCH3(TIM_TypeDef *TIMx)
2132:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2133:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR3));
2134:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2135:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2136:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2137:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Get captured value for input channel 4.
2138:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note In 32-bit timer implementations returned captured value can be between 0x00000000 and 0xF
2139:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2140:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2141:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CC4_INSTANCE(TIMx) can be used to check whether or not
2142:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       input channel 4 is supported by a timer instance.
2143:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCR4         CCR4          LL_TIM_IC_GetCaptureCH4
2144:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2145:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval CapturedValue (between Min_Data=0 and Max_Data=65535)
2146:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2147:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetCaptureCH4(TIM_TypeDef *TIMx)
2148:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2149:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR4));
2150:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2151:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2152:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2153:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
2154:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2155:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2156:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Clock_Selection Counter clock selection
2157:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
2158:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2159:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2160:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Enable external clock mode 2.
2161:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note When external clock mode 2 is enabled the counter is clocked by any active edge on the ET
2162:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CLOCKSOURCE_ETRMODE2_INSTANCE(TIMx) can be used to check
2163:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not a timer instance supports external clock mode2.
2164:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SMCR         ECE           LL_TIM_EnableExternalClock
2165:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2166:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2167:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2168:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableExternalClock(TIM_TypeDef *TIMx)
2169:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2170:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   SET_BIT(TIMx->SMCR, TIM_SMCR_ECE);
2171:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2172:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2173:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2174:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Disable external clock mode 2.
2175:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CLOCKSOURCE_ETRMODE2_INSTANCE(TIMx) can be used to check
2176:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not a timer instance supports external clock mode2.
2177:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SMCR         ECE           LL_TIM_DisableExternalClock
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 98


2178:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2179:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2180:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2181:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableExternalClock(TIM_TypeDef *TIMx)
2182:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2183:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   CLEAR_BIT(TIMx->SMCR, TIM_SMCR_ECE);
2184:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2185:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2186:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2187:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Indicate whether external clock mode 2 is enabled.
2188:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CLOCKSOURCE_ETRMODE2_INSTANCE(TIMx) can be used to check
2189:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not a timer instance supports external clock mode2.
2190:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SMCR         ECE           LL_TIM_IsEnabledExternalClock
2191:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2192:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2193:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2194:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledExternalClock(TIM_TypeDef *TIMx)
2195:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2196:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(TIMx->SMCR, TIM_SMCR_ECE) == (TIM_SMCR_ECE)) ? 1UL : 0UL);
2197:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2198:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2199:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2200:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Set the clock source of the counter clock.
2201:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note when selected clock source is external clock mode 1, the timer input
2202:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       the external clock is applied is selected by calling the @ref LL_TIM_SetTriggerInput()
2203:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       function. This timer input must be configured by calling
2204:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       the @ref LL_TIM_IC_Config() function.
2205:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CLOCKSOURCE_ETRMODE1_INSTANCE(TIMx) can be used to check
2206:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not a timer instance supports external clock mode1.
2207:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CLOCKSOURCE_ETRMODE2_INSTANCE(TIMx) can be used to check
2208:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not a timer instance supports external clock mode2.
2209:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SMCR         SMS           LL_TIM_SetClockSource\n
2210:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         SMCR         ECE           LL_TIM_SetClockSource
2211:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2212:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  ClockSource This parameter can be one of the following values:
2213:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKSOURCE_INTERNAL
2214:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKSOURCE_EXT_MODE1
2215:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKSOURCE_EXT_MODE2
2216:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2217:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2218:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetClockSource(TIM_TypeDef *TIMx, uint32_t ClockSource)
2219:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2220:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   MODIFY_REG(TIMx->SMCR, TIM_SMCR_SMS | TIM_SMCR_ECE, ClockSource);
2221:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2222:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2223:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2224:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Set the encoder interface mode.
2225:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_ENCODER_INTERFACE_INSTANCE(TIMx) can be used to check
2226:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not a timer instance supports the encoder mode.
2227:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SMCR         SMS           LL_TIM_SetEncoderMode
2228:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2229:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  EncoderMode This parameter can be one of the following values:
2230:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ENCODERMODE_X2_TI1
2231:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ENCODERMODE_X2_TI2
2232:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ENCODERMODE_X4_TI12
2233:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2234:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 99


2235:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetEncoderMode(TIM_TypeDef *TIMx, uint32_t EncoderMode)
2236:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2237:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   MODIFY_REG(TIMx->SMCR, TIM_SMCR_SMS, EncoderMode);
2238:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2239:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2240:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2241:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
2242:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2243:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2244:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Timer_Synchronization Timer synchronisation configuration
2245:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
2246:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2247:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2248:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Set the trigger output (TRGO) used for timer synchronization .
2249:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_MASTER_INSTANCE(TIMx) can be used to check
2250:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not a timer instance can operate as a master timer.
2251:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR2          MMS           LL_TIM_SetTriggerOutput
2252:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2253:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TimerSynchronization This parameter can be one of the following values:
2254:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_RESET
2255:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_ENABLE
2256:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_UPDATE
2257:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_CC1IF
2258:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_OC1REF
2259:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_OC2REF
2260:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_OC3REF
2261:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_OC4REF
2262:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2263:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2264:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetTriggerOutput(TIM_TypeDef *TIMx, uint32_t TimerSynchronization)
2265:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2266:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   MODIFY_REG(TIMx->CR2, TIM_CR2_MMS, TimerSynchronization);
2267:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2268:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2269:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2270:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Set the synchronization mode of a slave timer.
2271:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_SLAVE_INSTANCE(TIMx) can be used to check whether or not
2272:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       a timer instance can operate as a slave timer.
2273:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SMCR         SMS           LL_TIM_SetSlaveMode
2274:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2275:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  SlaveMode This parameter can be one of the following values:
2276:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_SLAVEMODE_DISABLED
2277:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_SLAVEMODE_RESET
2278:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_SLAVEMODE_GATED
2279:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_SLAVEMODE_TRIGGER
2280:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2281:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2282:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetSlaveMode(TIM_TypeDef *TIMx, uint32_t SlaveMode)
2283:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2284:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   MODIFY_REG(TIMx->SMCR, TIM_SMCR_SMS, SlaveMode);
2285:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2286:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2287:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2288:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Set the selects the trigger input to be used to synchronize the counter.
2289:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_SLAVE_INSTANCE(TIMx) can be used to check whether or not
2290:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       a timer instance can operate as a slave timer.
2291:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SMCR         TS            LL_TIM_SetTriggerInput
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 100


2292:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2293:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TriggerInput This parameter can be one of the following values:
2294:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ITR0
2295:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ITR1
2296:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ITR2
2297:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ITR3
2298:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_TI1F_ED
2299:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_TI1FP1
2300:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_TI2FP2
2301:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ETRF
2302:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2303:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2304:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetTriggerInput(TIM_TypeDef *TIMx, uint32_t TriggerInput)
2305:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2306:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   MODIFY_REG(TIMx->SMCR, TIM_SMCR_TS, TriggerInput);
2307:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2308:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2309:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2310:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Enable the Master/Slave mode.
2311:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_SLAVE_INSTANCE(TIMx) can be used to check whether or not
2312:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       a timer instance can operate as a slave timer.
2313:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SMCR         MSM           LL_TIM_EnableMasterSlaveMode
2314:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2315:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2316:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2317:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableMasterSlaveMode(TIM_TypeDef *TIMx)
2318:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2319:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   SET_BIT(TIMx->SMCR, TIM_SMCR_MSM);
2320:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2321:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2322:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2323:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Disable the Master/Slave mode.
2324:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_SLAVE_INSTANCE(TIMx) can be used to check whether or not
2325:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       a timer instance can operate as a slave timer.
2326:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SMCR         MSM           LL_TIM_DisableMasterSlaveMode
2327:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2328:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2329:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2330:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableMasterSlaveMode(TIM_TypeDef *TIMx)
2331:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2332:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   CLEAR_BIT(TIMx->SMCR, TIM_SMCR_MSM);
2333:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2334:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2335:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2336:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief Indicates whether the Master/Slave mode is enabled.
2337:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_SLAVE_INSTANCE(TIMx) can be used to check whether or not
2338:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * a timer instance can operate as a slave timer.
2339:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SMCR         MSM           LL_TIM_IsEnabledMasterSlaveMode
2340:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2341:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2342:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2343:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledMasterSlaveMode(TIM_TypeDef *TIMx)
2344:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2345:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(TIMx->SMCR, TIM_SMCR_MSM) == (TIM_SMCR_MSM)) ? 1UL : 0UL);
2346:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2347:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2348:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 101


2349:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Configure the external trigger (ETR) input.
2350:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_ETR_INSTANCE(TIMx) can be used to check whether or not
2351:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       a timer instance provides an external trigger input.
2352:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SMCR         ETP           LL_TIM_ConfigETR\n
2353:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         SMCR         ETPS          LL_TIM_ConfigETR\n
2354:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         SMCR         ETF           LL_TIM_ConfigETR
2355:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2356:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  ETRPolarity This parameter can be one of the following values:
2357:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_POLARITY_NONINVERTED
2358:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_POLARITY_INVERTED
2359:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  ETRPrescaler This parameter can be one of the following values:
2360:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_PRESCALER_DIV1
2361:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_PRESCALER_DIV2
2362:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_PRESCALER_DIV4
2363:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_PRESCALER_DIV8
2364:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  ETRFilter This parameter can be one of the following values:
2365:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV1
2366:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV1_N2
2367:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV1_N4
2368:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV1_N8
2369:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV2_N6
2370:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV2_N8
2371:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV4_N6
2372:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV4_N8
2373:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV8_N6
2374:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV8_N8
2375:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV16_N5
2376:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV16_N6
2377:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV16_N8
2378:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV32_N5
2379:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV32_N6
2380:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV32_N8
2381:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2382:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2383:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ConfigETR(TIM_TypeDef *TIMx, uint32_t ETRPolarity, uint32_t ETRPrescale
2384:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                       uint32_t ETRFilter)
2385:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2386:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   MODIFY_REG(TIMx->SMCR, TIM_SMCR_ETP | TIM_SMCR_ETPS | TIM_SMCR_ETF, ETRPolarity | ETRPrescaler | 
2387:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2388:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2389:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2390:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
2391:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2392:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2393:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EF_DMA_Burst_Mode DMA burst mode configuration
2394:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
2395:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2396:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2397:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Configures the timer DMA burst feature.
2398:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_DMABURST_INSTANCE(TIMx) can be used to check whether or
2399:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       not a timer instance supports the DMA burst mode.
2400:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll DCR          DBL           LL_TIM_ConfigDMABurst\n
2401:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         DCR          DBA           LL_TIM_ConfigDMABurst
2402:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2403:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  DMABurstBaseAddress This parameter can be one of the following values:
2404:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CR1
2405:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CR2
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 102


2406:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_SMCR
2407:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_DIER
2408:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_SR
2409:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_EGR
2410:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCMR1
2411:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCMR2
2412:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCER
2413:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CNT
2414:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_PSC
2415:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_ARR
2416:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCR1
2417:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCR2
2418:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCR3
2419:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCR4
2420:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_OR
2421:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  DMABurstLength This parameter can be one of the following values:
2422:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_1TRANSFER
2423:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_2TRANSFERS
2424:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_3TRANSFERS
2425:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_4TRANSFERS
2426:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_5TRANSFERS
2427:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_6TRANSFERS
2428:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_7TRANSFERS
2429:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_8TRANSFERS
2430:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_9TRANSFERS
2431:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_10TRANSFERS
2432:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_11TRANSFERS
2433:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_12TRANSFERS
2434:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_13TRANSFERS
2435:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_14TRANSFERS
2436:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_15TRANSFERS
2437:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_16TRANSFERS
2438:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_17TRANSFERS
2439:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_18TRANSFERS
2440:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2441:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2442:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ConfigDMABurst(TIM_TypeDef *TIMx, uint32_t DMABurstBaseAddress, uint32_
2443:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2444:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   MODIFY_REG(TIMx->DCR, (TIM_DCR_DBL | TIM_DCR_DBA), (DMABurstBaseAddress | DMABurstLength));
2445:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2446:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2447:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2448:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
2449:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2450:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2451:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Timer_Inputs_Remapping Timer input remapping
2452:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
2453:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2454:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2455:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Remap TIM inputs (input channel, internal/external triggers).
2456:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_REMAP_INSTANCE(TIMx) can be used to check whether or not
2457:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       a some timer inputs can be remapped.
2458:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****  * @rmtoll  TIM2_OR     ITR1_RMP      LL_TIM_SetRemap\n
2459:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         TIM3_OR     ITR2_RMP      LL_TIM_SetRemap\n
2460:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         TIM9_OR     TI1_RMP       LL_TIM_SetRemap\n
2461:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         TIM9_OR     ITR1_RMP      LL_TIM_SetRemap\n
2462:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         TIM10_OR    TI1_RMP       LL_TIM_SetRemap\n
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 103


2463:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         TIM10_OR    ETR_RMP       LL_TIM_SetRemap\n
2464:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         TIM10_OR    TI1_RMP_RI    LL_TIM_SetRemap\n
2465:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         TIM11_OR    TI1_RMP       LL_TIM_SetRemap\n
2466:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         TIM11_OR    ETR_RMP       LL_TIM_SetRemap\n
2467:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         TIM11_OR    TI1_RMP_RI    LL_TIM_SetRemap
2468:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2469:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Remap Remap params depends on the TIMx. Description available only
2470:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         in CHM version of the User Manual (not in .pdf).
2471:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         Otherwise see Reference Manual description of OR registers.
2472:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *
2473:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         Below description summarizes "Timer Instance" and "Remap" param combinations:
2474:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *
2475:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         TIM2: any combination of ITR1_RMP where
2476:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *
2477:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            . . ITR1_RMP can be one of the following values
2478:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_TIR1_RMP_TIM10_OC  (**)
2479:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_TIR1_RMP_TIM5_TGO  (**)
2480:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *
2481:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         TIM3: any combination of ITR2_RMP where
2482:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *
2483:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            . . ITR2_RMP can be one of the following values
2484:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_TIR2_RMP_TIM11_OC  (**)
2485:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_TIR2_RMP_TIM5_TGO  (**)
2486:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *
2487:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         TIM9: any combination of TI1_RMP, ITR1_RMP where
2488:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *
2489:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            . . TI1_RMP can be one of the following values
2490:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM9_TI1_RMP_LSE
2491:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM9_TI1_RMP_GPIO
2492:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *
2493:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            . . ITR1_RMP can be one of the following values
2494:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM9_ITR1_RMP_TIM3_TGO  (*)
2495:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM9_ITR1_RMP_TOUCH_IO  (*)
2496:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *
2497:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *
2498:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         TIM10: any combination of TI1_RMP, ETR_RMP, TI1_RMP_RI   where
2499:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *
2500:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            . . TI1_RMP can be one of the following values
2501:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM10_TI1_RMP_GPIO
2502:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM10_TI1_RMP_LSI
2503:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM10_TI1_RMP_LSE
2504:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM10_TI1_RMP_RTC
2505:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *
2506:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            . . ETR_RMP can be one of the following values
2507:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM10_ETR_RMP_TIM9_TGO  (*)
2508:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *
2509:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            . . TI1_RMP_RI can be one of the following values
2510:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM10_TI1_RMP_RI        (*)
2511:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *
2512:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *
2513:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         TIM11: any combination of TI1_RMP, ETR_RMP, TI1_RMP_RI   where
2514:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *
2515:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            . . TI1_RMP can be one of the following values
2516:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM11_TI1_RMP_MSI
2517:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM11_TI1_RMP_HSE_RTC
2518:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM11_TI1_RMP
2519:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 104


2520:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            . . ETR_RMP can be one of the following values
2521:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM11_ETR_RMP_TIM9_TGO  (*)
2522:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *
2523:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            . . TI1_RMP_RI can be one of the following values
2524:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM11_TI1_RMP_RI        (*)
2525:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *
2526:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *           (*) value not available in all devices categories
2527:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *           (**) register not available in all devices categories
2528:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *
2529:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Option registers are available only for cat.3, cat.4 and cat.5  devices
2530:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2531:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2532:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetRemap(TIM_TypeDef *TIMx, uint32_t Remap)
2533:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2534:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   MODIFY_REG(TIMx->OR, (Remap >> TIMx_OR_RMP_SHIFT), (Remap & TIMx_OR_RMP_MASK));
2535:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2536:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2537:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2538:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
2539:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2540:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2541:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EF_OCREF_Clear OCREF_Clear_Management
2542:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
2543:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2544:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2545:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Set the OCREF clear input source
2546:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note The OCxREF signal of a given channel can be cleared when a high level is applied on the O
2547:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note This function can only be used in Output compare and PWM modes.
2548:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note the ETR signal can be connected to the output of a comparator to be used for current hand
2549:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SMCR          OCCS                LL_TIM_SetOCRefClearInputSource
2550:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2551:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  OCRefClearInputSource This parameter can be one of the following values:
2552:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCREF_CLR_INT_OCREF_CLR
2553:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCREF_CLR_INT_ETR
2554:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2555:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2556:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetOCRefClearInputSource(TIM_TypeDef *TIMx, uint32_t OCRefClearInputSou
2557:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2558:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   MODIFY_REG(TIMx->SMCR, TIM_SMCR_OCCS, OCRefClearInputSource);
2559:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2560:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2561:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
2562:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2563:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2564:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EF_FLAG_Management FLAG-Management
2565:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
2566:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2567:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2568:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Clear the update interrupt flag (UIF).
2569:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SR           UIF           LL_TIM_ClearFlag_UPDATE
2570:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2571:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2572:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2573:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_UPDATE(TIM_TypeDef *TIMx)
2574:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2575:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_UIF));
2576:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 105


2577:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2578:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2579:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Indicate whether update interrupt flag (UIF) is set (update interrupt is pending).
2580:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SR           UIF           LL_TIM_IsActiveFlag_UPDATE
2581:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2582:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2583:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2584:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_UPDATE(TIM_TypeDef *TIMx)
 359              		.loc 4 2584 26 view .LVU50
 360              	.LBB23:
2585:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2586:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_UIF) == (TIM_SR_UIF)) ? 1UL : 0UL);
 361              		.loc 4 2586 3 view .LVU51
 362              		.loc 4 2586 12 is_stmt 0 view .LVU52
 363 0000 044B     		ldr	r3, .L30
 364 0002 1B69     		ldr	r3, [r3, #16]
 365              		.loc 4 2586 66 view .LVU53
 366 0004 13F0010F 		tst	r3, #1
 367 0008 03D0     		beq	.L28
 368              	.LVL9:
 369              		.loc 4 2586 66 view .LVU54
 370              	.LBE23:
 371              	.LBE22:
 249:Core/Src/stm32l1xx_it.c ****   {
 250:Core/Src/stm32l1xx_it.c ****     LL_TIM_ClearFlag_UPDATE(TIM6);
 372              		.loc 1 250 5 is_stmt 1 view .LVU55
 373              	.LBB24:
 374              	.LBI24:
2573:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 375              		.loc 4 2573 22 view .LVU56
 376              	.LBB25:
2575:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 377              		.loc 4 2575 3 view .LVU57
 378 000a 024B     		ldr	r3, .L30
 379 000c 6FF00102 		mvn	r2, #1
 380 0010 1A61     		str	r2, [r3, #16]
 381              	.LVL10:
 382              	.L28:
2575:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 383              		.loc 4 2575 3 is_stmt 0 view .LVU58
 384              	.LBE25:
 385              	.LBE24:
 251:Core/Src/stm32l1xx_it.c ****   }
 252:Core/Src/stm32l1xx_it.c ****   /* USER CODE END TIM6_IRQn 0 */
 253:Core/Src/stm32l1xx_it.c ****   /* USER CODE BEGIN TIM6_IRQn 1 */
 254:Core/Src/stm32l1xx_it.c ****   /* USER CODE END TIM6_IRQn 1 */
 255:Core/Src/stm32l1xx_it.c **** }
 386              		.loc 1 255 1 view .LVU59
 387 0012 7047     		bx	lr
 388              	.L31:
 389              		.align	2
 390              	.L30:
 391 0014 00100040 		.word	1073745920
 392              		.cfi_endproc
 393              	.LFE843:
 395              		.section	.text.TIM7_IRQHandler,"ax",%progbits
 396              		.align	1
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 106


 397              		.global	TIM7_IRQHandler
 398              		.syntax unified
 399              		.thumb
 400              		.thumb_func
 401              		.fpu softvfp
 403              	TIM7_IRQHandler:
 404              	.LFB844:
 256:Core/Src/stm32l1xx_it.c **** 
 257:Core/Src/stm32l1xx_it.c **** /**
 258:Core/Src/stm32l1xx_it.c ****   * @brief This function handles TIM7 global interrupt.
 259:Core/Src/stm32l1xx_it.c ****   */
 260:Core/Src/stm32l1xx_it.c **** void TIM7_IRQHandler(void)
 261:Core/Src/stm32l1xx_it.c **** {
 405              		.loc 1 261 1 is_stmt 1 view -0
 406              		.cfi_startproc
 407              		@ args = 0, pretend = 0, frame = 0
 408              		@ frame_needed = 0, uses_anonymous_args = 0
 409              		@ link register save eliminated.
 262:Core/Src/stm32l1xx_it.c ****   /* USER CODE BEGIN TIM7_IRQn 0 */
 263:Core/Src/stm32l1xx_it.c ****   if (LL_TIM_IsActiveFlag_UPDATE(TIM7))
 410              		.loc 1 263 3 view .LVU61
 411              	.LVL11:
 412              	.LBB26:
 413              	.LBI26:
2584:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 414              		.loc 4 2584 26 view .LVU62
 415              	.LBB27:
 416              		.loc 4 2586 3 view .LVU63
 417              		.loc 4 2586 12 is_stmt 0 view .LVU64
 418 0000 044B     		ldr	r3, .L34
 419 0002 1B69     		ldr	r3, [r3, #16]
 420              		.loc 4 2586 66 view .LVU65
 421 0004 13F0010F 		tst	r3, #1
 422 0008 03D0     		beq	.L32
 423              	.LVL12:
 424              		.loc 4 2586 66 view .LVU66
 425              	.LBE27:
 426              	.LBE26:
 264:Core/Src/stm32l1xx_it.c ****   {
 265:Core/Src/stm32l1xx_it.c ****     LL_TIM_ClearFlag_UPDATE(TIM7);
 427              		.loc 1 265 5 is_stmt 1 view .LVU67
 428              	.LBB28:
 429              	.LBI28:
2573:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 430              		.loc 4 2573 22 view .LVU68
 431              	.LBB29:
2575:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 432              		.loc 4 2575 3 view .LVU69
 433 000a 024B     		ldr	r3, .L34
 434 000c 6FF00102 		mvn	r2, #1
 435 0010 1A61     		str	r2, [r3, #16]
 436              	.LVL13:
 437              	.L32:
2575:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 438              		.loc 4 2575 3 is_stmt 0 view .LVU70
 439              	.LBE29:
 440              	.LBE28:
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 107


 266:Core/Src/stm32l1xx_it.c ****   }
 267:Core/Src/stm32l1xx_it.c ****   /* USER CODE END TIM7_IRQn 0 */
 268:Core/Src/stm32l1xx_it.c ****   /* USER CODE BEGIN TIM7_IRQn 1 */
 269:Core/Src/stm32l1xx_it.c ****   /* USER CODE END TIM7_IRQn 1 */
 270:Core/Src/stm32l1xx_it.c **** }
 441              		.loc 1 270 1 view .LVU71
 442 0012 7047     		bx	lr
 443              	.L35:
 444              		.align	2
 445              	.L34:
 446 0014 00140040 		.word	1073746944
 447              		.cfi_endproc
 448              	.LFE844:
 450              		.section	.text.LL_GetTick,"ax",%progbits
 451              		.align	1
 452              		.global	LL_GetTick
 453              		.syntax unified
 454              		.thumb
 455              		.thumb_func
 456              		.fpu softvfp
 458              	LL_GetTick:
 459              	.LFB845:
 271:Core/Src/stm32l1xx_it.c **** 
 272:Core/Src/stm32l1xx_it.c **** /* USER CODE BEGIN 1 */
 273:Core/Src/stm32l1xx_it.c **** uint32_t LL_GetTick(void)
 274:Core/Src/stm32l1xx_it.c **** {
 460              		.loc 1 274 1 is_stmt 1 view -0
 461              		.cfi_startproc
 462              		@ args = 0, pretend = 0, frame = 0
 463              		@ frame_needed = 0, uses_anonymous_args = 0
 464              		@ link register save eliminated.
 275:Core/Src/stm32l1xx_it.c ****   return sysTickCount;
 465              		.loc 1 275 3 view .LVU73
 276:Core/Src/stm32l1xx_it.c **** }
 466              		.loc 1 276 1 is_stmt 0 view .LVU74
 467 0000 014B     		ldr	r3, .L37
 468 0002 1868     		ldr	r0, [r3]
 469 0004 7047     		bx	lr
 470              	.L38:
 471 0006 00BF     		.align	2
 472              	.L37:
 473 0008 00000000 		.word	.LANCHOR0
 474              		.cfi_endproc
 475              	.LFE845:
 477              		.global	sysTickCount
 478              		.comm	mosiLowLevelData,12,4
 479              		.comm	mosiData,10,4
 480              		.comm	mosiBuff,24,4
 481              		.comm	misoData,16,4
 482              		.comm	misoPinChange,1,1
 483              		.comm	uartRxBuff,24,4
 484              		.section	.bss.sysTickCount,"aw",%nobits
 485              		.align	2
 486              		.set	.LANCHOR0,. + 0
 489              	sysTickCount:
 490 0000 00000000 		.space	4
 491              		.text
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 108


 492              	.Letext0:
 493              		.file 5 "c:\\users\\domen\\appdata\\roaming\\gnu mcu eclipse\\arm embedded gcc\\8.3.1-1.1\\arm-non
 494              		.file 6 "c:\\users\\domen\\appdata\\roaming\\gnu mcu eclipse\\arm embedded gcc\\8.3.1-1.1\\arm-non
 495              		.file 7 "Drivers/CMSIS/Include/core_cm3.h"
 496              		.file 8 "Drivers/CMSIS/Device/ST/STM32L1xx/Include/system_stm32l1xx.h"
 497              		.file 9 "Drivers/CMSIS/Device/ST/STM32L1xx/Include/stm32l100xc.h"
 498              		.file 10 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_dma.h"
 499              		.file 11 "Drivers/CMSIS/Device/ST/STM32L1xx/Include/stm32l1xx.h"
 500              		.file 12 "user/inc/ring_buffer.h"
 501              		.file 13 "user/inc/uart_print_user.h"
 502              		.file 14 "user/inc/cdcData.h"
 503              		.file 15 "user/inc/mfd_io.h"
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s 			page 109


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l1xx_it.c
C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s:16     .text.NMI_Handler:0000000000000000 $t
C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s:24     .text.NMI_Handler:0000000000000000 NMI_Handler
C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s:38     .text.HardFault_Handler:0000000000000000 $t
C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s:45     .text.HardFault_Handler:0000000000000000 HardFault_Handler
C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s:61     .text.MemManage_Handler:0000000000000000 $t
C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s:68     .text.MemManage_Handler:0000000000000000 MemManage_Handler
C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s:84     .text.BusFault_Handler:0000000000000000 $t
C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s:91     .text.BusFault_Handler:0000000000000000 BusFault_Handler
C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s:107    .text.UsageFault_Handler:0000000000000000 $t
C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s:114    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s:130    .text.SVC_Handler:0000000000000000 $t
C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s:137    .text.SVC_Handler:0000000000000000 SVC_Handler
C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s:150    .text.DebugMon_Handler:0000000000000000 $t
C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s:157    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s:170    .text.PendSV_Handler:0000000000000000 $t
C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s:177    .text.PendSV_Handler:0000000000000000 PendSV_Handler
C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s:190    .text.SysTick_Handler:0000000000000000 $t
C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s:197    .text.SysTick_Handler:0000000000000000 SysTick_Handler
C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s:215    .text.SysTick_Handler:000000000000000c $d
C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s:220    .text.EXTI4_IRQHandler:0000000000000000 $t
C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s:227    .text.EXTI4_IRQHandler:0000000000000000 EXTI4_IRQHandler
C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s:282    .text.EXTI4_IRQHandler:000000000000001c $d
C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s:287    .text.USART1_IRQHandler:0000000000000000 $t
C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s:294    .text.USART1_IRQHandler:0000000000000000 USART1_IRQHandler
C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s:335    .text.USART1_IRQHandler:0000000000000014 $d
C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s:340    .text.TIM6_IRQHandler:0000000000000000 $t
C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s:347    .text.TIM6_IRQHandler:0000000000000000 TIM6_IRQHandler
C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s:391    .text.TIM6_IRQHandler:0000000000000014 $d
C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s:396    .text.TIM7_IRQHandler:0000000000000000 $t
C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s:403    .text.TIM7_IRQHandler:0000000000000000 TIM7_IRQHandler
C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s:446    .text.TIM7_IRQHandler:0000000000000014 $d
C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s:451    .text.LL_GetTick:0000000000000000 $t
C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s:458    .text.LL_GetTick:0000000000000000 LL_GetTick
C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s:473    .text.LL_GetTick:0000000000000008 $d
C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s:489    .bss.sysTickCount:0000000000000000 sysTickCount
                            *COM*:000000000000000c mosiLowLevelData
                            *COM*:000000000000000a mosiData
                            *COM*:0000000000000018 mosiBuff
                            *COM*:0000000000000010 misoData
                            *COM*:0000000000000001 misoPinChange
                            *COM*:0000000000000018 uartRxBuff
C:\Users\domen\AppData\Local\Temp\ccbqR6EW.s:485    .bss.sysTickCount:0000000000000000 $d

UNDEFINED SYMBOLS
notifyPinChange
receiveByteIntoBuffer
