ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"timers.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.startUsDelayTimer,"ax",%progbits
  16              		.align	1
  17              		.global	startUsDelayTimer
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	startUsDelayTimer:
  25              	.LFB834:
  26              		.file 1 "user/src/timers.c"
   1:user/src/timers.c **** /**
   2:user/src/timers.c ****   ******************************************************************************
   3:user/src/timers.c ****   * @file           : timers.c
   4:user/src/timers.c ****   * @brief          : Delay and MFD IO timers API
   5:user/src/timers.c ****   ******************************************************************************
   6:user/src/timers.c ****   */
   7:user/src/timers.c **** 
   8:user/src/timers.c **** /* Includes ------------------------------------------------------------------*/
   9:user/src/timers.c **** #include <stdbool.h>
  10:user/src/timers.c **** 
  11:user/src/timers.c **** #include "stm32l1xx.h"
  12:user/src/timers.c **** #include "stm32l1xx_ll_rcc.h"
  13:user/src/timers.c **** #include "stm32l1xx_ll_tim.h"
  14:user/src/timers.c **** 
  15:user/src/timers.c **** /* Private includes ----------------------------------------------------------*/
  16:user/src/timers.c **** #include "main.h"
  17:user/src/timers.c **** 
  18:user/src/timers.c **** #include "io.h"
  19:user/src/timers.c **** #include "timers.h"
  20:user/src/timers.c **** 
  21:user/src/timers.c **** #include "uart_print.h" // TODO
  22:user/src/timers.c **** 
  23:user/src/timers.c **** /* Private typedef -----------------------------------------------------------*/
  24:user/src/timers.c **** /* Private define ------------------------------------------------------------*/
  25:user/src/timers.c **** /* Private macro -------------------------------------------------------------*/
  26:user/src/timers.c **** /* Private variables ---------------------------------------------------------*/
  27:user/src/timers.c **** void _waitUntilUpdate(TIM_TypeDef *TIMx);
  28:user/src/timers.c **** uint32_t _tickToUs(uint32_t tick, uint32_t timerTick);
  29:user/src/timers.c **** uint32_t _usToTick(uint32_t us, uint32_t timerTick);
  30:user/src/timers.c **** 
  31:user/src/timers.c **** LL_RCC_ClocksTypeDef clocks;
  32:user/src/timers.c **** 
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 2


  33:user/src/timers.c **** void initUsDelayTimer(void)
  34:user/src/timers.c **** {
  35:user/src/timers.c ****   NVIC_ClearPendingIRQ(TIM6_IRQn);
  36:user/src/timers.c ****   LL_RCC_GetSystemClocksFreq(&clocks);
  37:user/src/timers.c ****   uint32_t prescaller = US_DELAY_TIMER_TICK * clocks.PCLK1_Frequency / 1e6 - 1;
  38:user/src/timers.c ****   assert_param(prescaller < 65535);
  39:user/src/timers.c ****   LL_TIM_SetPrescaler(US_DELAY_TIMER, prescaller);
  40:user/src/timers.c **** 
  41:user/src/timers.c ****   LL_TIM_SetAutoReload(US_DELAY_TIMER, 65535);
  42:user/src/timers.c ****   LL_TIM_ClearFlag_UPDATE(US_DELAY_TIMER);
  43:user/src/timers.c ****   LL_TIM_EnableIT_UPDATE(US_DELAY_TIMER);
  44:user/src/timers.c ****   LL_TIM_GenerateEvent_UPDATE(US_DELAY_TIMER); // prescaller values is updated at the next update e
  45:user/src/timers.c ****   _waitUntilUpdate(US_DELAY_TIMER);
  46:user/src/timers.c ****   LL_TIM_ClearFlag_UPDATE(US_DELAY_TIMER);
  47:user/src/timers.c **** 
  48:user/src/timers.c ****   NVIC_DisableIRQ(TIM6_IRQn);
  49:user/src/timers.c **** }
  50:user/src/timers.c **** 
  51:user/src/timers.c **** void delayUs(uint32_t us)
  52:user/src/timers.c **** {
  53:user/src/timers.c ****   if (LL_TIM_IsEnabledCounter(US_DELAY_TIMER))
  54:user/src/timers.c ****   {
  55:user/src/timers.c ****     Error_Handler();
  56:user/src/timers.c ****   }
  57:user/src/timers.c **** 
  58:user/src/timers.c ****   uint32_t tickValue = _usToTick(us, US_DELAY_TIMER_TICK) - 1; // we are polling timer counter valu
  59:user/src/timers.c ****                                                                // -1 is here because of each increm
  60:user/src/timers.c ****   assert_param(tickValue > 0);
  61:user/src/timers.c ****   assert_param(tickValue < 65535);
  62:user/src/timers.c **** 
  63:user/src/timers.c ****   LL_TIM_SetCounter(US_DELAY_TIMER, 0);
  64:user/src/timers.c ****   LL_TIM_EnableCounter(US_DELAY_TIMER);
  65:user/src/timers.c ****   while (LL_TIM_GetCounter(US_DELAY_TIMER) != tickValue)
  66:user/src/timers.c ****   {
  67:user/src/timers.c ****   }
  68:user/src/timers.c ****   LL_TIM_DisableCounter(US_DELAY_TIMER);
  69:user/src/timers.c **** }
  70:user/src/timers.c **** 
  71:user/src/timers.c **** void startUsDelayTimer(void)
  72:user/src/timers.c **** {
  27              		.loc 1 72 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  73:user/src/timers.c ****   LL_TIM_SetCounter(US_DELAY_TIMER, 0);
  32              		.loc 1 73 3 view .LVU1
  33              	.LVL0:
  34              	.LBB88:
  35              	.LBI88:
  36              		.file 2 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h"
   1:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
   2:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   ******************************************************************************
   3:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @file    stm32l1xx_ll_tim.h
   4:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @author  MCD Application Team
   5:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief   Header file of TIM LL module.
   6:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   ******************************************************************************
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 3


   7:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****     * @attention
   8:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *
   9:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  10:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * All rights reserved.</center></h2>
  11:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *
  12:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * the "License"; You may not use this file except in compliance with the
  14:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * License. You may obtain a copy of the License at:
  15:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *
  17:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   ******************************************************************************
  18:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
  19:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
  20:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  21:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #ifndef __STM32L1xx_LL_TIM_H
  22:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define __STM32L1xx_LL_TIM_H
  23:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
  24:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #ifdef __cplusplus
  25:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** extern "C" {
  26:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #endif
  27:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
  28:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /* Includes ------------------------------------------------------------------*/
  29:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #include "stm32l1xx.h"
  30:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
  31:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @addtogroup STM32L1xx_LL_Driver
  32:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
  33:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
  34:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
  35:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #if defined (TIM2) || defined (TIM3) || defined (TIM4) || defined (TIM5) || defined (TIM9) || defin
  36:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
  37:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL TIM
  38:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
  39:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
  40:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
  41:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /* Private types -------------------------------------------------------------*/
  42:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /* Private variables ---------------------------------------------------------*/
  43:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_Private_Variables TIM Private Variables
  44:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
  45:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
  46:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** static const uint8_t OFFSET_TAB_CCMRx[] =
  47:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
  48:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   0x00U,   /* 0: TIMx_CH1  */
  49:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   0x00U,   /* 1: NA */
  50:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   0x00U,   /* 2: TIMx_CH2  */
  51:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   0x00U,   /* 3: NA */
  52:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   0x04U,   /* 4: TIMx_CH3  */
  53:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   0x00U,   /* 5: NA */
  54:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   0x04U    /* 6: TIMx_CH4  */
  55:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** };
  56:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
  57:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** static const uint8_t SHIFT_TAB_OCxx[] =
  58:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
  59:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   0U,            /* 0: OC1M, OC1FE, OC1PE */
  60:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   0U,            /* 1: - NA */
  61:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   8U,            /* 2: OC2M, OC2FE, OC2PE */
  62:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   0U,            /* 3: - NA */
  63:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   0U,            /* 4: OC3M, OC3FE, OC3PE */
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 4


  64:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   0U,            /* 5: - NA */
  65:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   8U             /* 6: OC4M, OC4FE, OC4PE */
  66:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** };
  67:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
  68:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** static const uint8_t SHIFT_TAB_ICxx[] =
  69:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
  70:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   0U,            /* 0: CC1S, IC1PSC, IC1F */
  71:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   0U,            /* 1: - NA */
  72:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   8U,            /* 2: CC2S, IC2PSC, IC2F */
  73:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   0U,            /* 3: - NA */
  74:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   0U,            /* 4: CC3S, IC3PSC, IC3F */
  75:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   0U,            /* 5: - NA */
  76:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   8U             /* 6: CC4S, IC4PSC, IC4F */
  77:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** };
  78:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
  79:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** static const uint8_t SHIFT_TAB_CCxP[] =
  80:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
  81:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   0U,            /* 0: CC1P */
  82:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   0U,            /* 1: NA */
  83:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   4U,            /* 2: CC2P */
  84:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   0U,            /* 3: NA */
  85:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   8U,            /* 4: CC3P */
  86:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   0U,            /* 5: NA */
  87:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   12U            /* 6: CC4P */
  88:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** };
  89:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
  90:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
  91:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
  92:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
  93:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
  94:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /* Private constants ---------------------------------------------------------*/
  95:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_Private_Constants TIM Private Constants
  96:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
  97:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
  98:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
  99:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 100:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define TIMx_OR_RMP_SHIFT  16U
 101:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define TIMx_OR_RMP_MASK   0x0000FFFFU
 102:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define TIM_OR_RMP_MASK    ((TIM_OR_TI1RMP | TIM_OR_ETR_RMP | TIM_OR_TI1_RMP_RI) << TIMx_OR_RMP_SHI
 103:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define TIM9_OR_RMP_MASK   ((TIM_OR_TI1RMP | TIM9_OR_ITR1_RMP) << TIMx_OR_RMP_SHIFT)
 104:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define TIM2_OR_RMP_MASK   (TIM2_OR_ITR1_RMP << TIMx_OR_RMP_SHIFT)
 105:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define TIM3_OR_RMP_MASK   (TIM3_OR_ITR2_RMP << TIMx_OR_RMP_SHIFT)
 106:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 107:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 108:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 109:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 110:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 111:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 112:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 113:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /* Private macros ------------------------------------------------------------*/
 114:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_Private_Macros TIM Private Macros
 115:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 116:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 117:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @brief  Convert channel id into channel index.
 118:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
 119:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
 120:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 5


 121:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
 122:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
 123:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval none
 124:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 125:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define TIM_GET_CHANNEL_INDEX( __CHANNEL__) \
 126:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** (((__CHANNEL__) == LL_TIM_CHANNEL_CH1) ? 0U :\
 127:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** ((__CHANNEL__) == LL_TIM_CHANNEL_CH2) ? 2U :\
 128:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** ((__CHANNEL__) == LL_TIM_CHANNEL_CH3) ? 4U : 6U)
 129:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 130:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 131:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 132:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 133:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 134:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 135:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /* Exported types ------------------------------------------------------------*/
 136:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #if defined(USE_FULL_LL_DRIVER)
 137:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_ES_INIT TIM Exported Init structure
 138:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 139:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 140:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 141:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 142:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  TIM Time Base configuration structure definition.
 143:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 144:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** typedef struct
 145:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 146:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint16_t Prescaler;         /*!< Specifies the prescaler value used to divide the TIM clock.
 147:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                    This parameter can be a number between Min_Data=0x0000 and Max_D
 148:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 149:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                    This feature can be modified afterwards using unitary function @
 150:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 151:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint32_t CounterMode;       /*!< Specifies the counter mode.
 152:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                    This parameter can be a value of @ref TIM_LL_EC_COUNTERMODE.
 153:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 154:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                    This feature can be modified afterwards using unitary function @
 155:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 156:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint32_t Autoreload;        /*!< Specifies the auto reload value to be loaded into the active
 157:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                    Auto-Reload Register at the next update event.
 158:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                    This parameter must be a number between Min_Data=0x0000 and Max_
 159:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                    Some timer instances may support 32 bits counters. In that case 
 160:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 161:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                    This feature can be modified afterwards using unitary function @
 162:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 163:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint32_t ClockDivision;     /*!< Specifies the clock division.
 164:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                    This parameter can be a value of @ref TIM_LL_EC_CLOCKDIVISION.
 165:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 166:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                    This feature can be modified afterwards using unitary function @
 167:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** } LL_TIM_InitTypeDef;
 168:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 169:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 170:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  TIM Output Compare configuration structure definition.
 171:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 172:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** typedef struct
 173:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 174:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint32_t OCMode;        /*!< Specifies the output mode.
 175:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCMODE.
 176:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 177:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function @ref 
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 6


 178:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 179:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint32_t OCState;       /*!< Specifies the TIM Output Compare state.
 180:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCSTATE.
 181:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 182:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                This feature can be modified afterwards using unitary functions @ref
 183:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 184:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint32_t CompareValue;  /*!< Specifies the Compare value to be loaded into the Capture Compare Re
 185:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                This parameter can be a number between Min_Data=0x0000 and Max_Data=
 186:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 187:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function LL_TI
 188:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 189:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint32_t OCPolarity;    /*!< Specifies the output polarity.
 190:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCPOLARITY.
 191:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 192:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function @ref 
 193:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 194:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 195:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** } LL_TIM_OC_InitTypeDef;
 196:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 197:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 198:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  TIM Input Capture configuration structure definition.
 199:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 200:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 201:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** typedef struct
 202:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 203:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 204:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint32_t ICPolarity;    /*!< Specifies the active edge of the input signal.
 205:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_IC_POLARITY.
 206:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 207:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function @ref 
 208:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 209:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint32_t ICActiveInput; /*!< Specifies the input.
 210:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_ACTIVEINPUT.
 211:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 212:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function @ref 
 213:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 214:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint32_t ICPrescaler;   /*!< Specifies the Input Capture Prescaler.
 215:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_ICPSC.
 216:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 217:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function @ref 
 218:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 219:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint32_t ICFilter;      /*!< Specifies the input capture filter.
 220:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_IC_FILTER.
 221:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 222:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function @ref 
 223:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** } LL_TIM_IC_InitTypeDef;
 224:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 225:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 226:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 227:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  TIM Encoder interface configuration structure definition.
 228:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 229:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** typedef struct
 230:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 231:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint32_t EncoderMode;     /*!< Specifies the encoder resolution (x2 or x4).
 232:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_ENCODERMODE.
 233:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 234:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 7


 235:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 236:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint32_t IC1Polarity;     /*!< Specifies the active edge of TI1 input.
 237:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_IC_POLARITY.
 238:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 239:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 240:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 241:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint32_t IC1ActiveInput;  /*!< Specifies the TI1 input source
 242:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_ACTIVEINPUT.
 243:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 244:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 245:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 246:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint32_t IC1Prescaler;    /*!< Specifies the TI1 input prescaler value.
 247:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_ICPSC.
 248:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 249:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 250:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 251:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint32_t IC1Filter;       /*!< Specifies the TI1 input filter.
 252:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_IC_FILTER.
 253:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 254:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 255:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 256:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint32_t IC2Polarity;      /*!< Specifies the active edge of TI2 input.
 257:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_IC_POLARITY.
 258:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 259:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 260:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 261:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint32_t IC2ActiveInput;  /*!< Specifies the TI2 input source
 262:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_ACTIVEINPUT.
 263:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 264:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 265:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 266:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint32_t IC2Prescaler;    /*!< Specifies the TI2 input prescaler value.
 267:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_ICPSC.
 268:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 269:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 270:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 271:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   uint32_t IC2Filter;       /*!< Specifies the TI2 input filter.
 272:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_IC_FILTER.
 273:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 274:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 275:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 276:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** } LL_TIM_ENCODER_InitTypeDef;
 277:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 278:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 279:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 280:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 281:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 282:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #endif /* USE_FULL_LL_DRIVER */
 283:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 284:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /* Exported constants --------------------------------------------------------*/
 285:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_Exported_Constants TIM Exported Constants
 286:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 287:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 288:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 289:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_GET_FLAG Get Flags Defines
 290:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief    Flags defines which can be used with LL_TIM_ReadReg function.
 291:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 8


 292:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 293:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_SR_UIF                          TIM_SR_UIF           /*!< Update interrupt flag */
 294:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_SR_CC1IF                        TIM_SR_CC1IF         /*!< Capture/compare 1 interrup
 295:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_SR_CC2IF                        TIM_SR_CC2IF         /*!< Capture/compare 2 interrup
 296:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_SR_CC3IF                        TIM_SR_CC3IF         /*!< Capture/compare 3 interrup
 297:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_SR_CC4IF                        TIM_SR_CC4IF         /*!< Capture/compare 4 interrup
 298:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_SR_TIF                          TIM_SR_TIF           /*!< Trigger interrupt flag */
 299:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_SR_CC1OF                        TIM_SR_CC1OF         /*!< Capture/Compare 1 overcapt
 300:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_SR_CC2OF                        TIM_SR_CC2OF         /*!< Capture/Compare 2 overcapt
 301:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_SR_CC3OF                        TIM_SR_CC3OF         /*!< Capture/Compare 3 overcapt
 302:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_SR_CC4OF                        TIM_SR_CC4OF         /*!< Capture/Compare 4 overcapt
 303:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 304:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 305:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 306:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 307:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_IT IT Defines
 308:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief    IT defines which can be used with LL_TIM_ReadReg and  LL_TIM_WriteReg functions.
 309:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 310:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 311:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DIER_UIE                        TIM_DIER_UIE         /*!< Update interrupt enable */
 312:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DIER_CC1IE                      TIM_DIER_CC1IE       /*!< Capture/compare 1 interrup
 313:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DIER_CC2IE                      TIM_DIER_CC2IE       /*!< Capture/compare 2 interrup
 314:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DIER_CC3IE                      TIM_DIER_CC3IE       /*!< Capture/compare 3 interrup
 315:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DIER_CC4IE                      TIM_DIER_CC4IE       /*!< Capture/compare 4 interrup
 316:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DIER_TIE                        TIM_DIER_TIE         /*!< Trigger interrupt enable *
 317:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 318:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 319:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 320:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 321:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_UPDATESOURCE Update Source
 322:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 323:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 324:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_UPDATESOURCE_REGULAR            0x00000000U          /*!< Counter overflow/underflow
 325:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_UPDATESOURCE_COUNTER            TIM_CR1_URS          /*!< Only counter overflow/unde
 326:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 327:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 328:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 329:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 330:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ONEPULSEMODE One Pulse Mode
 331:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 332:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 333:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ONEPULSEMODE_SINGLE             TIM_CR1_OPM          /*!< Counter is not stopped at 
 334:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ONEPULSEMODE_REPETITIVE         0x00000000U          /*!< Counter stops counting at 
 335:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 336:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 337:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 338:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 339:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_COUNTERMODE Counter Mode
 340:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 341:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 342:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_COUNTERMODE_UP                  0x00000000U          /*!<Counter used as upcounter *
 343:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_COUNTERMODE_DOWN                TIM_CR1_DIR          /*!< Counter used as downcounte
 344:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_COUNTERMODE_CENTER_UP           TIM_CR1_CMS_0        /*!< The counter counts up and 
 345:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_COUNTERMODE_CENTER_DOWN         TIM_CR1_CMS_1        /*!<The counter counts up and d
 346:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_COUNTERMODE_CENTER_UP_DOWN      TIM_CR1_CMS          /*!< The counter counts up and 
 347:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 348:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 9


 349:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 350:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 351:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_CLOCKDIVISION Clock Division
 352:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 353:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 354:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_CLOCKDIVISION_DIV1              0x00000000U          /*!< tDTS=tCK_INT */
 355:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_CLOCKDIVISION_DIV2              TIM_CR1_CKD_0        /*!< tDTS=2*tCK_INT */
 356:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_CLOCKDIVISION_DIV4              TIM_CR1_CKD_1        /*!< tDTS=4*tCK_INT */
 357:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 358:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 359:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 360:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 361:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_COUNTERDIRECTION Counter Direction
 362:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 363:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 364:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_COUNTERDIRECTION_UP             0x00000000U          /*!< Timer counter counts up */
 365:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_COUNTERDIRECTION_DOWN           TIM_CR1_DIR          /*!< Timer counter counts down 
 366:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 367:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 368:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 369:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 370:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 371:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_CCDMAREQUEST Capture Compare DMA Request
 372:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 373:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 374:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_CCDMAREQUEST_CC                 0x00000000U          /*!< CCx DMA request sent when 
 375:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_CCDMAREQUEST_UPDATE             TIM_CR2_CCDS         /*!< CCx DMA requests sent when
 376:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 377:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 378:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 379:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 380:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 381:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_CHANNEL Channel
 382:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 383:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 384:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH1                     TIM_CCER_CC1E     /*!< Timer input/output channel 1 
 385:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH2                     TIM_CCER_CC2E     /*!< Timer input/output channel 2 
 386:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH3                     TIM_CCER_CC3E     /*!< Timer input/output channel 3 
 387:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH4                     TIM_CCER_CC4E     /*!< Timer input/output channel 4 
 388:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 389:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 390:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 391:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 392:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #if defined(USE_FULL_LL_DRIVER)
 393:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OCSTATE Output Configuration State
 394:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 395:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 396:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_OCSTATE_DISABLE                 0x00000000U             /*!< OCx is not active */
 397:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_OCSTATE_ENABLE                  TIM_CCER_CC1E           /*!< OCx signal is output on
 398:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 399:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 400:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 401:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #endif /* USE_FULL_LL_DRIVER */
 402:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 403:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OCMODE Output Configuration Mode
 404:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 405:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 10


 406:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_OCMODE_FROZEN                   0x00000000U                                         
 407:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_OCMODE_ACTIVE                   TIM_CCMR1_OC1M_0                                    
 408:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_OCMODE_INACTIVE                 TIM_CCMR1_OC1M_1                                    
 409:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_OCMODE_TOGGLE                   (TIM_CCMR1_OC1M_1 | TIM_CCMR1_OC1M_0)               
 410:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_OCMODE_FORCED_INACTIVE          TIM_CCMR1_OC1M_2                                    
 411:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_OCMODE_FORCED_ACTIVE            (TIM_CCMR1_OC1M_2 | TIM_CCMR1_OC1M_0)               
 412:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_OCMODE_PWM1                     (TIM_CCMR1_OC1M_2 | TIM_CCMR1_OC1M_1)               
 413:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_OCMODE_PWM2                     (TIM_CCMR1_OC1M_2 | TIM_CCMR1_OC1M_1 | TIM_CCMR1_OC1
 414:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 415:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 416:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 417:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 418:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OCPOLARITY Output Configuration Polarity
 419:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 420:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 421:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_OCPOLARITY_HIGH                 0x00000000U                 /*!< OCxactive high*/
 422:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_OCPOLARITY_LOW                  TIM_CCER_CC1P               /*!< OCxactive low*/
 423:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 424:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 425:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 426:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 427:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 428:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 429:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ACTIVEINPUT Active Input Selection
 430:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 431:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 432:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ACTIVEINPUT_DIRECTTI            (TIM_CCMR1_CC1S_0 << 16U) /*!< ICx is mapped on TIx 
 433:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ACTIVEINPUT_INDIRECTTI          (TIM_CCMR1_CC1S_1 << 16U) /*!< ICx is mapped on TIy 
 434:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ACTIVEINPUT_TRC                 (TIM_CCMR1_CC1S << 16U)   /*!< ICx is mapped on TRC 
 435:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 436:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 437:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 438:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 439:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ICPSC Input Configuration Prescaler
 440:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 441:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 442:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ICPSC_DIV1                      0x00000000U                    /*!< No prescaler, ca
 443:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ICPSC_DIV2                      (TIM_CCMR1_IC1PSC_0 << 16U)    /*!< Capture is done 
 444:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ICPSC_DIV4                      (TIM_CCMR1_IC1PSC_1 << 16U)    /*!< Capture is done 
 445:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ICPSC_DIV8                      (TIM_CCMR1_IC1PSC << 16U)      /*!< Capture is done 
 446:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 447:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 448:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 449:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 450:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_IC_FILTER Input Configuration Filter
 451:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 452:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 453:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV1                 0x00000000U                                         
 454:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV1_N2              (TIM_CCMR1_IC1F_0 << 16U)                           
 455:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV1_N4              (TIM_CCMR1_IC1F_1 << 16U)                           
 456:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV1_N8              ((TIM_CCMR1_IC1F_1 | TIM_CCMR1_IC1F_0) << 16U)      
 457:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV2_N6              (TIM_CCMR1_IC1F_2 << 16U)                           
 458:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV2_N8              ((TIM_CCMR1_IC1F_2 | TIM_CCMR1_IC1F_0) << 16U)      
 459:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV4_N6              ((TIM_CCMR1_IC1F_2 | TIM_CCMR1_IC1F_1) << 16U)      
 460:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV4_N8              ((TIM_CCMR1_IC1F_2 | TIM_CCMR1_IC1F_1 | TIM_CCMR1_IC
 461:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV8_N6              (TIM_CCMR1_IC1F_3 << 16U)                           
 462:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV8_N8              ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_0) << 16U)      
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 11


 463:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV16_N5             ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_1) << 16U)      
 464:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV16_N6             ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_1 | TIM_CCMR1_IC
 465:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV16_N8             ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_2) << 16U)      
 466:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV32_N5             ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_2 | TIM_CCMR1_IC
 467:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV32_N6             ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_2 | TIM_CCMR1_IC
 468:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV32_N8             (TIM_CCMR1_IC1F << 16U)                             
 469:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 470:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 471:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 472:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 473:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_IC_POLARITY Input Configuration Polarity
 474:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 475:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 476:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_IC_POLARITY_RISING              0x00000000U                      /*!< The circuit is
 477:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_IC_POLARITY_FALLING             TIM_CCER_CC1P                    /*!< The circuit is
 478:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_IC_POLARITY_BOTHEDGE            (TIM_CCER_CC1P | TIM_CCER_CC1NP) /*!< The circuit is
 479:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 480:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 481:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 482:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 483:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_CLOCKSOURCE Clock Source
 484:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 485:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 486:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_CLOCKSOURCE_INTERNAL            0x00000000U                                         
 487:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_CLOCKSOURCE_EXT_MODE1           (TIM_SMCR_SMS_2 | TIM_SMCR_SMS_1 | TIM_SMCR_SMS_0)  
 488:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_CLOCKSOURCE_EXT_MODE2           TIM_SMCR_ECE                                        
 489:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 490:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 491:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 492:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 493:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ENCODERMODE Encoder Mode
 494:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 495:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 496:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ENCODERMODE_X2_TI1                     TIM_SMCR_SMS_0                               
 497:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ENCODERMODE_X2_TI2                     TIM_SMCR_SMS_1                               
 498:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ENCODERMODE_X4_TI12                   (TIM_SMCR_SMS_1 | TIM_SMCR_SMS_0)             
 499:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 500:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 501:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 502:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 503:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TRGO Trigger Output
 504:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 505:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 506:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TRGO_RESET                      0x00000000U                                     /*!<
 507:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TRGO_ENABLE                     TIM_CR2_MMS_0                                   /*!<
 508:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TRGO_UPDATE                     TIM_CR2_MMS_1                                   /*!<
 509:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TRGO_CC1IF                      (TIM_CR2_MMS_1 | TIM_CR2_MMS_0)                 /*!<
 510:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TRGO_OC1REF                     TIM_CR2_MMS_2                                   /*!<
 511:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TRGO_OC2REF                     (TIM_CR2_MMS_2 | TIM_CR2_MMS_0)                 /*!<
 512:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TRGO_OC3REF                     (TIM_CR2_MMS_2 | TIM_CR2_MMS_1)                 /*!<
 513:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TRGO_OC4REF                     (TIM_CR2_MMS_2 | TIM_CR2_MMS_1 | TIM_CR2_MMS_0) /*!<
 514:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 515:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 516:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 517:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 518:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 519:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_SLAVEMODE Slave Mode
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 12


 520:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 521:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 522:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_SLAVEMODE_DISABLED              0x00000000U                         /*!< Slave mode 
 523:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_SLAVEMODE_RESET                 TIM_SMCR_SMS_2                      /*!< Reset Mode 
 524:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_SLAVEMODE_GATED                 (TIM_SMCR_SMS_2 | TIM_SMCR_SMS_0)   /*!< Gated Mode 
 525:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_SLAVEMODE_TRIGGER               (TIM_SMCR_SMS_2 | TIM_SMCR_SMS_1)   /*!< Trigger Mod
 526:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 527:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 528:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 529:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 530:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TS Trigger Selection
 531:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 532:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 533:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TS_ITR0                         0x00000000U                                         
 534:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TS_ITR1                         TIM_SMCR_TS_0                                       
 535:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TS_ITR2                         TIM_SMCR_TS_1                                       
 536:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TS_ITR3                         (TIM_SMCR_TS_0 | TIM_SMCR_TS_1)                     
 537:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TS_TI1F_ED                      TIM_SMCR_TS_2                                       
 538:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TS_TI1FP1                       (TIM_SMCR_TS_2 | TIM_SMCR_TS_0)                     
 539:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TS_TI2FP2                       (TIM_SMCR_TS_2 | TIM_SMCR_TS_1)                     
 540:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TS_ETRF                         (TIM_SMCR_TS_2 | TIM_SMCR_TS_1 | TIM_SMCR_TS_0)     
 541:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 542:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 543:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 544:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 545:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ETR_POLARITY External Trigger Polarity
 546:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 547:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 548:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ETR_POLARITY_NONINVERTED        0x00000000U             /*!< ETR is non-inverted, ac
 549:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ETR_POLARITY_INVERTED           TIM_SMCR_ETP            /*!< ETR is inverted, active
 550:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 551:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 552:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 553:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 554:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ETR_PRESCALER External Trigger Prescaler
 555:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 556:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 557:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ETR_PRESCALER_DIV1              0x00000000U             /*!< ETR prescaler OFF */
 558:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ETR_PRESCALER_DIV2              TIM_SMCR_ETPS_0         /*!< ETR frequency is divide
 559:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ETR_PRESCALER_DIV4              TIM_SMCR_ETPS_1         /*!< ETR frequency is divide
 560:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ETR_PRESCALER_DIV8              TIM_SMCR_ETPS           /*!< ETR frequency is divide
 561:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 562:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 563:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 564:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 565:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ETR_FILTER External Trigger Filter
 566:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 567:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 568:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV1                0x00000000U                                         
 569:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV1_N2             TIM_SMCR_ETF_0                                      
 570:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV1_N4             TIM_SMCR_ETF_1                                      
 571:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV1_N8             (TIM_SMCR_ETF_1 | TIM_SMCR_ETF_0)                   
 572:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV2_N6             TIM_SMCR_ETF_2                                      
 573:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV2_N8             (TIM_SMCR_ETF_2 | TIM_SMCR_ETF_0)                   
 574:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV4_N6             (TIM_SMCR_ETF_2 | TIM_SMCR_ETF_1)                   
 575:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV4_N8             (TIM_SMCR_ETF_2 | TIM_SMCR_ETF_1 | TIM_SMCR_ETF_0)  
 576:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV8_N6             TIM_SMCR_ETF_3                                      
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 13


 577:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV8_N8             (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_0)                   
 578:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV16_N5            (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_1)                   
 579:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV16_N6            (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_1 | TIM_SMCR_ETF_0)  
 580:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV16_N8            (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_2)                   
 581:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV32_N5            (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_2 | TIM_SMCR_ETF_0)  
 582:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV32_N6            (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_2 | TIM_SMCR_ETF_1)  
 583:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV32_N8            TIM_SMCR_ETF                                        
 584:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 585:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 586:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 587:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 588:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 589:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 590:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 591:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 592:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 593:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 594:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_DMABURST_BASEADDR DMA Burst Base Address
 595:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 596:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 597:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CR1           0x00000000U                                         
 598:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CR2           TIM_DCR_DBA_0                                       
 599:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_SMCR          TIM_DCR_DBA_1                                       
 600:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_DIER          (TIM_DCR_DBA_1 |  TIM_DCR_DBA_0)                    
 601:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_SR            TIM_DCR_DBA_2                                       
 602:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_EGR           (TIM_DCR_DBA_2 | TIM_DCR_DBA_0)                     
 603:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCMR1         (TIM_DCR_DBA_2 | TIM_DCR_DBA_1)                     
 604:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCMR2         (TIM_DCR_DBA_2 | TIM_DCR_DBA_1 | TIM_DCR_DBA_0)     
 605:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCER          TIM_DCR_DBA_3                                       
 606:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CNT           (TIM_DCR_DBA_3 | TIM_DCR_DBA_0)                     
 607:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_PSC           (TIM_DCR_DBA_3 | TIM_DCR_DBA_1)                     
 608:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_ARR           (TIM_DCR_DBA_3 | TIM_DCR_DBA_1 | TIM_DCR_DBA_0)     
 609:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCR1          (TIM_DCR_DBA_3 | TIM_DCR_DBA_2 | TIM_DCR_DBA_0)     
 610:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCR2          (TIM_DCR_DBA_3 | TIM_DCR_DBA_2 | TIM_DCR_DBA_1)     
 611:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCR3          (TIM_DCR_DBA_3 | TIM_DCR_DBA_2 | TIM_DCR_DBA_1 | TIM
 612:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCR4          TIM_DCR_DBA_4                                       
 613:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_OR            (TIM_DCR_DBA_4 | TIM_DCR_DBA_2)                     
 614:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 615:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 616:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 617:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 618:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_DMABURST_LENGTH DMA Burst Length
 619:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 620:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 621:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_1TRANSFER       0x00000000U                                         
 622:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_2TRANSFERS      TIM_DCR_DBL_0                                       
 623:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_3TRANSFERS      TIM_DCR_DBL_1                                       
 624:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_4TRANSFERS      (TIM_DCR_DBL_1 |  TIM_DCR_DBL_0)                    
 625:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_5TRANSFERS      TIM_DCR_DBL_2                                       
 626:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_6TRANSFERS      (TIM_DCR_DBL_2 | TIM_DCR_DBL_0)                     
 627:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_7TRANSFERS      (TIM_DCR_DBL_2 | TIM_DCR_DBL_1)                     
 628:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_8TRANSFERS      (TIM_DCR_DBL_2 | TIM_DCR_DBL_1 | TIM_DCR_DBL_0)     
 629:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_9TRANSFERS      TIM_DCR_DBL_3                                       
 630:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_10TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_0)                     
 631:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_11TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_1)                     
 632:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_12TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_1 | TIM_DCR_DBL_0)     
 633:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_13TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_2)                     
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 14


 634:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_14TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_2 | TIM_DCR_DBL_0)     
 635:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_15TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_2 | TIM_DCR_DBL_1)     
 636:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_16TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_2 | TIM_DCR_DBL_1 | TIM
 637:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_17TRANSFERS     TIM_DCR_DBL_4                                       
 638:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_18TRANSFERS     (TIM_DCR_DBL_4 |  TIM_DCR_DBL_0)                    
 639:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 640:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 641:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 642:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 643:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM10_TI1_RMP  TIM10 input 1 remapping capability
 644:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 645:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 646:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM10_TI1_RMP_GPIO   TIM_OR_RMP_MASK                                         /*!< TI
 647:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM10_TI1_RMP_LSI    (TIM_OR_TI1RMP_0 | TIM_OR_RMP_MASK)                     /*!< TI
 648:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM10_TI1_RMP_LSE    (TIM_OR_TI1RMP_1 | TIM_OR_RMP_MASK)                     /*!< TI
 649:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM10_TI1_RMP_RTC    (TIM_OR_TI1RMP_0 | TIM_OR_TI1RMP_1 | TIM_OR_RMP_MASK)   /*!< TI
 650:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 651:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 652:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 653:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 654:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM10_ETR_RMP  TIM10 ETR remap
 655:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 656:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 657:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM10_ETR_RMP_LSE      TIM_OR_RMP_MASK                                         /*!< 
 658:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM10_ETR_RMP_TIM9_TGO (TIM_OR_ETR_RMP | TIM_OR_RMP_MASK)                      /*!< 
 659:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 660:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 661:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 662:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 663:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM10_TI1_RMP_RI TIM10 Input 1 remap for Routing Interface (RI)
 664:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** * @{
 665:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** */
 666:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM10_TI1_RMP          TIM_OR_RMP_MASK                                         /*!< 
 667:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM10_TI1_RMP_RI       (TIM_OR_TI1_RMP_RI | TIM_OR_RMP_MASK)                   /*!< 
 668:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 669:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 670:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 671:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 672:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM11_TI1_RMP  TIM11 input 1 remapping capability
 673:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 674:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 675:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM11_TI1_RMP_GPIO       TIM_OR_RMP_MASK                                       /*!< 
 676:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM11_TI1_RMP_MSI        (TIM_OR_TI1RMP_0 | TIM_OR_RMP_MASK)                   /*!< 
 677:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM11_TI1_RMP_HSE_RTC    (TIM_OR_TI1RMP_1 | TIM_OR_RMP_MASK)                   /*!< 
 678:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM11_TI1_RMP_GPIO1      (TIM_OR_TI1RMP_0 | TIM_OR_TI1RMP_1 | TIM_OR_RMP_MASK) /*!< 
 679:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 680:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 681:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 682:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 683:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM11_ETR_RMP  TIM11 ETR remap
 684:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 685:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 686:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM11_ETR_RMP_LSE      TIM_OR_RMP_MASK                                         /*!< 
 687:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM11_ETR_RMP_TIM9_TGO (TIM_OR_ETR_RMP | TIM_OR_RMP_MASK)                      /*!< 
 688:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 689:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 690:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 15


 691:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 692:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM11_TI1_RMP_RI TIM11 Input 1 remap for Routing Interface (RI)
 693:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 694:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 695:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM11_TI1_RMP          TIM_OR_RMP_MASK                                         /*!< 
 696:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM11_TI1_RMP_RI       (TIM_OR_TI1_RMP_RI | TIM_OR_RMP_MASK)                   /*!< 
 697:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 698:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 699:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 700:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 701:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM9_TI1_RMP TIM9 Input 1 remap
 702:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 703:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 704:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM9_TI1_RMP_GPIO     TIM9_OR_RMP_MASK                                          /*!<
 705:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM9_TI1_RMP_LSE      (TIM_OR_TI1RMP_0 | TIM9_OR_RMP_MASK)                      /*!<
 706:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM9_TI1_RMP_GPIO1    (TIM_OR_TI1RMP_1 | TIM9_OR_RMP_MASK)                      /*!<
 707:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM9_TI1_RMP_GPIO2    (TIM_OR_TI1RMP_0 | TIM_OR_TI1RMP_1 | TIM9_OR_RMP_MASK)    /*!<
 708:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 709:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 710:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 711:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 712:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM9_ITR1_RMP  TIM9 ITR1 remap
 713:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 714:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 715:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM9_ITR1_RMP_TIM3_TGO   TIM9_OR_RMP_MASK                                     /*!< T
 716:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM9_ITR1_RMP_TOUCH_IO   (TIM9_OR_ITR1_RMP | TIM9_OR_RMP_MASK)                /*!< T
 717:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 718:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 719:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 720:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 721:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM2_ITR1_RMP  TIM2 internal trigger 1 remap
 722:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** * @{
 723:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** */
 724:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM2_TIR1_RMP_TIM10_OC    TIM9_OR_RMP_MASK                                     /*!< 
 725:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM2_TIR1_RMP_TIM5_TGO    (TIM2_OR_ITR1_RMP | TIM9_OR_RMP_MASK)                /*!< 
 726:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 727:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 728:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 729:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 730:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM3_ITR2_RMP  TIM3 internal trigger 2 remap
 731:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 732:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 733:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM3_TIR2_RMP_TIM11_OC    TIM9_OR_RMP_MASK                                     /*!< 
 734:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_TIM3_TIR2_RMP_TIM5_TGO    (TIM3_OR_ITR2_RMP | TIM9_OR_RMP_MASK)                /*!< 
 735:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 736:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 737:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 738:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 739:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 740:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OCREF_CLR_INT OCREF clear input selection
 741:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 742:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 743:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_OCREF_CLR_INT_OCREF_CLR     0x00000000U         /*!< OCREF_CLR_INT is connected to t
 744:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_OCREF_CLR_INT_ETR           TIM_SMCR_OCCS       /*!< OCREF_CLR_INT is connected to E
 745:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 746:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 747:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 16


 748:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 749:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 750:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 751:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 752:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 753:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /* Exported macro ------------------------------------------------------------*/
 754:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_Exported_Macros TIM Exported Macros
 755:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 756:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 757:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 758:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EM_WRITE_READ Common Write and read registers Macros
 759:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 760:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 761:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 762:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Write a value in TIM register.
 763:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  __INSTANCE__ TIM Instance
 764:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  __REG__ Register to be written
 765:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  __VALUE__ Value to be written in the register
 766:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
 767:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 768:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG((__INSTANCE__)->__REG__, (__VAL
 769:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 770:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 771:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Read a value in TIM register.
 772:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  __INSTANCE__ TIM Instance
 773:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  __REG__ Register to be read
 774:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval Register value
 775:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 776:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define LL_TIM_ReadReg(__INSTANCE__, __REG__) READ_REG((__INSTANCE__)->__REG__)
 777:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 778:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 779:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 780:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 781:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EM_Exported_Macros Exported_Macros
 782:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 783:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 784:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 785:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 786:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  HELPER macro calculating the prescaler value to achieve the required counter clock freq
 787:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_CALC_PSC (80000000, 1000000);
 788:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz)
 789:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  __CNTCLK__ counter clock frequency (in Hz)
 790:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval Prescaler value  (between Min_Data=0 and Max_Data=65535)
 791:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 792:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define __LL_TIM_CALC_PSC(__TIMCLK__, __CNTCLK__)   \
 793:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****    (((__TIMCLK__) >= (__CNTCLK__)) ? (uint32_t)(((__TIMCLK__)/(__CNTCLK__)) - 1U) : 0U)
 794:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 795:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 796:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  HELPER macro calculating the auto-reload value to achieve the required output signal fr
 797:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_CALC_ARR (1000000, @ref LL_TIM_GetPrescaler (), 10000);
 798:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz)
 799:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  __PSC__ prescaler
 800:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  __FREQ__ output signal frequency (in Hz)
 801:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval  Auto-reload value  (between Min_Data=0 and Max_Data=65535)
 802:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 803:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define __LL_TIM_CALC_ARR(__TIMCLK__, __PSC__, __FREQ__) \
 804:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****      ((((__TIMCLK__)/((__PSC__) + 1U)) >= (__FREQ__)) ? (((__TIMCLK__)/((__FREQ__) * ((__PSC__) + 1
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 17


 805:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 806:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 807:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  HELPER macro calculating the compare value required to achieve the required timer outpu
 808:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_CALC_DELAY (1000000, @ref LL_TIM_GetPrescaler (), 10);
 809:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz)
 810:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  __PSC__ prescaler
 811:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  __DELAY__ timer output compare active/inactive delay (in us)
 812:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval Compare value  (between Min_Data=0 and Max_Data=65535)
 813:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 814:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define __LL_TIM_CALC_DELAY(__TIMCLK__, __PSC__, __DELAY__)  \
 815:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** ((uint32_t)(((uint64_t)(__TIMCLK__) * (uint64_t)(__DELAY__)) \
 816:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****           / ((uint64_t)1000000U * (uint64_t)((__PSC__) + 1U))))
 817:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 818:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 819:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  HELPER macro calculating the auto-reload value to achieve the required pulse duration (
 820:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_CALC_PULSE (1000000, @ref LL_TIM_GetPrescaler (), 10, 20);
 821:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz)
 822:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  __PSC__ prescaler
 823:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  __DELAY__ timer output compare active/inactive delay (in us)
 824:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  __PULSE__ pulse duration (in us)
 825:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval Auto-reload value  (between Min_Data=0 and Max_Data=65535)
 826:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 827:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define __LL_TIM_CALC_PULSE(__TIMCLK__, __PSC__, __DELAY__, __PULSE__)  \
 828:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****  ((uint32_t)(__LL_TIM_CALC_DELAY((__TIMCLK__), (__PSC__), (__PULSE__)) \
 829:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****            + __LL_TIM_CALC_DELAY((__TIMCLK__), (__PSC__), (__DELAY__))))
 830:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 831:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 832:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  HELPER macro retrieving the ratio of the input capture prescaler
 833:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_GET_ICPSC_RATIO (@ref LL_TIM_IC_GetPrescaler ());
 834:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  __ICPSC__ This parameter can be one of the following values:
 835:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV1
 836:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV2
 837:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV4
 838:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV8
 839:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval Input capture prescaler ratio (1, 2, 4 or 8)
 840:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 841:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** #define __LL_TIM_GET_ICPSC_RATIO(__ICPSC__)  \
 842:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****    ((uint32_t)(0x01U << (((__ICPSC__) >> 16U) >> TIM_CCMR1_IC1PSC_Pos)))
 843:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 844:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 845:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 846:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 847:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 848:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 849:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 850:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 851:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
 852:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 853:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 854:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /* Exported functions --------------------------------------------------------*/
 855:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_Exported_Functions TIM Exported Functions
 856:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 857:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 858:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 859:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Time_Base Time Base configuration
 860:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
 861:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 18


 862:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 863:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Enable timer counter.
 864:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR1          CEN           LL_TIM_EnableCounter
 865:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
 866:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
 867:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 868:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableCounter(TIM_TypeDef *TIMx)
 869:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 870:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   SET_BIT(TIMx->CR1, TIM_CR1_CEN);
 871:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 872:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 873:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 874:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Disable timer counter.
 875:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR1          CEN           LL_TIM_DisableCounter
 876:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
 877:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
 878:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 879:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableCounter(TIM_TypeDef *TIMx)
 880:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 881:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   CLEAR_BIT(TIMx->CR1, TIM_CR1_CEN);
 882:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 883:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 884:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 885:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Indicates whether the timer counter is enabled.
 886:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR1          CEN           LL_TIM_IsEnabledCounter
 887:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
 888:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
 889:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 890:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledCounter(TIM_TypeDef *TIMx)
 891:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 892:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(TIMx->CR1, TIM_CR1_CEN) == (TIM_CR1_CEN)) ? 1UL : 0UL);
 893:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 894:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 895:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 896:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Enable update event generation.
 897:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR1          UDIS          LL_TIM_EnableUpdateEvent
 898:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
 899:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
 900:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 901:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableUpdateEvent(TIM_TypeDef *TIMx)
 902:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 903:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   CLEAR_BIT(TIMx->CR1, TIM_CR1_UDIS);
 904:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 905:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 906:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 907:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Disable update event generation.
 908:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR1          UDIS          LL_TIM_DisableUpdateEvent
 909:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
 910:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
 911:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 912:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableUpdateEvent(TIM_TypeDef *TIMx)
 913:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 914:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   SET_BIT(TIMx->CR1, TIM_CR1_UDIS);
 915:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 916:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 917:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 918:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Indicates whether update event generation is enabled.
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 19


 919:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR1          UDIS          LL_TIM_IsEnabledUpdateEvent
 920:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
 921:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval Inverted state of bit (0 or 1).
 922:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 923:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledUpdateEvent(TIM_TypeDef *TIMx)
 924:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 925:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(TIMx->CR1, TIM_CR1_UDIS) == (uint32_t)RESET) ? 1UL : 0UL);
 926:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 927:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 928:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 929:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Set update event source
 930:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Update event source set to LL_TIM_UPDATESOURCE_REGULAR: any of the following events
 931:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       generate an update interrupt or DMA request if enabled:
 932:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *        - Counter overflow/underflow
 933:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *        - Setting the UG bit
 934:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *        - Update generation through the slave mode controller
 935:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Update event source set to LL_TIM_UPDATESOURCE_COUNTER: only counter
 936:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       overflow/underflow generates an update interrupt or DMA request if enabled.
 937:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR1          URS           LL_TIM_SetUpdateSource
 938:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
 939:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  UpdateSource This parameter can be one of the following values:
 940:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_UPDATESOURCE_REGULAR
 941:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_UPDATESOURCE_COUNTER
 942:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
 943:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 944:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetUpdateSource(TIM_TypeDef *TIMx, uint32_t UpdateSource)
 945:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 946:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   MODIFY_REG(TIMx->CR1, TIM_CR1_URS, UpdateSource);
 947:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 948:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 949:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 950:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Get actual event update source
 951:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR1          URS           LL_TIM_GetUpdateSource
 952:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
 953:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
 954:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_UPDATESOURCE_REGULAR
 955:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_UPDATESOURCE_COUNTER
 956:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 957:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetUpdateSource(TIM_TypeDef *TIMx)
 958:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 959:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_URS));
 960:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 961:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 962:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 963:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Set one pulse mode (one shot v.s. repetitive).
 964:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR1          OPM           LL_TIM_SetOnePulseMode
 965:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
 966:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  OnePulseMode This parameter can be one of the following values:
 967:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ONEPULSEMODE_SINGLE
 968:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ONEPULSEMODE_REPETITIVE
 969:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
 970:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 971:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetOnePulseMode(TIM_TypeDef *TIMx, uint32_t OnePulseMode)
 972:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 973:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   MODIFY_REG(TIMx->CR1, TIM_CR1_OPM, OnePulseMode);
 974:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 975:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 20


 976:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 977:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Get actual one pulse mode.
 978:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR1          OPM           LL_TIM_GetOnePulseMode
 979:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
 980:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
 981:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ONEPULSEMODE_SINGLE
 982:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ONEPULSEMODE_REPETITIVE
 983:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
 984:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetOnePulseMode(TIM_TypeDef *TIMx)
 985:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 986:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_OPM));
 987:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 988:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
 989:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
 990:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Set the timer counter counting mode.
 991:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx) can be used to
 992:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       check whether or not the counter mode selection feature is supported
 993:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       by a timer instance.
 994:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Switching from Center Aligned counter mode to Edge counter mode (or reverse)
 995:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       requires a timer reset to avoid unexpected direction
 996:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       due to DIR bit readonly in center aligned mode.
 997:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR1          DIR           LL_TIM_SetCounterMode\n
 998:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CR1          CMS           LL_TIM_SetCounterMode
 999:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1000:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  CounterMode This parameter can be one of the following values:
1001:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_UP
1002:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_DOWN
1003:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_UP
1004:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_DOWN
1005:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_UP_DOWN
1006:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1007:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1008:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetCounterMode(TIM_TypeDef *TIMx, uint32_t CounterMode)
1009:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1010:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   MODIFY_REG(TIMx->CR1, (TIM_CR1_DIR | TIM_CR1_CMS), CounterMode);
1011:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1012:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1013:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1014:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Get actual counter mode.
1015:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx) can be used to
1016:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       check whether or not the counter mode selection feature is supported
1017:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       by a timer instance.
1018:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR1          DIR           LL_TIM_GetCounterMode\n
1019:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CR1          CMS           LL_TIM_GetCounterMode
1020:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1021:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1022:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_UP
1023:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_DOWN
1024:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_UP
1025:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_DOWN
1026:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_UP_DOWN
1027:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1028:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetCounterMode(TIM_TypeDef *TIMx)
1029:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1030:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_DIR | TIM_CR1_CMS));
1031:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1032:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 21


1033:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1034:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Enable auto-reload (ARR) preload.
1035:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR1          ARPE          LL_TIM_EnableARRPreload
1036:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1037:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1038:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1039:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableARRPreload(TIM_TypeDef *TIMx)
1040:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1041:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   SET_BIT(TIMx->CR1, TIM_CR1_ARPE);
1042:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1043:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1044:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1045:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Disable auto-reload (ARR) preload.
1046:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR1          ARPE          LL_TIM_DisableARRPreload
1047:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1048:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1049:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1050:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableARRPreload(TIM_TypeDef *TIMx)
1051:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1052:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   CLEAR_BIT(TIMx->CR1,TIM_CR1_ARPE);
1053:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1054:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1055:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1056:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Indicates whether auto-reload (ARR) preload is enabled.
1057:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR1          ARPE          LL_TIM_IsEnabledARRPreload
1058:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1059:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
1060:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1061:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledARRPreload(TIM_TypeDef *TIMx)
1062:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1063:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(TIMx->CR1, TIM_CR1_ARPE) == (TIM_CR1_ARPE)) ? 1UL : 0UL);
1064:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1065:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1066:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1067:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Set the division ratio between the timer clock  and the sampling clock used by the dead
1068:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx) can be used to check
1069:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not the clock division feature is supported by the timer
1070:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       instance.
1071:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR1          CKD           LL_TIM_SetClockDivision
1072:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1073:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  ClockDivision This parameter can be one of the following values:
1074:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV1
1075:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV2
1076:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV4
1077:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1078:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1079:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetClockDivision(TIM_TypeDef *TIMx, uint32_t ClockDivision)
1080:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1081:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   MODIFY_REG(TIMx->CR1, TIM_CR1_CKD, ClockDivision);
1082:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1083:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1084:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1085:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Get the actual division ratio between the timer clock  and the sampling clock used by t
1086:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx) can be used to check
1087:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not the clock division feature is supported by the timer
1088:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       instance.
1089:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR1          CKD           LL_TIM_GetClockDivision
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 22


1090:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1091:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1092:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV1
1093:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV2
1094:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV4
1095:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1096:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetClockDivision(TIM_TypeDef *TIMx)
1097:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1098:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_CKD));
1099:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1100:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1101:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1102:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Set the counter value.
1103:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
1104:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
1105:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CNT          CNT           LL_TIM_SetCounter
1106:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1107:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Counter Counter value (between Min_Data=0 and Max_Data=0xFFFF or 0xFFFFFFFF)
1108:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1109:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1110:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetCounter(TIM_TypeDef *TIMx, uint32_t Counter)
  37              		.loc 2 1110 22 view .LVU2
  38              	.LBB89:
1111:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1112:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   WRITE_REG(TIMx->CNT, Counter);
  39              		.loc 2 1112 3 view .LVU3
  40 0000 064B     		ldr	r3, .L3
  41 0002 0022     		movs	r2, #0
  42 0004 5A62     		str	r2, [r3, #36]
  43              	.LVL1:
  44              		.loc 2 1112 3 is_stmt 0 view .LVU4
  45              	.LBE89:
  46              	.LBE88:
  74:user/src/timers.c ****   LL_TIM_EnableCounter(US_DELAY_TIMER);
  47              		.loc 1 74 3 is_stmt 1 view .LVU5
  48              	.LBB90:
  49              	.LBI90:
 868:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
  50              		.loc 2 868 22 view .LVU6
  51              	.LBB91:
 870:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
  52              		.loc 2 870 3 view .LVU7
  53 0006 1A68     		ldr	r2, [r3]
  54 0008 42F00102 		orr	r2, r2, #1
  55 000c 1A60     		str	r2, [r3]
  56              	.L2:
  57              	.LBE91:
  58              	.LBE90:
  75:user/src/timers.c ****   while (LL_TIM_IsEnabledCounter(US_DELAY_TIMER) == 0)
  76:user/src/timers.c ****   {
  77:user/src/timers.c ****   };
  59              		.loc 1 77 3 discriminator 1 view .LVU8
  60              	.LVL2:
  61              	.LBB92:
  62              	.LBI92:
 890:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
  63              		.loc 2 890 26 discriminator 1 view .LVU9
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 23


  64              	.LBB93:
 892:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
  65              		.loc 2 892 3 discriminator 1 view .LVU10
 892:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
  66              		.loc 2 892 12 is_stmt 0 discriminator 1 view .LVU11
  67 000e 034B     		ldr	r3, .L3
  68 0010 1B68     		ldr	r3, [r3]
 892:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
  69              		.loc 2 892 69 discriminator 1 view .LVU12
  70 0012 13F0010F 		tst	r3, #1
  71 0016 FAD0     		beq	.L2
  72              	.LBE93:
  73              	.LBE92:
  78:user/src/timers.c **** }
  74              		.loc 1 78 1 view .LVU13
  75 0018 7047     		bx	lr
  76              	.L4:
  77 001a 00BF     		.align	2
  78              	.L3:
  79 001c 00100040 		.word	1073745920
  80              		.cfi_endproc
  81              	.LFE834:
  83              		.section	.text.resetUsDelayTimer,"ax",%progbits
  84              		.align	1
  85              		.global	resetUsDelayTimer
  86              		.syntax unified
  87              		.thumb
  88              		.thumb_func
  89              		.fpu softvfp
  91              	resetUsDelayTimer:
  92              	.LFB836:
  79:user/src/timers.c **** 
  80:user/src/timers.c **** uint32_t restartUsDelayTimer(void)
  81:user/src/timers.c **** {
  82:user/src/timers.c ****   uint32_t value = stopUsDelayTimer();
  83:user/src/timers.c ****   startUsDelayTimer();
  84:user/src/timers.c ****   return value;
  85:user/src/timers.c **** }
  86:user/src/timers.c **** 
  87:user/src/timers.c **** void resetUsDelayTimer(void)
  88:user/src/timers.c **** {
  93              		.loc 1 88 1 is_stmt 1 view -0
  94              		.cfi_startproc
  95              		@ args = 0, pretend = 0, frame = 0
  96              		@ frame_needed = 0, uses_anonymous_args = 0
  97              		@ link register save eliminated.
  89:user/src/timers.c ****   LL_TIM_SetCounter(US_DELAY_TIMER, 0);
  98              		.loc 1 89 3 view .LVU15
  99              	.LVL3:
 100              	.LBB94:
 101              	.LBI94:
1110:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 102              		.loc 2 1110 22 view .LVU16
 103              	.LBB95:
 104              		.loc 2 1112 3 view .LVU17
 105 0000 014B     		ldr	r3, .L6
 106 0002 0022     		movs	r2, #0
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 24


 107 0004 5A62     		str	r2, [r3, #36]
 108              	.LVL4:
 109              		.loc 2 1112 3 is_stmt 0 view .LVU18
 110              	.LBE95:
 111              	.LBE94:
  90:user/src/timers.c **** }
 112              		.loc 1 90 1 view .LVU19
 113 0006 7047     		bx	lr
 114              	.L7:
 115              		.align	2
 116              	.L6:
 117 0008 00100040 		.word	1073745920
 118              		.cfi_endproc
 119              	.LFE836:
 121              		.section	.text.isUsDelayTimerStarted,"ax",%progbits
 122              		.align	1
 123              		.global	isUsDelayTimerStarted
 124              		.syntax unified
 125              		.thumb
 126              		.thumb_func
 127              		.fpu softvfp
 129              	isUsDelayTimerStarted:
 130              	.LFB839:
  91:user/src/timers.c **** 
  92:user/src/timers.c **** uint32_t stopUsDelayTimer(void)
  93:user/src/timers.c **** {
  94:user/src/timers.c ****   LL_TIM_DisableCounter(US_DELAY_TIMER);
  95:user/src/timers.c **** 
  96:user/src/timers.c ****   return getUsDelayTimerValue();
  97:user/src/timers.c **** }
  98:user/src/timers.c **** 
  99:user/src/timers.c **** uint32_t getUsDelayTimerValue(void)
 100:user/src/timers.c **** {
 101:user/src/timers.c ****   uint32_t tick = LL_TIM_GetCounter(US_DELAY_TIMER); 
 102:user/src/timers.c ****   return _tickToUs(tick, US_DELAY_TIMER_TICK);
 103:user/src/timers.c **** }
 104:user/src/timers.c **** 
 105:user/src/timers.c **** bool isUsDelayTimerStarted(void)
 106:user/src/timers.c **** {
 131              		.loc 1 106 1 is_stmt 1 view -0
 132              		.cfi_startproc
 133              		@ args = 0, pretend = 0, frame = 0
 134              		@ frame_needed = 0, uses_anonymous_args = 0
 135              		@ link register save eliminated.
 107:user/src/timers.c ****   if (LL_TIM_IsEnabledCounter(US_DELAY_TIMER))
 136              		.loc 1 107 3 view .LVU21
 137              	.LVL5:
 138              	.LBB96:
 139              	.LBI96:
 890:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 140              		.loc 2 890 26 view .LVU22
 141              	.LBB97:
 892:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 142              		.loc 2 892 3 view .LVU23
 892:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 143              		.loc 2 892 12 is_stmt 0 view .LVU24
 144 0000 044B     		ldr	r3, .L11
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 25


 145 0002 1B68     		ldr	r3, [r3]
 892:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 146              		.loc 2 892 69 view .LVU25
 147 0004 13F0010F 		tst	r3, #1
 148 0008 01D0     		beq	.L10
 149              	.LBE97:
 150              	.LBE96:
 108:user/src/timers.c ****   {
 109:user/src/timers.c ****     return true;
 151              		.loc 1 109 12 view .LVU26
 152 000a 0120     		movs	r0, #1
 153 000c 7047     		bx	lr
 154              	.L10:
 110:user/src/timers.c ****   }
 111:user/src/timers.c ****   else
 112:user/src/timers.c ****   {
 113:user/src/timers.c ****     return false;
 155              		.loc 1 113 12 view .LVU27
 156 000e 0020     		movs	r0, #0
 114:user/src/timers.c ****   }
 115:user/src/timers.c **** }
 157              		.loc 1 115 1 view .LVU28
 158 0010 7047     		bx	lr
 159              	.L12:
 160 0012 00BF     		.align	2
 161              	.L11:
 162 0014 00100040 		.word	1073745920
 163              		.cfi_endproc
 164              	.LFE839:
 166              		.section	.text.startMisoStopwatch,"ax",%progbits
 167              		.align	1
 168              		.global	startMisoStopwatch
 169              		.syntax unified
 170              		.thumb
 171              		.thumb_func
 172              		.fpu softvfp
 174              	startMisoStopwatch:
 175              	.LFB841:
 116:user/src/timers.c **** 
 117:user/src/timers.c **** /**************************************************************************************************
 118:user/src/timers.c **** void initMisoStopwatch(void)
 119:user/src/timers.c **** {
 120:user/src/timers.c ****   // Timer used for tracking GPIO pin (radio data out, cdcEmulator data in) pulse width.
 121:user/src/timers.c ****   // It has enabled update interrupt to check for data transmission error.
 122:user/src/timers.c ****   NVIC_ClearPendingIRQ(TIM7_IRQn);
 123:user/src/timers.c **** 
 124:user/src/timers.c ****   LL_RCC_GetSystemClocksFreq(&clocks);
 125:user/src/timers.c ****   uint32_t prescaller = DIN_PIN_US_TIMER_TICK * clocks.PCLK1_Frequency / 1e6 - 1;
 126:user/src/timers.c ****   assert_param(prescaller < 65535);
 127:user/src/timers.c **** 
 128:user/src/timers.c ****   LL_TIM_SetPrescaler(DIN_PIN_US_TIMER, prescaller);
 129:user/src/timers.c ****   LL_TIM_SetAutoReload(DIN_PIN_US_TIMER, 65535);
 130:user/src/timers.c **** 
 131:user/src/timers.c ****   LL_TIM_ClearFlag_UPDATE(DIN_PIN_US_TIMER);
 132:user/src/timers.c ****   LL_TIM_EnableIT_UPDATE(DIN_PIN_US_TIMER);
 133:user/src/timers.c ****   LL_TIM_GenerateEvent_UPDATE(DIN_PIN_US_TIMER); // Values are updated at the next update event
 134:user/src/timers.c ****   _waitUntilUpdate(DIN_PIN_US_TIMER);
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 26


 135:user/src/timers.c ****   LL_TIM_ClearFlag_UPDATE(DIN_PIN_US_TIMER);
 136:user/src/timers.c **** 
 137:user/src/timers.c ****   NVIC_DisableIRQ(TIM7_IRQn);
 138:user/src/timers.c **** }
 139:user/src/timers.c **** 
 140:user/src/timers.c **** void startMisoStopwatch(void)
 141:user/src/timers.c **** {
 176              		.loc 1 141 1 is_stmt 1 view -0
 177              		.cfi_startproc
 178              		@ args = 0, pretend = 0, frame = 0
 179              		@ frame_needed = 0, uses_anonymous_args = 0
 180              		@ link register save eliminated.
 142:user/src/timers.c ****   LL_TIM_DisableCounter(DIN_PIN_US_TIMER);
 181              		.loc 1 142 3 view .LVU30
 182              	.LVL6:
 183              	.LBB98:
 184              	.LBI98:
 879:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 185              		.loc 2 879 22 view .LVU31
 186              	.LBB99:
 881:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 187              		.loc 2 881 3 view .LVU32
 188 0000 084B     		ldr	r3, .L15
 189 0002 1A68     		ldr	r2, [r3]
 190 0004 22F00102 		bic	r2, r2, #1
 191 0008 1A60     		str	r2, [r3]
 192              	.LVL7:
 881:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 193              		.loc 2 881 3 is_stmt 0 view .LVU33
 194              	.LBE99:
 195              	.LBE98:
 143:user/src/timers.c ****   LL_TIM_SetCounter(DIN_PIN_US_TIMER, 0);
 196              		.loc 1 143 3 is_stmt 1 view .LVU34
 197              	.LBB100:
 198              	.LBI100:
1110:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 199              		.loc 2 1110 22 view .LVU35
 200              	.LBB101:
 201              		.loc 2 1112 3 view .LVU36
 202 000a 0022     		movs	r2, #0
 203 000c 5A62     		str	r2, [r3, #36]
 204              	.LVL8:
 205              		.loc 2 1112 3 is_stmt 0 view .LVU37
 206              	.LBE101:
 207              	.LBE100:
 144:user/src/timers.c ****   LL_TIM_EnableCounter(DIN_PIN_US_TIMER);
 208              		.loc 1 144 3 is_stmt 1 view .LVU38
 209              	.LBB102:
 210              	.LBI102:
 868:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 211              		.loc 2 868 22 view .LVU39
 212              	.LBB103:
 870:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 213              		.loc 2 870 3 view .LVU40
 214 000e 1A68     		ldr	r2, [r3]
 215 0010 42F00102 		orr	r2, r2, #1
 216 0014 1A60     		str	r2, [r3]
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 27


 217              	.L14:
 218              	.LBE103:
 219              	.LBE102:
 145:user/src/timers.c **** 
 146:user/src/timers.c ****   while (LL_TIM_IsEnabledCounter(DIN_PIN_US_TIMER) == 0)
 147:user/src/timers.c ****   {
 148:user/src/timers.c ****   };
 220              		.loc 1 148 3 discriminator 1 view .LVU41
 221              	.LVL9:
 222              	.LBB104:
 223              	.LBI104:
 890:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 224              		.loc 2 890 26 discriminator 1 view .LVU42
 225              	.LBB105:
 892:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 226              		.loc 2 892 3 discriminator 1 view .LVU43
 892:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 227              		.loc 2 892 12 is_stmt 0 discriminator 1 view .LVU44
 228 0016 034B     		ldr	r3, .L15
 229 0018 1B68     		ldr	r3, [r3]
 892:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 230              		.loc 2 892 69 discriminator 1 view .LVU45
 231 001a 13F0010F 		tst	r3, #1
 232 001e FAD0     		beq	.L14
 233              	.LBE105:
 234              	.LBE104:
 149:user/src/timers.c **** }
 235              		.loc 1 149 1 view .LVU46
 236 0020 7047     		bx	lr
 237              	.L16:
 238 0022 00BF     		.align	2
 239              	.L15:
 240 0024 00140040 		.word	1073746944
 241              		.cfi_endproc
 242              	.LFE841:
 244              		.section	.text.resetMisoStopwatch,"ax",%progbits
 245              		.align	1
 246              		.global	resetMisoStopwatch
 247              		.syntax unified
 248              		.thumb
 249              		.thumb_func
 250              		.fpu softvfp
 252              	resetMisoStopwatch:
 253              	.LFB845:
 150:user/src/timers.c **** 
 151:user/src/timers.c **** uint32_t stopMisoStopwatch(void)
 152:user/src/timers.c **** {
 153:user/src/timers.c ****   LL_TIM_DisableCounter(DIN_PIN_US_TIMER);
 154:user/src/timers.c ****   uint32_t tick = LL_TIM_GetCounter(DIN_PIN_US_TIMER);
 155:user/src/timers.c ****   return _tickToUs(tick, DIN_PIN_US_TIMER_TICK);
 156:user/src/timers.c **** }
 157:user/src/timers.c **** 
 158:user/src/timers.c **** void setMisoStopwatchTimerValue(uint32_t us)
 159:user/src/timers.c **** {
 160:user/src/timers.c ****   uint32_t tick = _usToTick(us, DIN_PIN_US_TIMER_TICK);
 161:user/src/timers.c ****   LL_TIM_SetCounter(DIN_PIN_US_TIMER, tick);
 162:user/src/timers.c **** }
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 28


 163:user/src/timers.c **** 
 164:user/src/timers.c **** uint32_t restartMisoStopwatch(void)
 165:user/src/timers.c **** {
 166:user/src/timers.c ****   uint32_t us = stopMisoStopwatch();
 167:user/src/timers.c ****   startMisoStopwatch();
 168:user/src/timers.c ****   return us;
 169:user/src/timers.c **** }
 170:user/src/timers.c **** 
 171:user/src/timers.c **** void resetMisoStopwatch(void)
 172:user/src/timers.c **** {
 254              		.loc 1 172 1 is_stmt 1 view -0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258              		@ link register save eliminated.
 173:user/src/timers.c ****   LL_TIM_SetCounter(DIN_PIN_US_TIMER, 0);
 259              		.loc 1 173 3 view .LVU48
 260              	.LVL10:
 261              	.LBB106:
 262              	.LBI106:
1110:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 263              		.loc 2 1110 22 view .LVU49
 264              	.LBB107:
 265              		.loc 2 1112 3 view .LVU50
 266 0000 014B     		ldr	r3, .L18
 267 0002 0022     		movs	r2, #0
 268 0004 5A62     		str	r2, [r3, #36]
 269              	.LVL11:
 270              		.loc 2 1112 3 is_stmt 0 view .LVU51
 271              	.LBE107:
 272              	.LBE106:
 174:user/src/timers.c **** }
 273              		.loc 1 174 1 view .LVU52
 274 0006 7047     		bx	lr
 275              	.L19:
 276              		.align	2
 277              	.L18:
 278 0008 00140040 		.word	1073746944
 279              		.cfi_endproc
 280              	.LFE845:
 282              		.section	.text._tickToUs,"ax",%progbits
 283              		.align	1
 284              		.global	_tickToUs
 285              		.syntax unified
 286              		.thumb
 287              		.thumb_func
 288              		.fpu softvfp
 290              	_tickToUs:
 291              	.LVL12:
 292              	.LFB847:
 175:user/src/timers.c **** 
 176:user/src/timers.c **** uint32_t getMisoStopwatchTimerValue(void)
 177:user/src/timers.c **** {
 178:user/src/timers.c ****   uint32_t tick = LL_TIM_GetCounter(DIN_PIN_US_TIMER);
 179:user/src/timers.c ****   return _tickToUs(tick, DIN_PIN_US_TIMER_TICK);
 180:user/src/timers.c **** }
 181:user/src/timers.c **** 
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 29


 182:user/src/timers.c **** /**************************************************************************************************
 183:user/src/timers.c **** uint32_t _tickToUs(uint32_t tick, uint32_t timerTick)
 184:user/src/timers.c **** {
 293              		.loc 1 184 1 is_stmt 1 view -0
 294              		.cfi_startproc
 295              		@ args = 0, pretend = 0, frame = 0
 296              		@ frame_needed = 0, uses_anonymous_args = 0
 297              		@ link register save eliminated.
 185:user/src/timers.c ****   return (uint32_t)tick * timerTick;
 298              		.loc 1 185 3 view .LVU54
 186:user/src/timers.c **** }
 299              		.loc 1 186 1 is_stmt 0 view .LVU55
 300 0000 01FB00F0 		mul	r0, r1, r0
 301              	.LVL13:
 302              		.loc 1 186 1 view .LVU56
 303 0004 7047     		bx	lr
 304              		.cfi_endproc
 305              	.LFE847:
 307              		.section	.text.getUsDelayTimerValue,"ax",%progbits
 308              		.align	1
 309              		.global	getUsDelayTimerValue
 310              		.syntax unified
 311              		.thumb
 312              		.thumb_func
 313              		.fpu softvfp
 315              	getUsDelayTimerValue:
 316              	.LFB838:
 100:user/src/timers.c ****   uint32_t tick = LL_TIM_GetCounter(US_DELAY_TIMER); 
 317              		.loc 1 100 1 is_stmt 1 view -0
 318              		.cfi_startproc
 319              		@ args = 0, pretend = 0, frame = 0
 320              		@ frame_needed = 0, uses_anonymous_args = 0
 321 0000 08B5     		push	{r3, lr}
 322              	.LCFI0:
 323              		.cfi_def_cfa_offset 8
 324              		.cfi_offset 3, -8
 325              		.cfi_offset 14, -4
 101:user/src/timers.c ****   return _tickToUs(tick, US_DELAY_TIMER_TICK);
 326              		.loc 1 101 3 view .LVU58
 327              	.LVL14:
 328              	.LBB108:
 329              	.LBI108:
1113:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1114:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1115:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1116:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Get the counter value.
1117:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
1118:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
1119:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CNT          CNT           LL_TIM_GetCounter
1120:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1121:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval Counter value (between Min_Data=0 and Max_Data=0xFFFF or 0xFFFFFFFF)
1122:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1123:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetCounter(TIM_TypeDef *TIMx)
 330              		.loc 2 1123 26 view .LVU59
 331              	.LBB109:
1124:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1125:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CNT));
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 30


 332              		.loc 2 1125 3 view .LVU60
 333              		.loc 2 1125 10 is_stmt 0 view .LVU61
 334 0002 034B     		ldr	r3, .L23
 335 0004 586A     		ldr	r0, [r3, #36]
 336              	.LVL15:
 337              		.loc 2 1125 10 view .LVU62
 338              	.LBE109:
 339              	.LBE108:
 102:user/src/timers.c **** }
 340              		.loc 1 102 3 is_stmt 1 view .LVU63
 102:user/src/timers.c **** }
 341              		.loc 1 102 10 is_stmt 0 view .LVU64
 342 0006 0121     		movs	r1, #1
 343 0008 FFF7FEFF 		bl	_tickToUs
 344              	.LVL16:
 103:user/src/timers.c **** 
 345              		.loc 1 103 1 view .LVU65
 346 000c 08BD     		pop	{r3, pc}
 347              	.L24:
 348 000e 00BF     		.align	2
 349              	.L23:
 350 0010 00100040 		.word	1073745920
 351              		.cfi_endproc
 352              	.LFE838:
 354              		.section	.text.stopUsDelayTimer,"ax",%progbits
 355              		.align	1
 356              		.global	stopUsDelayTimer
 357              		.syntax unified
 358              		.thumb
 359              		.thumb_func
 360              		.fpu softvfp
 362              	stopUsDelayTimer:
 363              	.LFB837:
  93:user/src/timers.c ****   LL_TIM_DisableCounter(US_DELAY_TIMER);
 364              		.loc 1 93 1 is_stmt 1 view -0
 365              		.cfi_startproc
 366              		@ args = 0, pretend = 0, frame = 0
 367              		@ frame_needed = 0, uses_anonymous_args = 0
 368 0000 08B5     		push	{r3, lr}
 369              	.LCFI1:
 370              		.cfi_def_cfa_offset 8
 371              		.cfi_offset 3, -8
 372              		.cfi_offset 14, -4
  94:user/src/timers.c **** 
 373              		.loc 1 94 3 view .LVU67
 374              	.LVL17:
 375              	.LBB110:
 376              	.LBI110:
 879:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 377              		.loc 2 879 22 view .LVU68
 378              	.LBB111:
 881:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 379              		.loc 2 881 3 view .LVU69
 380 0002 044A     		ldr	r2, .L27
 381 0004 1368     		ldr	r3, [r2]
 382 0006 23F00103 		bic	r3, r3, #1
 383 000a 1360     		str	r3, [r2]
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 31


 384              	.LVL18:
 881:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 385              		.loc 2 881 3 is_stmt 0 view .LVU70
 386              	.LBE111:
 387              	.LBE110:
  96:user/src/timers.c **** }
 388              		.loc 1 96 3 is_stmt 1 view .LVU71
  96:user/src/timers.c **** }
 389              		.loc 1 96 10 is_stmt 0 view .LVU72
 390 000c FFF7FEFF 		bl	getUsDelayTimerValue
 391              	.LVL19:
  97:user/src/timers.c **** 
 392              		.loc 1 97 1 view .LVU73
 393 0010 08BD     		pop	{r3, pc}
 394              	.L28:
 395 0012 00BF     		.align	2
 396              	.L27:
 397 0014 00100040 		.word	1073745920
 398              		.cfi_endproc
 399              	.LFE837:
 401              		.section	.text.restartUsDelayTimer,"ax",%progbits
 402              		.align	1
 403              		.global	restartUsDelayTimer
 404              		.syntax unified
 405              		.thumb
 406              		.thumb_func
 407              		.fpu softvfp
 409              	restartUsDelayTimer:
 410              	.LFB835:
  81:user/src/timers.c ****   uint32_t value = stopUsDelayTimer();
 411              		.loc 1 81 1 is_stmt 1 view -0
 412              		.cfi_startproc
 413              		@ args = 0, pretend = 0, frame = 0
 414              		@ frame_needed = 0, uses_anonymous_args = 0
 415 0000 10B5     		push	{r4, lr}
 416              	.LCFI2:
 417              		.cfi_def_cfa_offset 8
 418              		.cfi_offset 4, -8
 419              		.cfi_offset 14, -4
  82:user/src/timers.c ****   startUsDelayTimer();
 420              		.loc 1 82 3 view .LVU75
  82:user/src/timers.c ****   startUsDelayTimer();
 421              		.loc 1 82 20 is_stmt 0 view .LVU76
 422 0002 FFF7FEFF 		bl	stopUsDelayTimer
 423              	.LVL20:
 424 0006 0446     		mov	r4, r0
 425              	.LVL21:
  83:user/src/timers.c ****   return value;
 426              		.loc 1 83 3 is_stmt 1 view .LVU77
 427 0008 FFF7FEFF 		bl	startUsDelayTimer
 428              	.LVL22:
  84:user/src/timers.c **** }
 429              		.loc 1 84 3 view .LVU78
  85:user/src/timers.c **** 
 430              		.loc 1 85 1 is_stmt 0 view .LVU79
 431 000c 2046     		mov	r0, r4
 432 000e 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 32


  85:user/src/timers.c **** 
 433              		.loc 1 85 1 view .LVU80
 434              		.cfi_endproc
 435              	.LFE835:
 437              		.section	.text.stopMisoStopwatch,"ax",%progbits
 438              		.align	1
 439              		.global	stopMisoStopwatch
 440              		.syntax unified
 441              		.thumb
 442              		.thumb_func
 443              		.fpu softvfp
 445              	stopMisoStopwatch:
 446              	.LFB842:
 152:user/src/timers.c ****   LL_TIM_DisableCounter(DIN_PIN_US_TIMER);
 447              		.loc 1 152 1 is_stmt 1 view -0
 448              		.cfi_startproc
 449              		@ args = 0, pretend = 0, frame = 0
 450              		@ frame_needed = 0, uses_anonymous_args = 0
 451 0000 08B5     		push	{r3, lr}
 452              	.LCFI3:
 453              		.cfi_def_cfa_offset 8
 454              		.cfi_offset 3, -8
 455              		.cfi_offset 14, -4
 153:user/src/timers.c ****   uint32_t tick = LL_TIM_GetCounter(DIN_PIN_US_TIMER);
 456              		.loc 1 153 3 view .LVU82
 457              	.LVL23:
 458              	.LBB112:
 459              	.LBI112:
 879:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 460              		.loc 2 879 22 view .LVU83
 461              	.LBB113:
 881:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 462              		.loc 2 881 3 view .LVU84
 463 0002 054B     		ldr	r3, .L33
 464 0004 1A68     		ldr	r2, [r3]
 465 0006 22F00102 		bic	r2, r2, #1
 466 000a 1A60     		str	r2, [r3]
 467              	.LVL24:
 881:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 468              		.loc 2 881 3 is_stmt 0 view .LVU85
 469              	.LBE113:
 470              	.LBE112:
 154:user/src/timers.c ****   return _tickToUs(tick, DIN_PIN_US_TIMER_TICK);
 471              		.loc 1 154 3 is_stmt 1 view .LVU86
 472              	.LBB114:
 473              	.LBI114:
1123:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 474              		.loc 2 1123 26 view .LVU87
 475              	.LBB115:
 476              		.loc 2 1125 3 view .LVU88
 477              		.loc 2 1125 10 is_stmt 0 view .LVU89
 478 000c 586A     		ldr	r0, [r3, #36]
 479              	.LVL25:
 480              		.loc 2 1125 10 view .LVU90
 481              	.LBE115:
 482              	.LBE114:
 155:user/src/timers.c **** }
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 33


 483              		.loc 1 155 3 is_stmt 1 view .LVU91
 155:user/src/timers.c **** }
 484              		.loc 1 155 10 is_stmt 0 view .LVU92
 485 000e 0121     		movs	r1, #1
 486 0010 FFF7FEFF 		bl	_tickToUs
 487              	.LVL26:
 156:user/src/timers.c **** 
 488              		.loc 1 156 1 view .LVU93
 489 0014 08BD     		pop	{r3, pc}
 490              	.L34:
 491 0016 00BF     		.align	2
 492              	.L33:
 493 0018 00140040 		.word	1073746944
 494              		.cfi_endproc
 495              	.LFE842:
 497              		.section	.text.restartMisoStopwatch,"ax",%progbits
 498              		.align	1
 499              		.global	restartMisoStopwatch
 500              		.syntax unified
 501              		.thumb
 502              		.thumb_func
 503              		.fpu softvfp
 505              	restartMisoStopwatch:
 506              	.LFB844:
 165:user/src/timers.c ****   uint32_t us = stopMisoStopwatch();
 507              		.loc 1 165 1 is_stmt 1 view -0
 508              		.cfi_startproc
 509              		@ args = 0, pretend = 0, frame = 0
 510              		@ frame_needed = 0, uses_anonymous_args = 0
 511 0000 10B5     		push	{r4, lr}
 512              	.LCFI4:
 513              		.cfi_def_cfa_offset 8
 514              		.cfi_offset 4, -8
 515              		.cfi_offset 14, -4
 166:user/src/timers.c ****   startMisoStopwatch();
 516              		.loc 1 166 3 view .LVU95
 166:user/src/timers.c ****   startMisoStopwatch();
 517              		.loc 1 166 17 is_stmt 0 view .LVU96
 518 0002 FFF7FEFF 		bl	stopMisoStopwatch
 519              	.LVL27:
 520 0006 0446     		mov	r4, r0
 521              	.LVL28:
 167:user/src/timers.c ****   return us;
 522              		.loc 1 167 3 is_stmt 1 view .LVU97
 523 0008 FFF7FEFF 		bl	startMisoStopwatch
 524              	.LVL29:
 168:user/src/timers.c **** }
 525              		.loc 1 168 3 view .LVU98
 169:user/src/timers.c **** 
 526              		.loc 1 169 1 is_stmt 0 view .LVU99
 527 000c 2046     		mov	r0, r4
 528 000e 10BD     		pop	{r4, pc}
 169:user/src/timers.c **** 
 529              		.loc 1 169 1 view .LVU100
 530              		.cfi_endproc
 531              	.LFE844:
 533              		.section	.text.getMisoStopwatchTimerValue,"ax",%progbits
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 34


 534              		.align	1
 535              		.global	getMisoStopwatchTimerValue
 536              		.syntax unified
 537              		.thumb
 538              		.thumb_func
 539              		.fpu softvfp
 541              	getMisoStopwatchTimerValue:
 542              	.LFB846:
 177:user/src/timers.c ****   uint32_t tick = LL_TIM_GetCounter(DIN_PIN_US_TIMER);
 543              		.loc 1 177 1 is_stmt 1 view -0
 544              		.cfi_startproc
 545              		@ args = 0, pretend = 0, frame = 0
 546              		@ frame_needed = 0, uses_anonymous_args = 0
 547 0000 08B5     		push	{r3, lr}
 548              	.LCFI5:
 549              		.cfi_def_cfa_offset 8
 550              		.cfi_offset 3, -8
 551              		.cfi_offset 14, -4
 178:user/src/timers.c ****   return _tickToUs(tick, DIN_PIN_US_TIMER_TICK);
 552              		.loc 1 178 3 view .LVU102
 553              	.LVL30:
 554              	.LBB116:
 555              	.LBI116:
1123:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 556              		.loc 2 1123 26 view .LVU103
 557              	.LBB117:
 558              		.loc 2 1125 3 view .LVU104
 559              		.loc 2 1125 10 is_stmt 0 view .LVU105
 560 0002 034B     		ldr	r3, .L39
 561 0004 586A     		ldr	r0, [r3, #36]
 562              	.LVL31:
 563              		.loc 2 1125 10 view .LVU106
 564              	.LBE117:
 565              	.LBE116:
 179:user/src/timers.c **** }
 566              		.loc 1 179 3 is_stmt 1 view .LVU107
 179:user/src/timers.c **** }
 567              		.loc 1 179 10 is_stmt 0 view .LVU108
 568 0006 0121     		movs	r1, #1
 569 0008 FFF7FEFF 		bl	_tickToUs
 570              	.LVL32:
 180:user/src/timers.c **** 
 571              		.loc 1 180 1 view .LVU109
 572 000c 08BD     		pop	{r3, pc}
 573              	.L40:
 574 000e 00BF     		.align	2
 575              	.L39:
 576 0010 00140040 		.word	1073746944
 577              		.cfi_endproc
 578              	.LFE846:
 580              		.section	.text._usToTick,"ax",%progbits
 581              		.align	1
 582              		.global	_usToTick
 583              		.syntax unified
 584              		.thumb
 585              		.thumb_func
 586              		.fpu softvfp
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 35


 588              	_usToTick:
 589              	.LVL33:
 590              	.LFB848:
 187:user/src/timers.c **** 
 188:user/src/timers.c **** uint32_t _usToTick(uint32_t us, uint32_t timerTick)
 189:user/src/timers.c **** {
 591              		.loc 1 189 1 is_stmt 1 view -0
 592              		.cfi_startproc
 593              		@ args = 0, pretend = 0, frame = 0
 594              		@ frame_needed = 0, uses_anonymous_args = 0
 595              		.loc 1 189 1 is_stmt 0 view .LVU111
 596 0000 10B5     		push	{r4, lr}
 597              	.LCFI6:
 598              		.cfi_def_cfa_offset 8
 599              		.cfi_offset 4, -8
 600              		.cfi_offset 14, -4
 190:user/src/timers.c ****   uint32_t tick = us / timerTick;
 601              		.loc 1 190 3 is_stmt 1 view .LVU112
 602              		.loc 1 190 12 is_stmt 0 view .LVU113
 603 0002 B0FBF1F4 		udiv	r4, r0, r1
 604              	.LVL34:
 191:user/src/timers.c ****   assert_param(tick < 65535);
 605              		.loc 1 191 3 is_stmt 1 view .LVU114
 606 0006 4FF6FE73 		movw	r3, #65534
 607 000a 9C42     		cmp	r4, r3
 608 000c 01D8     		bhi	.L44
 609              	.LVL35:
 610              	.L41:
 192:user/src/timers.c **** 
 193:user/src/timers.c ****   return tick;
 194:user/src/timers.c **** }
 611              		.loc 1 194 1 is_stmt 0 view .LVU115
 612 000e 2046     		mov	r0, r4
 613 0010 10BD     		pop	{r4, pc}
 614              	.LVL36:
 615              	.L44:
 191:user/src/timers.c ****   assert_param(tick < 65535);
 616              		.loc 1 191 3 discriminator 1 view .LVU116
 617 0012 BF21     		movs	r1, #191
 618              	.LVL37:
 191:user/src/timers.c ****   assert_param(tick < 65535);
 619              		.loc 1 191 3 discriminator 1 view .LVU117
 620 0014 0148     		ldr	r0, .L45
 621              	.LVL38:
 191:user/src/timers.c ****   assert_param(tick < 65535);
 622              		.loc 1 191 3 discriminator 1 view .LVU118
 623 0016 FFF7FEFF 		bl	assert_failed
 624              	.LVL39:
 193:user/src/timers.c **** }
 625              		.loc 1 193 3 is_stmt 1 discriminator 1 view .LVU119
 193:user/src/timers.c **** }
 626              		.loc 1 193 10 is_stmt 0 discriminator 1 view .LVU120
 627 001a F8E7     		b	.L41
 628              	.L46:
 629              		.align	2
 630              	.L45:
 631 001c 00000000 		.word	.LC0
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 36


 632              		.cfi_endproc
 633              	.LFE848:
 635              		.section	.text.delayUs,"ax",%progbits
 636              		.align	1
 637              		.global	delayUs
 638              		.syntax unified
 639              		.thumb
 640              		.thumb_func
 641              		.fpu softvfp
 643              	delayUs:
 644              	.LVL40:
 645              	.LFB833:
  52:user/src/timers.c ****   if (LL_TIM_IsEnabledCounter(US_DELAY_TIMER))
 646              		.loc 1 52 1 is_stmt 1 view -0
 647              		.cfi_startproc
 648              		@ args = 0, pretend = 0, frame = 0
 649              		@ frame_needed = 0, uses_anonymous_args = 0
  52:user/src/timers.c ****   if (LL_TIM_IsEnabledCounter(US_DELAY_TIMER))
 650              		.loc 1 52 1 is_stmt 0 view .LVU122
 651 0000 10B5     		push	{r4, lr}
 652              	.LCFI7:
 653              		.cfi_def_cfa_offset 8
 654              		.cfi_offset 4, -8
 655              		.cfi_offset 14, -4
 656 0002 0446     		mov	r4, r0
  53:user/src/timers.c ****   {
 657              		.loc 1 53 3 is_stmt 1 view .LVU123
 658              	.LVL41:
 659              	.LBB118:
 660              	.LBI118:
 890:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 661              		.loc 2 890 26 view .LVU124
 662              	.LBB119:
 892:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 663              		.loc 2 892 3 view .LVU125
 892:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 664              		.loc 2 892 12 is_stmt 0 view .LVU126
 665 0004 154B     		ldr	r3, .L55
 666 0006 1B68     		ldr	r3, [r3]
 892:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 667              		.loc 2 892 69 view .LVU127
 668 0008 13F0010F 		tst	r3, #1
 669 000c 01D0     		beq	.L48
 670              	.LVL42:
 892:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 671              		.loc 2 892 69 view .LVU128
 672              	.LBE119:
 673              	.LBE118:
  55:user/src/timers.c ****   }
 674              		.loc 1 55 5 is_stmt 1 view .LVU129
 675 000e FFF7FEFF 		bl	Error_Handler
 676              	.LVL43:
 677              	.L48:
  58:user/src/timers.c ****                                                                // -1 is here because of each increm
 678              		.loc 1 58 3 view .LVU130
  58:user/src/timers.c ****                                                                // -1 is here because of each increm
 679              		.loc 1 58 24 is_stmt 0 view .LVU131
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 37


 680 0012 0121     		movs	r1, #1
 681 0014 2046     		mov	r0, r4
 682 0016 FFF7FEFF 		bl	_usToTick
 683              	.LVL44:
  60:user/src/timers.c ****   assert_param(tickValue < 65535);
 684              		.loc 1 60 3 is_stmt 1 view .LVU132
 685 001a 441E     		subs	r4, r0, #1
 686              	.LVL45:
  60:user/src/timers.c ****   assert_param(tickValue < 65535);
 687              		.loc 1 60 3 is_stmt 0 view .LVU133
 688 001c 14D0     		beq	.L53
 689              	.L49:
  61:user/src/timers.c **** 
 690              		.loc 1 61 3 is_stmt 1 view .LVU134
 691 001e 4FF6FE73 		movw	r3, #65534
 692 0022 9C42     		cmp	r4, r3
 693 0024 15D8     		bhi	.L54
 694              	.L50:
  63:user/src/timers.c ****   LL_TIM_EnableCounter(US_DELAY_TIMER);
 695              		.loc 1 63 3 view .LVU135
 696              	.LVL46:
 697              	.LBB120:
 698              	.LBI120:
1110:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 699              		.loc 2 1110 22 view .LVU136
 700              	.LBB121:
1112:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 701              		.loc 2 1112 3 view .LVU137
 702 0026 0D4B     		ldr	r3, .L55
 703 0028 0022     		movs	r2, #0
 704 002a 5A62     		str	r2, [r3, #36]
 705              	.LVL47:
1112:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 706              		.loc 2 1112 3 is_stmt 0 view .LVU138
 707              	.LBE121:
 708              	.LBE120:
  64:user/src/timers.c ****   while (LL_TIM_GetCounter(US_DELAY_TIMER) != tickValue)
 709              		.loc 1 64 3 is_stmt 1 view .LVU139
 710              	.LBB122:
 711              	.LBI122:
 868:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 712              		.loc 2 868 22 view .LVU140
 713              	.LBB123:
 870:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 714              		.loc 2 870 3 view .LVU141
 715 002c 1A68     		ldr	r2, [r3]
 716 002e 42F00102 		orr	r2, r2, #1
 717 0032 1A60     		str	r2, [r3]
 718              	.L51:
 719              	.LBE123:
 720              	.LBE122:
  67:user/src/timers.c ****   LL_TIM_DisableCounter(US_DELAY_TIMER);
 721              		.loc 1 67 3 discriminator 1 view .LVU142
 722              	.LVL48:
 723              	.LBB124:
 724              	.LBI124:
1123:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 38


 725              		.loc 2 1123 26 discriminator 1 view .LVU143
 726              	.LBB125:
 727              		.loc 2 1125 3 discriminator 1 view .LVU144
 728              		.loc 2 1125 10 is_stmt 0 discriminator 1 view .LVU145
 729 0034 094B     		ldr	r3, .L55
 730 0036 5B6A     		ldr	r3, [r3, #36]
 731              	.LVL49:
 732              		.loc 2 1125 10 discriminator 1 view .LVU146
 733              	.LBE125:
 734              	.LBE124:
  65:user/src/timers.c ****   {
 735              		.loc 1 65 9 discriminator 1 view .LVU147
 736 0038 9C42     		cmp	r4, r3
 737 003a FBD1     		bne	.L51
  68:user/src/timers.c **** }
 738              		.loc 1 68 3 is_stmt 1 view .LVU148
 739              	.LVL50:
 740              	.LBB126:
 741              	.LBI126:
 879:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 742              		.loc 2 879 22 view .LVU149
 743              	.LBB127:
 881:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 744              		.loc 2 881 3 view .LVU150
 745 003c 074A     		ldr	r2, .L55
 746 003e 1368     		ldr	r3, [r2]
 747 0040 23F00103 		bic	r3, r3, #1
 748 0044 1360     		str	r3, [r2]
 749              	.LVL51:
 881:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 750              		.loc 2 881 3 is_stmt 0 view .LVU151
 751              	.LBE127:
 752              	.LBE126:
  69:user/src/timers.c **** 
 753              		.loc 1 69 1 view .LVU152
 754 0046 10BD     		pop	{r4, pc}
 755              	.LVL52:
 756              	.L53:
  60:user/src/timers.c ****   assert_param(tickValue < 65535);
 757              		.loc 1 60 3 discriminator 1 view .LVU153
 758 0048 3C21     		movs	r1, #60
 759 004a 0548     		ldr	r0, .L55+4
 760 004c FFF7FEFF 		bl	assert_failed
 761              	.LVL53:
 762 0050 E5E7     		b	.L49
 763              	.L54:
  61:user/src/timers.c **** 
 764              		.loc 1 61 3 discriminator 1 view .LVU154
 765 0052 3D21     		movs	r1, #61
 766 0054 0248     		ldr	r0, .L55+4
 767 0056 FFF7FEFF 		bl	assert_failed
 768              	.LVL54:
 769 005a E4E7     		b	.L50
 770              	.L56:
 771              		.align	2
 772              	.L55:
 773 005c 00100040 		.word	1073745920
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 39


 774 0060 00000000 		.word	.LC0
 775              		.cfi_endproc
 776              	.LFE833:
 778              		.section	.text.setMisoStopwatchTimerValue,"ax",%progbits
 779              		.align	1
 780              		.global	setMisoStopwatchTimerValue
 781              		.syntax unified
 782              		.thumb
 783              		.thumb_func
 784              		.fpu softvfp
 786              	setMisoStopwatchTimerValue:
 787              	.LVL55:
 788              	.LFB843:
 159:user/src/timers.c ****   uint32_t tick = _usToTick(us, DIN_PIN_US_TIMER_TICK);
 789              		.loc 1 159 1 is_stmt 1 view -0
 790              		.cfi_startproc
 791              		@ args = 0, pretend = 0, frame = 0
 792              		@ frame_needed = 0, uses_anonymous_args = 0
 159:user/src/timers.c ****   uint32_t tick = _usToTick(us, DIN_PIN_US_TIMER_TICK);
 793              		.loc 1 159 1 is_stmt 0 view .LVU156
 794 0000 08B5     		push	{r3, lr}
 795              	.LCFI8:
 796              		.cfi_def_cfa_offset 8
 797              		.cfi_offset 3, -8
 798              		.cfi_offset 14, -4
 160:user/src/timers.c ****   LL_TIM_SetCounter(DIN_PIN_US_TIMER, tick);
 799              		.loc 1 160 3 is_stmt 1 view .LVU157
 160:user/src/timers.c ****   LL_TIM_SetCounter(DIN_PIN_US_TIMER, tick);
 800              		.loc 1 160 19 is_stmt 0 view .LVU158
 801 0002 0121     		movs	r1, #1
 802 0004 FFF7FEFF 		bl	_usToTick
 803              	.LVL56:
 161:user/src/timers.c **** }
 804              		.loc 1 161 3 is_stmt 1 view .LVU159
 805              	.LBB128:
 806              	.LBI128:
1110:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 807              		.loc 2 1110 22 view .LVU160
 808              	.LBB129:
1112:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 809              		.loc 2 1112 3 view .LVU161
 810 0008 014B     		ldr	r3, .L59
 811 000a 5862     		str	r0, [r3, #36]
 812              	.LVL57:
1112:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 813              		.loc 2 1112 3 is_stmt 0 view .LVU162
 814              	.LBE129:
 815              	.LBE128:
 162:user/src/timers.c **** 
 816              		.loc 1 162 1 view .LVU163
 817 000c 08BD     		pop	{r3, pc}
 818              	.L60:
 819 000e 00BF     		.align	2
 820              	.L59:
 821 0010 00140040 		.word	1073746944
 822              		.cfi_endproc
 823              	.LFE843:
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 40


 825              		.section	.text._waitUntilUpdate,"ax",%progbits
 826              		.align	1
 827              		.global	_waitUntilUpdate
 828              		.syntax unified
 829              		.thumb
 830              		.thumb_func
 831              		.fpu softvfp
 833              	_waitUntilUpdate:
 834              	.LFB849:
 195:user/src/timers.c **** 
 196:user/src/timers.c **** void _waitUntilUpdate(TIM_TypeDef *TIMx)
 197:user/src/timers.c **** {
 835              		.loc 1 197 1 is_stmt 1 view -0
 836              		.cfi_startproc
 837              		@ args = 0, pretend = 0, frame = 0
 838              		@ frame_needed = 0, uses_anonymous_args = 0
 839              		@ link register save eliminated.
 840              	.LVL58:
 841              	.L62:
 198:user/src/timers.c ****   while ((TIMx->EGR & TIM_EGR_UG) == SET)
 199:user/src/timers.c ****   {
 200:user/src/timers.c ****   }
 842              		.loc 1 200 3 discriminator 1 view .LVU165
 198:user/src/timers.c ****   while ((TIMx->EGR & TIM_EGR_UG) == SET)
 843              		.loc 1 198 15 is_stmt 0 discriminator 1 view .LVU166
 844 0000 4369     		ldr	r3, [r0, #20]
 198:user/src/timers.c ****   while ((TIMx->EGR & TIM_EGR_UG) == SET)
 845              		.loc 1 198 9 discriminator 1 view .LVU167
 846 0002 13F0010F 		tst	r3, #1
 847 0006 FBD1     		bne	.L62
 201:user/src/timers.c **** }...
 848              		.loc 1 201 1 view .LVU168
 849 0008 7047     		bx	lr
 850              		.cfi_endproc
 851              	.LFE849:
 853              		.global	__aeabi_ui2d
 854              		.global	__aeabi_ddiv
 855              		.global	__aeabi_dsub
 856              		.global	__aeabi_d2uiz
 857              		.section	.text.initUsDelayTimer,"ax",%progbits
 858              		.align	1
 859              		.global	initUsDelayTimer
 860              		.syntax unified
 861              		.thumb
 862              		.thumb_func
 863              		.fpu softvfp
 865              	initUsDelayTimer:
 866              	.LFB832:
  34:user/src/timers.c **** {
 867              		.loc 1 34 1 is_stmt 1 view -0
 868              		.cfi_startproc
 869              		@ args = 0, pretend = 0, frame = 0
 870              		@ frame_needed = 0, uses_anonymous_args = 0
 871 0000 38B5     		push	{r3, r4, r5, lr}
 872              	.LCFI9:
 873              		.cfi_def_cfa_offset 16
 874              		.cfi_offset 3, -16
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 41


 875              		.cfi_offset 4, -12
 876              		.cfi_offset 5, -8
 877              		.cfi_offset 14, -4
  35:user/src/timers.c ****   NVIC_ClearPendingIRQ(TIM6_IRQn);
 878              		.loc 1 35 3 view .LVU170
 879              	.LVL59:
 880              	.LBB130:
 881              	.LBI130:
 882              		.file 3 "Drivers/CMSIS/Include/core_cm3.h"
   1:Drivers/CMSIS/Include/core_cm3.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/core_cm3.h ****  * @file     core_cm3.h
   3:Drivers/CMSIS/Include/core_cm3.h ****  * @brief    CMSIS Cortex-M3 Core Peripheral Access Layer Header File
   4:Drivers/CMSIS/Include/core_cm3.h ****  * @version  V5.0.8
   5:Drivers/CMSIS/Include/core_cm3.h ****  * @date     04. June 2018
   6:Drivers/CMSIS/Include/core_cm3.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/core_cm3.h **** /*
   8:Drivers/CMSIS/Include/core_cm3.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/core_cm3.h ****  *
  10:Drivers/CMSIS/Include/core_cm3.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/core_cm3.h ****  *
  12:Drivers/CMSIS/Include/core_cm3.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/core_cm3.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/core_cm3.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/core_cm3.h ****  *
  16:Drivers/CMSIS/Include/core_cm3.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/core_cm3.h ****  *
  18:Drivers/CMSIS/Include/core_cm3.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/core_cm3.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/core_cm3.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/core_cm3.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/core_cm3.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/core_cm3.h ****  */
  24:Drivers/CMSIS/Include/core_cm3.h **** 
  25:Drivers/CMSIS/Include/core_cm3.h **** #if   defined ( __ICCARM__ )
  26:Drivers/CMSIS/Include/core_cm3.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:Drivers/CMSIS/Include/core_cm3.h **** #elif defined (__clang__)
  28:Drivers/CMSIS/Include/core_cm3.h ****   #pragma clang system_header   /* treat file as system include file */
  29:Drivers/CMSIS/Include/core_cm3.h **** #endif
  30:Drivers/CMSIS/Include/core_cm3.h **** 
  31:Drivers/CMSIS/Include/core_cm3.h **** #ifndef __CORE_CM3_H_GENERIC
  32:Drivers/CMSIS/Include/core_cm3.h **** #define __CORE_CM3_H_GENERIC
  33:Drivers/CMSIS/Include/core_cm3.h **** 
  34:Drivers/CMSIS/Include/core_cm3.h **** #include <stdint.h>
  35:Drivers/CMSIS/Include/core_cm3.h **** 
  36:Drivers/CMSIS/Include/core_cm3.h **** #ifdef __cplusplus
  37:Drivers/CMSIS/Include/core_cm3.h ****  extern "C" {
  38:Drivers/CMSIS/Include/core_cm3.h **** #endif
  39:Drivers/CMSIS/Include/core_cm3.h **** 
  40:Drivers/CMSIS/Include/core_cm3.h **** /**
  41:Drivers/CMSIS/Include/core_cm3.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:Drivers/CMSIS/Include/core_cm3.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:Drivers/CMSIS/Include/core_cm3.h **** 
  44:Drivers/CMSIS/Include/core_cm3.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:Drivers/CMSIS/Include/core_cm3.h ****      Function definitions in header files are used to allow 'inlining'.
  46:Drivers/CMSIS/Include/core_cm3.h **** 
  47:Drivers/CMSIS/Include/core_cm3.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:Drivers/CMSIS/Include/core_cm3.h ****      Unions are used for effective representation of core registers.
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 42


  49:Drivers/CMSIS/Include/core_cm3.h **** 
  50:Drivers/CMSIS/Include/core_cm3.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:Drivers/CMSIS/Include/core_cm3.h ****      Function-like macros are used to allow more efficient code.
  52:Drivers/CMSIS/Include/core_cm3.h ****  */
  53:Drivers/CMSIS/Include/core_cm3.h **** 
  54:Drivers/CMSIS/Include/core_cm3.h **** 
  55:Drivers/CMSIS/Include/core_cm3.h **** /*******************************************************************************
  56:Drivers/CMSIS/Include/core_cm3.h ****  *                 CMSIS definitions
  57:Drivers/CMSIS/Include/core_cm3.h ****  ******************************************************************************/
  58:Drivers/CMSIS/Include/core_cm3.h **** /**
  59:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup Cortex_M3
  60:Drivers/CMSIS/Include/core_cm3.h ****   @{
  61:Drivers/CMSIS/Include/core_cm3.h ****  */
  62:Drivers/CMSIS/Include/core_cm3.h **** 
  63:Drivers/CMSIS/Include/core_cm3.h **** #include "cmsis_version.h"
  64:Drivers/CMSIS/Include/core_cm3.h **** 
  65:Drivers/CMSIS/Include/core_cm3.h **** /*  CMSIS CM3 definitions */
  66:Drivers/CMSIS/Include/core_cm3.h **** #define __CM3_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)              /*!< \deprecated [31:16] C
  67:Drivers/CMSIS/Include/core_cm3.h **** #define __CM3_CMSIS_VERSION_SUB   (__CM_CMSIS_VERSION_SUB)               /*!< \deprecated [15:0]  C
  68:Drivers/CMSIS/Include/core_cm3.h **** #define __CM3_CMSIS_VERSION       ((__CM3_CMSIS_VERSION_MAIN << 16U) | \
  69:Drivers/CMSIS/Include/core_cm3.h ****                                     __CM3_CMSIS_VERSION_SUB           )  /*!< \deprecated CMSIS HAL
  70:Drivers/CMSIS/Include/core_cm3.h **** 
  71:Drivers/CMSIS/Include/core_cm3.h **** #define __CORTEX_M                (3U)                                   /*!< Cortex-M Core */
  72:Drivers/CMSIS/Include/core_cm3.h **** 
  73:Drivers/CMSIS/Include/core_cm3.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:Drivers/CMSIS/Include/core_cm3.h ****     This core does not support an FPU at all
  75:Drivers/CMSIS/Include/core_cm3.h **** */
  76:Drivers/CMSIS/Include/core_cm3.h **** #define __FPU_USED       0U
  77:Drivers/CMSIS/Include/core_cm3.h **** 
  78:Drivers/CMSIS/Include/core_cm3.h **** #if defined ( __CC_ARM )
  79:Drivers/CMSIS/Include/core_cm3.h ****   #if defined __TARGET_FPU_VFP
  80:Drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  81:Drivers/CMSIS/Include/core_cm3.h ****   #endif
  82:Drivers/CMSIS/Include/core_cm3.h **** 
  83:Drivers/CMSIS/Include/core_cm3.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  84:Drivers/CMSIS/Include/core_cm3.h ****   #if defined __ARM_PCS_VFP
  85:Drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  86:Drivers/CMSIS/Include/core_cm3.h ****   #endif
  87:Drivers/CMSIS/Include/core_cm3.h **** 
  88:Drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __GNUC__ )
  89:Drivers/CMSIS/Include/core_cm3.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
  90:Drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  91:Drivers/CMSIS/Include/core_cm3.h ****   #endif
  92:Drivers/CMSIS/Include/core_cm3.h **** 
  93:Drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __ICCARM__ )
  94:Drivers/CMSIS/Include/core_cm3.h ****   #if defined __ARMVFP__
  95:Drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  96:Drivers/CMSIS/Include/core_cm3.h ****   #endif
  97:Drivers/CMSIS/Include/core_cm3.h **** 
  98:Drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __TI_ARM__ )
  99:Drivers/CMSIS/Include/core_cm3.h ****   #if defined __TI_VFP_SUPPORT__
 100:Drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 101:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 102:Drivers/CMSIS/Include/core_cm3.h **** 
 103:Drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __TASKING__ )
 104:Drivers/CMSIS/Include/core_cm3.h ****   #if defined __FPU_VFP__
 105:Drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 43


 106:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 107:Drivers/CMSIS/Include/core_cm3.h **** 
 108:Drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __CSMC__ )
 109:Drivers/CMSIS/Include/core_cm3.h ****   #if ( __CSMC__ & 0x400U)
 110:Drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 111:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 112:Drivers/CMSIS/Include/core_cm3.h **** 
 113:Drivers/CMSIS/Include/core_cm3.h **** #endif
 114:Drivers/CMSIS/Include/core_cm3.h **** 
 115:Drivers/CMSIS/Include/core_cm3.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 116:Drivers/CMSIS/Include/core_cm3.h **** 
 117:Drivers/CMSIS/Include/core_cm3.h **** 
 118:Drivers/CMSIS/Include/core_cm3.h **** #ifdef __cplusplus
 119:Drivers/CMSIS/Include/core_cm3.h **** }
 120:Drivers/CMSIS/Include/core_cm3.h **** #endif
 121:Drivers/CMSIS/Include/core_cm3.h **** 
 122:Drivers/CMSIS/Include/core_cm3.h **** #endif /* __CORE_CM3_H_GENERIC */
 123:Drivers/CMSIS/Include/core_cm3.h **** 
 124:Drivers/CMSIS/Include/core_cm3.h **** #ifndef __CMSIS_GENERIC
 125:Drivers/CMSIS/Include/core_cm3.h **** 
 126:Drivers/CMSIS/Include/core_cm3.h **** #ifndef __CORE_CM3_H_DEPENDANT
 127:Drivers/CMSIS/Include/core_cm3.h **** #define __CORE_CM3_H_DEPENDANT
 128:Drivers/CMSIS/Include/core_cm3.h **** 
 129:Drivers/CMSIS/Include/core_cm3.h **** #ifdef __cplusplus
 130:Drivers/CMSIS/Include/core_cm3.h ****  extern "C" {
 131:Drivers/CMSIS/Include/core_cm3.h **** #endif
 132:Drivers/CMSIS/Include/core_cm3.h **** 
 133:Drivers/CMSIS/Include/core_cm3.h **** /* check device defines and use defaults */
 134:Drivers/CMSIS/Include/core_cm3.h **** #if defined __CHECK_DEVICE_DEFINES
 135:Drivers/CMSIS/Include/core_cm3.h ****   #ifndef __CM3_REV
 136:Drivers/CMSIS/Include/core_cm3.h ****     #define __CM3_REV               0x0200U
 137:Drivers/CMSIS/Include/core_cm3.h ****     #warning "__CM3_REV not defined in device header file; using default!"
 138:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 139:Drivers/CMSIS/Include/core_cm3.h **** 
 140:Drivers/CMSIS/Include/core_cm3.h ****   #ifndef __MPU_PRESENT
 141:Drivers/CMSIS/Include/core_cm3.h ****     #define __MPU_PRESENT             0U
 142:Drivers/CMSIS/Include/core_cm3.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 143:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 144:Drivers/CMSIS/Include/core_cm3.h **** 
 145:Drivers/CMSIS/Include/core_cm3.h ****   #ifndef __NVIC_PRIO_BITS
 146:Drivers/CMSIS/Include/core_cm3.h ****     #define __NVIC_PRIO_BITS          3U
 147:Drivers/CMSIS/Include/core_cm3.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 148:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 149:Drivers/CMSIS/Include/core_cm3.h **** 
 150:Drivers/CMSIS/Include/core_cm3.h ****   #ifndef __Vendor_SysTickConfig
 151:Drivers/CMSIS/Include/core_cm3.h ****     #define __Vendor_SysTickConfig    0U
 152:Drivers/CMSIS/Include/core_cm3.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 153:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 154:Drivers/CMSIS/Include/core_cm3.h **** #endif
 155:Drivers/CMSIS/Include/core_cm3.h **** 
 156:Drivers/CMSIS/Include/core_cm3.h **** /* IO definitions (access restrictions to peripheral registers) */
 157:Drivers/CMSIS/Include/core_cm3.h **** /**
 158:Drivers/CMSIS/Include/core_cm3.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 159:Drivers/CMSIS/Include/core_cm3.h **** 
 160:Drivers/CMSIS/Include/core_cm3.h ****     <strong>IO Type Qualifiers</strong> are used
 161:Drivers/CMSIS/Include/core_cm3.h ****     \li to specify the access to peripheral variables.
 162:Drivers/CMSIS/Include/core_cm3.h ****     \li for automatic generation of peripheral register debug information.
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 44


 163:Drivers/CMSIS/Include/core_cm3.h **** */
 164:Drivers/CMSIS/Include/core_cm3.h **** #ifdef __cplusplus
 165:Drivers/CMSIS/Include/core_cm3.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 166:Drivers/CMSIS/Include/core_cm3.h **** #else
 167:Drivers/CMSIS/Include/core_cm3.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 168:Drivers/CMSIS/Include/core_cm3.h **** #endif
 169:Drivers/CMSIS/Include/core_cm3.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 170:Drivers/CMSIS/Include/core_cm3.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 171:Drivers/CMSIS/Include/core_cm3.h **** 
 172:Drivers/CMSIS/Include/core_cm3.h **** /* following defines should be used for structure members */
 173:Drivers/CMSIS/Include/core_cm3.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 174:Drivers/CMSIS/Include/core_cm3.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 175:Drivers/CMSIS/Include/core_cm3.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 176:Drivers/CMSIS/Include/core_cm3.h **** 
 177:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group Cortex_M3 */
 178:Drivers/CMSIS/Include/core_cm3.h **** 
 179:Drivers/CMSIS/Include/core_cm3.h **** 
 180:Drivers/CMSIS/Include/core_cm3.h **** 
 181:Drivers/CMSIS/Include/core_cm3.h **** /*******************************************************************************
 182:Drivers/CMSIS/Include/core_cm3.h ****  *                 Register Abstraction
 183:Drivers/CMSIS/Include/core_cm3.h ****   Core Register contain:
 184:Drivers/CMSIS/Include/core_cm3.h ****   - Core Register
 185:Drivers/CMSIS/Include/core_cm3.h ****   - Core NVIC Register
 186:Drivers/CMSIS/Include/core_cm3.h ****   - Core SCB Register
 187:Drivers/CMSIS/Include/core_cm3.h ****   - Core SysTick Register
 188:Drivers/CMSIS/Include/core_cm3.h ****   - Core Debug Register
 189:Drivers/CMSIS/Include/core_cm3.h ****   - Core MPU Register
 190:Drivers/CMSIS/Include/core_cm3.h ****  ******************************************************************************/
 191:Drivers/CMSIS/Include/core_cm3.h **** /**
 192:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 193:Drivers/CMSIS/Include/core_cm3.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 194:Drivers/CMSIS/Include/core_cm3.h **** */
 195:Drivers/CMSIS/Include/core_cm3.h **** 
 196:Drivers/CMSIS/Include/core_cm3.h **** /**
 197:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup    CMSIS_core_register
 198:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 199:Drivers/CMSIS/Include/core_cm3.h ****   \brief      Core Register type definitions.
 200:Drivers/CMSIS/Include/core_cm3.h ****   @{
 201:Drivers/CMSIS/Include/core_cm3.h ****  */
 202:Drivers/CMSIS/Include/core_cm3.h **** 
 203:Drivers/CMSIS/Include/core_cm3.h **** /**
 204:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 205:Drivers/CMSIS/Include/core_cm3.h ****  */
 206:Drivers/CMSIS/Include/core_cm3.h **** typedef union
 207:Drivers/CMSIS/Include/core_cm3.h **** {
 208:Drivers/CMSIS/Include/core_cm3.h ****   struct
 209:Drivers/CMSIS/Include/core_cm3.h ****   {
 210:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t _reserved0:27;              /*!< bit:  0..26  Reserved */
 211:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 212:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 213:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 214:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 215:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 216:Drivers/CMSIS/Include/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 217:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 218:Drivers/CMSIS/Include/core_cm3.h **** } APSR_Type;
 219:Drivers/CMSIS/Include/core_cm3.h **** 
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 45


 220:Drivers/CMSIS/Include/core_cm3.h **** /* APSR Register Definitions */
 221:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 222:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 223:Drivers/CMSIS/Include/core_cm3.h **** 
 224:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 225:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 226:Drivers/CMSIS/Include/core_cm3.h **** 
 227:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 228:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 229:Drivers/CMSIS/Include/core_cm3.h **** 
 230:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 231:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 232:Drivers/CMSIS/Include/core_cm3.h **** 
 233:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 234:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 235:Drivers/CMSIS/Include/core_cm3.h **** 
 236:Drivers/CMSIS/Include/core_cm3.h **** 
 237:Drivers/CMSIS/Include/core_cm3.h **** /**
 238:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 239:Drivers/CMSIS/Include/core_cm3.h ****  */
 240:Drivers/CMSIS/Include/core_cm3.h **** typedef union
 241:Drivers/CMSIS/Include/core_cm3.h **** {
 242:Drivers/CMSIS/Include/core_cm3.h ****   struct
 243:Drivers/CMSIS/Include/core_cm3.h ****   {
 244:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 245:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 246:Drivers/CMSIS/Include/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 247:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 248:Drivers/CMSIS/Include/core_cm3.h **** } IPSR_Type;
 249:Drivers/CMSIS/Include/core_cm3.h **** 
 250:Drivers/CMSIS/Include/core_cm3.h **** /* IPSR Register Definitions */
 251:Drivers/CMSIS/Include/core_cm3.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 252:Drivers/CMSIS/Include/core_cm3.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 253:Drivers/CMSIS/Include/core_cm3.h **** 
 254:Drivers/CMSIS/Include/core_cm3.h **** 
 255:Drivers/CMSIS/Include/core_cm3.h **** /**
 256:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 257:Drivers/CMSIS/Include/core_cm3.h ****  */
 258:Drivers/CMSIS/Include/core_cm3.h **** typedef union
 259:Drivers/CMSIS/Include/core_cm3.h **** {
 260:Drivers/CMSIS/Include/core_cm3.h ****   struct
 261:Drivers/CMSIS/Include/core_cm3.h ****   {
 262:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 263:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t _reserved0:1;               /*!< bit:      9  Reserved */
 264:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t ICI_IT_1:6;                 /*!< bit: 10..15  ICI/IT part 1 */
 265:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t _reserved1:8;               /*!< bit: 16..23  Reserved */
 266:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit */
 267:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t ICI_IT_2:2;                 /*!< bit: 25..26  ICI/IT part 2 */
 268:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 269:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 270:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 271:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 272:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 273:Drivers/CMSIS/Include/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 274:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 275:Drivers/CMSIS/Include/core_cm3.h **** } xPSR_Type;
 276:Drivers/CMSIS/Include/core_cm3.h **** 
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 46


 277:Drivers/CMSIS/Include/core_cm3.h **** /* xPSR Register Definitions */
 278:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 279:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 280:Drivers/CMSIS/Include/core_cm3.h **** 
 281:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 282:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 283:Drivers/CMSIS/Include/core_cm3.h **** 
 284:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 285:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 286:Drivers/CMSIS/Include/core_cm3.h **** 
 287:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 288:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 289:Drivers/CMSIS/Include/core_cm3.h **** 
 290:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 291:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 292:Drivers/CMSIS/Include/core_cm3.h **** 
 293:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_ICI_IT_2_Pos                  25U                                            /*!< xPSR
 294:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_ICI_IT_2_Msk                  (3UL << xPSR_ICI_IT_2_Pos)                     /*!< xPSR
 295:Drivers/CMSIS/Include/core_cm3.h **** 
 296:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 297:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 298:Drivers/CMSIS/Include/core_cm3.h **** 
 299:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_ICI_IT_1_Pos                  10U                                            /*!< xPSR
 300:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_ICI_IT_1_Msk                  (0x3FUL << xPSR_ICI_IT_1_Pos)                  /*!< xPSR
 301:Drivers/CMSIS/Include/core_cm3.h **** 
 302:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 303:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 304:Drivers/CMSIS/Include/core_cm3.h **** 
 305:Drivers/CMSIS/Include/core_cm3.h **** 
 306:Drivers/CMSIS/Include/core_cm3.h **** /**
 307:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Union type to access the Control Registers (CONTROL).
 308:Drivers/CMSIS/Include/core_cm3.h ****  */
 309:Drivers/CMSIS/Include/core_cm3.h **** typedef union
 310:Drivers/CMSIS/Include/core_cm3.h **** {
 311:Drivers/CMSIS/Include/core_cm3.h ****   struct
 312:Drivers/CMSIS/Include/core_cm3.h ****   {
 313:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 314:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 315:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t _reserved1:30;              /*!< bit:  2..31  Reserved */
 316:Drivers/CMSIS/Include/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 317:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 318:Drivers/CMSIS/Include/core_cm3.h **** } CONTROL_Type;
 319:Drivers/CMSIS/Include/core_cm3.h **** 
 320:Drivers/CMSIS/Include/core_cm3.h **** /* CONTROL Register Definitions */
 321:Drivers/CMSIS/Include/core_cm3.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 322:Drivers/CMSIS/Include/core_cm3.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 323:Drivers/CMSIS/Include/core_cm3.h **** 
 324:Drivers/CMSIS/Include/core_cm3.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 325:Drivers/CMSIS/Include/core_cm3.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 326:Drivers/CMSIS/Include/core_cm3.h **** 
 327:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_CORE */
 328:Drivers/CMSIS/Include/core_cm3.h **** 
 329:Drivers/CMSIS/Include/core_cm3.h **** 
 330:Drivers/CMSIS/Include/core_cm3.h **** /**
 331:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup    CMSIS_core_register
 332:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 333:Drivers/CMSIS/Include/core_cm3.h ****   \brief      Type definitions for the NVIC Registers
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 47


 334:Drivers/CMSIS/Include/core_cm3.h ****   @{
 335:Drivers/CMSIS/Include/core_cm3.h ****  */
 336:Drivers/CMSIS/Include/core_cm3.h **** 
 337:Drivers/CMSIS/Include/core_cm3.h **** /**
 338:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 339:Drivers/CMSIS/Include/core_cm3.h ****  */
 340:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
 341:Drivers/CMSIS/Include/core_cm3.h **** {
 342:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 343:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED0[24U];
 344:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 345:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RSERVED1[24U];
 346:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 347:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED2[24U];
 348:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 349:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED3[24U];
 350:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 351:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED4[56U];
 352:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 353:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED5[644U];
 354:Drivers/CMSIS/Include/core_cm3.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 355:Drivers/CMSIS/Include/core_cm3.h **** }  NVIC_Type;
 356:Drivers/CMSIS/Include/core_cm3.h **** 
 357:Drivers/CMSIS/Include/core_cm3.h **** /* Software Triggered Interrupt Register Definitions */
 358:Drivers/CMSIS/Include/core_cm3.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 359:Drivers/CMSIS/Include/core_cm3.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 360:Drivers/CMSIS/Include/core_cm3.h **** 
 361:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_NVIC */
 362:Drivers/CMSIS/Include/core_cm3.h **** 
 363:Drivers/CMSIS/Include/core_cm3.h **** 
 364:Drivers/CMSIS/Include/core_cm3.h **** /**
 365:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
 366:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 367:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the System Control Block Registers
 368:Drivers/CMSIS/Include/core_cm3.h ****   @{
 369:Drivers/CMSIS/Include/core_cm3.h ****  */
 370:Drivers/CMSIS/Include/core_cm3.h **** 
 371:Drivers/CMSIS/Include/core_cm3.h **** /**
 372:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the System Control Block (SCB).
 373:Drivers/CMSIS/Include/core_cm3.h ****  */
 374:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
 375:Drivers/CMSIS/Include/core_cm3.h **** {
 376:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 377:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 378:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 379:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 380:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 381:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 382:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 383:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 384:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 385:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 386:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 387:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 388:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 389:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 390:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 48


 391:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 392:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 393:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 394:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 395:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED0[5U];
 396:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 397:Drivers/CMSIS/Include/core_cm3.h **** } SCB_Type;
 398:Drivers/CMSIS/Include/core_cm3.h **** 
 399:Drivers/CMSIS/Include/core_cm3.h **** /* SCB CPUID Register Definitions */
 400:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 401:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 402:Drivers/CMSIS/Include/core_cm3.h **** 
 403:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 404:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 405:Drivers/CMSIS/Include/core_cm3.h **** 
 406:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 407:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 408:Drivers/CMSIS/Include/core_cm3.h **** 
 409:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 410:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 411:Drivers/CMSIS/Include/core_cm3.h **** 
 412:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 413:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 414:Drivers/CMSIS/Include/core_cm3.h **** 
 415:Drivers/CMSIS/Include/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 416:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 417:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 418:Drivers/CMSIS/Include/core_cm3.h **** 
 419:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 420:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 421:Drivers/CMSIS/Include/core_cm3.h **** 
 422:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 423:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 424:Drivers/CMSIS/Include/core_cm3.h **** 
 425:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 426:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 427:Drivers/CMSIS/Include/core_cm3.h **** 
 428:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 429:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 430:Drivers/CMSIS/Include/core_cm3.h **** 
 431:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 432:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 433:Drivers/CMSIS/Include/core_cm3.h **** 
 434:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 435:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 436:Drivers/CMSIS/Include/core_cm3.h **** 
 437:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 438:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 439:Drivers/CMSIS/Include/core_cm3.h **** 
 440:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 441:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 442:Drivers/CMSIS/Include/core_cm3.h **** 
 443:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 444:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 445:Drivers/CMSIS/Include/core_cm3.h **** 
 446:Drivers/CMSIS/Include/core_cm3.h **** /* SCB Vector Table Offset Register Definitions */
 447:Drivers/CMSIS/Include/core_cm3.h **** #if defined (__CM3_REV) && (__CM3_REV < 0x0201U)                   /* core r2p1 */
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 49


 448:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLBASE_Pos               29U                                            /*!< SCB 
 449:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLBASE_Msk               (1UL << SCB_VTOR_TBLBASE_Pos)                  /*!< SCB 
 450:Drivers/CMSIS/Include/core_cm3.h **** 
 451:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 452:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x3FFFFFUL << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 453:Drivers/CMSIS/Include/core_cm3.h **** #else
 454:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 455:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 456:Drivers/CMSIS/Include/core_cm3.h **** #endif
 457:Drivers/CMSIS/Include/core_cm3.h **** 
 458:Drivers/CMSIS/Include/core_cm3.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 459:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 460:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 461:Drivers/CMSIS/Include/core_cm3.h **** 
 462:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 463:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 464:Drivers/CMSIS/Include/core_cm3.h **** 
 465:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 466:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 467:Drivers/CMSIS/Include/core_cm3.h **** 
 468:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 469:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 470:Drivers/CMSIS/Include/core_cm3.h **** 
 471:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 472:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 473:Drivers/CMSIS/Include/core_cm3.h **** 
 474:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 475:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 476:Drivers/CMSIS/Include/core_cm3.h **** 
 477:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 478:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 479:Drivers/CMSIS/Include/core_cm3.h **** 
 480:Drivers/CMSIS/Include/core_cm3.h **** /* SCB System Control Register Definitions */
 481:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 482:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 483:Drivers/CMSIS/Include/core_cm3.h **** 
 484:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 485:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 486:Drivers/CMSIS/Include/core_cm3.h **** 
 487:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 488:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 489:Drivers/CMSIS/Include/core_cm3.h **** 
 490:Drivers/CMSIS/Include/core_cm3.h **** /* SCB Configuration Control Register Definitions */
 491:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 492:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 493:Drivers/CMSIS/Include/core_cm3.h **** 
 494:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 495:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 496:Drivers/CMSIS/Include/core_cm3.h **** 
 497:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 498:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 499:Drivers/CMSIS/Include/core_cm3.h **** 
 500:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 501:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 502:Drivers/CMSIS/Include/core_cm3.h **** 
 503:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 504:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 50


 505:Drivers/CMSIS/Include/core_cm3.h **** 
 506:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 507:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 508:Drivers/CMSIS/Include/core_cm3.h **** 
 509:Drivers/CMSIS/Include/core_cm3.h **** /* SCB System Handler Control and State Register Definitions */
 510:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 511:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 512:Drivers/CMSIS/Include/core_cm3.h **** 
 513:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 514:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 515:Drivers/CMSIS/Include/core_cm3.h **** 
 516:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 517:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 518:Drivers/CMSIS/Include/core_cm3.h **** 
 519:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 520:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 521:Drivers/CMSIS/Include/core_cm3.h **** 
 522:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 523:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 524:Drivers/CMSIS/Include/core_cm3.h **** 
 525:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 526:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 527:Drivers/CMSIS/Include/core_cm3.h **** 
 528:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 529:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 530:Drivers/CMSIS/Include/core_cm3.h **** 
 531:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 532:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 533:Drivers/CMSIS/Include/core_cm3.h **** 
 534:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 535:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 536:Drivers/CMSIS/Include/core_cm3.h **** 
 537:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 538:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 539:Drivers/CMSIS/Include/core_cm3.h **** 
 540:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 541:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 542:Drivers/CMSIS/Include/core_cm3.h **** 
 543:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 544:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 545:Drivers/CMSIS/Include/core_cm3.h **** 
 546:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 547:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 548:Drivers/CMSIS/Include/core_cm3.h **** 
 549:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 550:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 551:Drivers/CMSIS/Include/core_cm3.h **** 
 552:Drivers/CMSIS/Include/core_cm3.h **** /* SCB Configurable Fault Status Register Definitions */
 553:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 554:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 555:Drivers/CMSIS/Include/core_cm3.h **** 
 556:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 557:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 558:Drivers/CMSIS/Include/core_cm3.h **** 
 559:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 560:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 561:Drivers/CMSIS/Include/core_cm3.h **** 
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 51


 562:Drivers/CMSIS/Include/core_cm3.h **** /* MemManage Fault Status Register (part of SCB Configurable Fault Status Register) */
 563:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_MMARVALID_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 7U)               /*!< SCB 
 564:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_MMARVALID_Msk             (1UL << SCB_CFSR_MMARVALID_Pos)                /*!< SCB 
 565:Drivers/CMSIS/Include/core_cm3.h **** 
 566:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_MSTKERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 4U)               /*!< SCB 
 567:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_MSTKERR_Msk               (1UL << SCB_CFSR_MSTKERR_Pos)                  /*!< SCB 
 568:Drivers/CMSIS/Include/core_cm3.h **** 
 569:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_MUNSTKERR_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 3U)               /*!< SCB 
 570:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_MUNSTKERR_Msk             (1UL << SCB_CFSR_MUNSTKERR_Pos)                /*!< SCB 
 571:Drivers/CMSIS/Include/core_cm3.h **** 
 572:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_DACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 1U)               /*!< SCB 
 573:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_DACCVIOL_Msk              (1UL << SCB_CFSR_DACCVIOL_Pos)                 /*!< SCB 
 574:Drivers/CMSIS/Include/core_cm3.h **** 
 575:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_IACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 0U)               /*!< SCB 
 576:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_IACCVIOL_Msk              (1UL /*<< SCB_CFSR_IACCVIOL_Pos*/)             /*!< SCB 
 577:Drivers/CMSIS/Include/core_cm3.h **** 
 578:Drivers/CMSIS/Include/core_cm3.h **** /* BusFault Status Register (part of SCB Configurable Fault Status Register) */
 579:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_BFARVALID_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 7U)                  /*!< SCB 
 580:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_BFARVALID_Msk            (1UL << SCB_CFSR_BFARVALID_Pos)                 /*!< SCB 
 581:Drivers/CMSIS/Include/core_cm3.h **** 
 582:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_STKERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 4U)                  /*!< SCB 
 583:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_STKERR_Msk               (1UL << SCB_CFSR_STKERR_Pos)                    /*!< SCB 
 584:Drivers/CMSIS/Include/core_cm3.h **** 
 585:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_UNSTKERR_Pos             (SCB_CFSR_BUSFAULTSR_Pos + 3U)                  /*!< SCB 
 586:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_UNSTKERR_Msk             (1UL << SCB_CFSR_UNSTKERR_Pos)                  /*!< SCB 
 587:Drivers/CMSIS/Include/core_cm3.h **** 
 588:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_IMPRECISERR_Pos          (SCB_CFSR_BUSFAULTSR_Pos + 2U)                  /*!< SCB 
 589:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_IMPRECISERR_Msk          (1UL << SCB_CFSR_IMPRECISERR_Pos)               /*!< SCB 
 590:Drivers/CMSIS/Include/core_cm3.h **** 
 591:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_PRECISERR_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 1U)                  /*!< SCB 
 592:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_PRECISERR_Msk            (1UL << SCB_CFSR_PRECISERR_Pos)                 /*!< SCB 
 593:Drivers/CMSIS/Include/core_cm3.h **** 
 594:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_IBUSERR_Pos              (SCB_CFSR_BUSFAULTSR_Pos + 0U)                  /*!< SCB 
 595:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_IBUSERR_Msk              (1UL << SCB_CFSR_IBUSERR_Pos)                   /*!< SCB 
 596:Drivers/CMSIS/Include/core_cm3.h **** 
 597:Drivers/CMSIS/Include/core_cm3.h **** /* UsageFault Status Register (part of SCB Configurable Fault Status Register) */
 598:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_DIVBYZERO_Pos            (SCB_CFSR_USGFAULTSR_Pos + 9U)                  /*!< SCB 
 599:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_DIVBYZERO_Msk            (1UL << SCB_CFSR_DIVBYZERO_Pos)                 /*!< SCB 
 600:Drivers/CMSIS/Include/core_cm3.h **** 
 601:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_UNALIGNED_Pos            (SCB_CFSR_USGFAULTSR_Pos + 8U)                  /*!< SCB 
 602:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_UNALIGNED_Msk            (1UL << SCB_CFSR_UNALIGNED_Pos)                 /*!< SCB 
 603:Drivers/CMSIS/Include/core_cm3.h **** 
 604:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_NOCP_Pos                 (SCB_CFSR_USGFAULTSR_Pos + 3U)                  /*!< SCB 
 605:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_NOCP_Msk                 (1UL << SCB_CFSR_NOCP_Pos)                      /*!< SCB 
 606:Drivers/CMSIS/Include/core_cm3.h **** 
 607:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_INVPC_Pos                (SCB_CFSR_USGFAULTSR_Pos + 2U)                  /*!< SCB 
 608:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_INVPC_Msk                (1UL << SCB_CFSR_INVPC_Pos)                     /*!< SCB 
 609:Drivers/CMSIS/Include/core_cm3.h **** 
 610:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_INVSTATE_Pos             (SCB_CFSR_USGFAULTSR_Pos + 1U)                  /*!< SCB 
 611:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_INVSTATE_Msk             (1UL << SCB_CFSR_INVSTATE_Pos)                  /*!< SCB 
 612:Drivers/CMSIS/Include/core_cm3.h **** 
 613:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_UNDEFINSTR_Pos           (SCB_CFSR_USGFAULTSR_Pos + 0U)                  /*!< SCB 
 614:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_UNDEFINSTR_Msk           (1UL << SCB_CFSR_UNDEFINSTR_Pos)                /*!< SCB 
 615:Drivers/CMSIS/Include/core_cm3.h **** 
 616:Drivers/CMSIS/Include/core_cm3.h **** /* SCB Hard Fault Status Register Definitions */
 617:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 618:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 52


 619:Drivers/CMSIS/Include/core_cm3.h **** 
 620:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 621:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 622:Drivers/CMSIS/Include/core_cm3.h **** 
 623:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 624:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 625:Drivers/CMSIS/Include/core_cm3.h **** 
 626:Drivers/CMSIS/Include/core_cm3.h **** /* SCB Debug Fault Status Register Definitions */
 627:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 628:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 629:Drivers/CMSIS/Include/core_cm3.h **** 
 630:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 631:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 632:Drivers/CMSIS/Include/core_cm3.h **** 
 633:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 634:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 635:Drivers/CMSIS/Include/core_cm3.h **** 
 636:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 637:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 638:Drivers/CMSIS/Include/core_cm3.h **** 
 639:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 640:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 641:Drivers/CMSIS/Include/core_cm3.h **** 
 642:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_SCB */
 643:Drivers/CMSIS/Include/core_cm3.h **** 
 644:Drivers/CMSIS/Include/core_cm3.h **** 
 645:Drivers/CMSIS/Include/core_cm3.h **** /**
 646:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
 647:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 648:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 649:Drivers/CMSIS/Include/core_cm3.h ****   @{
 650:Drivers/CMSIS/Include/core_cm3.h ****  */
 651:Drivers/CMSIS/Include/core_cm3.h **** 
 652:Drivers/CMSIS/Include/core_cm3.h **** /**
 653:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 654:Drivers/CMSIS/Include/core_cm3.h ****  */
 655:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
 656:Drivers/CMSIS/Include/core_cm3.h **** {
 657:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED0[1U];
 658:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 659:Drivers/CMSIS/Include/core_cm3.h **** #if defined (__CM3_REV) && (__CM3_REV >= 0x200U)
 660:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 661:Drivers/CMSIS/Include/core_cm3.h **** #else
 662:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED1[1U];
 663:Drivers/CMSIS/Include/core_cm3.h **** #endif
 664:Drivers/CMSIS/Include/core_cm3.h **** } SCnSCB_Type;
 665:Drivers/CMSIS/Include/core_cm3.h **** 
 666:Drivers/CMSIS/Include/core_cm3.h **** /* Interrupt Controller Type Register Definitions */
 667:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 668:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 669:Drivers/CMSIS/Include/core_cm3.h **** 
 670:Drivers/CMSIS/Include/core_cm3.h **** /* Auxiliary Control Register Definitions */
 671:Drivers/CMSIS/Include/core_cm3.h **** 
 672:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 673:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 674:Drivers/CMSIS/Include/core_cm3.h **** 
 675:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 53


 676:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 677:Drivers/CMSIS/Include/core_cm3.h **** 
 678:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 679:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 680:Drivers/CMSIS/Include/core_cm3.h **** 
 681:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_SCnotSCB */
 682:Drivers/CMSIS/Include/core_cm3.h **** 
 683:Drivers/CMSIS/Include/core_cm3.h **** 
 684:Drivers/CMSIS/Include/core_cm3.h **** /**
 685:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
 686:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 687:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the System Timer Registers.
 688:Drivers/CMSIS/Include/core_cm3.h ****   @{
 689:Drivers/CMSIS/Include/core_cm3.h ****  */
 690:Drivers/CMSIS/Include/core_cm3.h **** 
 691:Drivers/CMSIS/Include/core_cm3.h **** /**
 692:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the System Timer (SysTick).
 693:Drivers/CMSIS/Include/core_cm3.h ****  */
 694:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
 695:Drivers/CMSIS/Include/core_cm3.h **** {
 696:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 697:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 698:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 699:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 700:Drivers/CMSIS/Include/core_cm3.h **** } SysTick_Type;
 701:Drivers/CMSIS/Include/core_cm3.h **** 
 702:Drivers/CMSIS/Include/core_cm3.h **** /* SysTick Control / Status Register Definitions */
 703:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 704:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 705:Drivers/CMSIS/Include/core_cm3.h **** 
 706:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 707:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 708:Drivers/CMSIS/Include/core_cm3.h **** 
 709:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 710:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 711:Drivers/CMSIS/Include/core_cm3.h **** 
 712:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 713:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 714:Drivers/CMSIS/Include/core_cm3.h **** 
 715:Drivers/CMSIS/Include/core_cm3.h **** /* SysTick Reload Register Definitions */
 716:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 717:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 718:Drivers/CMSIS/Include/core_cm3.h **** 
 719:Drivers/CMSIS/Include/core_cm3.h **** /* SysTick Current Register Definitions */
 720:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 721:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 722:Drivers/CMSIS/Include/core_cm3.h **** 
 723:Drivers/CMSIS/Include/core_cm3.h **** /* SysTick Calibration Register Definitions */
 724:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 725:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 726:Drivers/CMSIS/Include/core_cm3.h **** 
 727:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 728:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 729:Drivers/CMSIS/Include/core_cm3.h **** 
 730:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 731:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 732:Drivers/CMSIS/Include/core_cm3.h **** 
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 54


 733:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_SysTick */
 734:Drivers/CMSIS/Include/core_cm3.h **** 
 735:Drivers/CMSIS/Include/core_cm3.h **** 
 736:Drivers/CMSIS/Include/core_cm3.h **** /**
 737:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
 738:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 739:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 740:Drivers/CMSIS/Include/core_cm3.h ****   @{
 741:Drivers/CMSIS/Include/core_cm3.h ****  */
 742:Drivers/CMSIS/Include/core_cm3.h **** 
 743:Drivers/CMSIS/Include/core_cm3.h **** /**
 744:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 745:Drivers/CMSIS/Include/core_cm3.h ****  */
 746:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
 747:Drivers/CMSIS/Include/core_cm3.h **** {
 748:Drivers/CMSIS/Include/core_cm3.h ****   __OM  union
 749:Drivers/CMSIS/Include/core_cm3.h ****   {
 750:Drivers/CMSIS/Include/core_cm3.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 751:Drivers/CMSIS/Include/core_cm3.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 752:Drivers/CMSIS/Include/core_cm3.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 753:Drivers/CMSIS/Include/core_cm3.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 754:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED0[864U];
 755:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 756:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED1[15U];
 757:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 758:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED2[15U];
 759:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 760:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED3[29U];
 761:Drivers/CMSIS/Include/core_cm3.h ****   __OM  uint32_t IWR;                    /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register *
 762:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t IRR;                    /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register */
 763:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t IMCR;                   /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
 764:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED4[43U];
 765:Drivers/CMSIS/Include/core_cm3.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 766:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 767:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED5[6U];
 768:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 769:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 770:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 771:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 772:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 773:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 774:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 775:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 776:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 777:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 778:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 779:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 780:Drivers/CMSIS/Include/core_cm3.h **** } ITM_Type;
 781:Drivers/CMSIS/Include/core_cm3.h **** 
 782:Drivers/CMSIS/Include/core_cm3.h **** /* ITM Trace Privilege Register Definitions */
 783:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 784:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFFFFFFFFUL /*<< ITM_TPR_PRIVMASK_Pos*/)     /*!< ITM 
 785:Drivers/CMSIS/Include/core_cm3.h **** 
 786:Drivers/CMSIS/Include/core_cm3.h **** /* ITM Trace Control Register Definitions */
 787:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 788:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 789:Drivers/CMSIS/Include/core_cm3.h **** 
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 55


 790:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 791:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 792:Drivers/CMSIS/Include/core_cm3.h **** 
 793:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 794:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 795:Drivers/CMSIS/Include/core_cm3.h **** 
 796:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 797:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 798:Drivers/CMSIS/Include/core_cm3.h **** 
 799:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 800:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 801:Drivers/CMSIS/Include/core_cm3.h **** 
 802:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 803:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 804:Drivers/CMSIS/Include/core_cm3.h **** 
 805:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 806:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 807:Drivers/CMSIS/Include/core_cm3.h **** 
 808:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 809:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 810:Drivers/CMSIS/Include/core_cm3.h **** 
 811:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 812:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 813:Drivers/CMSIS/Include/core_cm3.h **** 
 814:Drivers/CMSIS/Include/core_cm3.h **** /* ITM Integration Write Register Definitions */
 815:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_IWR_ATVALIDM_Pos                0U                                            /*!< ITM 
 816:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL /*<< ITM_IWR_ATVALIDM_Pos*/)              /*!< ITM 
 817:Drivers/CMSIS/Include/core_cm3.h **** 
 818:Drivers/CMSIS/Include/core_cm3.h **** /* ITM Integration Read Register Definitions */
 819:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_IRR_ATREADYM_Pos                0U                                            /*!< ITM 
 820:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_IRR_ATREADYM_Msk               (1UL /*<< ITM_IRR_ATREADYM_Pos*/)              /*!< ITM 
 821:Drivers/CMSIS/Include/core_cm3.h **** 
 822:Drivers/CMSIS/Include/core_cm3.h **** /* ITM Integration Mode Control Register Definitions */
 823:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Pos            0U                                            /*!< ITM 
 824:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/)          /*!< ITM 
 825:Drivers/CMSIS/Include/core_cm3.h **** 
 826:Drivers/CMSIS/Include/core_cm3.h **** /* ITM Lock Status Register Definitions */
 827:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 828:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 829:Drivers/CMSIS/Include/core_cm3.h **** 
 830:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 831:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 832:Drivers/CMSIS/Include/core_cm3.h **** 
 833:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 834:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 835:Drivers/CMSIS/Include/core_cm3.h **** 
 836:Drivers/CMSIS/Include/core_cm3.h **** /*@}*/ /* end of group CMSIS_ITM */
 837:Drivers/CMSIS/Include/core_cm3.h **** 
 838:Drivers/CMSIS/Include/core_cm3.h **** 
 839:Drivers/CMSIS/Include/core_cm3.h **** /**
 840:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
 841:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 842:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 843:Drivers/CMSIS/Include/core_cm3.h ****   @{
 844:Drivers/CMSIS/Include/core_cm3.h ****  */
 845:Drivers/CMSIS/Include/core_cm3.h **** 
 846:Drivers/CMSIS/Include/core_cm3.h **** /**
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 56


 847:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 848:Drivers/CMSIS/Include/core_cm3.h ****  */
 849:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
 850:Drivers/CMSIS/Include/core_cm3.h **** {
 851:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 852:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 853:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 854:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 855:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 856:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 857:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 858:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 859:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 860:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 861:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 862:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED0[1U];
 863:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 864:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 865:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 866:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED1[1U];
 867:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 868:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 869:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 870:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED2[1U];
 871:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 872:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 873:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 874:Drivers/CMSIS/Include/core_cm3.h **** } DWT_Type;
 875:Drivers/CMSIS/Include/core_cm3.h **** 
 876:Drivers/CMSIS/Include/core_cm3.h **** /* DWT Control Register Definitions */
 877:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 878:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 879:Drivers/CMSIS/Include/core_cm3.h **** 
 880:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 881:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 882:Drivers/CMSIS/Include/core_cm3.h **** 
 883:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 884:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 885:Drivers/CMSIS/Include/core_cm3.h **** 
 886:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 887:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 888:Drivers/CMSIS/Include/core_cm3.h **** 
 889:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 890:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 891:Drivers/CMSIS/Include/core_cm3.h **** 
 892:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 893:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 894:Drivers/CMSIS/Include/core_cm3.h **** 
 895:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 896:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 897:Drivers/CMSIS/Include/core_cm3.h **** 
 898:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 899:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 900:Drivers/CMSIS/Include/core_cm3.h **** 
 901:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 902:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 903:Drivers/CMSIS/Include/core_cm3.h **** 
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 57


 904:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 905:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 906:Drivers/CMSIS/Include/core_cm3.h **** 
 907:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 908:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 909:Drivers/CMSIS/Include/core_cm3.h **** 
 910:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 911:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 912:Drivers/CMSIS/Include/core_cm3.h **** 
 913:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 914:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 915:Drivers/CMSIS/Include/core_cm3.h **** 
 916:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 917:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 918:Drivers/CMSIS/Include/core_cm3.h **** 
 919:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 920:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 921:Drivers/CMSIS/Include/core_cm3.h **** 
 922:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 923:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 924:Drivers/CMSIS/Include/core_cm3.h **** 
 925:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 926:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 927:Drivers/CMSIS/Include/core_cm3.h **** 
 928:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 929:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 930:Drivers/CMSIS/Include/core_cm3.h **** 
 931:Drivers/CMSIS/Include/core_cm3.h **** /* DWT CPI Count Register Definitions */
 932:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 933:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 934:Drivers/CMSIS/Include/core_cm3.h **** 
 935:Drivers/CMSIS/Include/core_cm3.h **** /* DWT Exception Overhead Count Register Definitions */
 936:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
 937:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 938:Drivers/CMSIS/Include/core_cm3.h **** 
 939:Drivers/CMSIS/Include/core_cm3.h **** /* DWT Sleep Count Register Definitions */
 940:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
 941:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 942:Drivers/CMSIS/Include/core_cm3.h **** 
 943:Drivers/CMSIS/Include/core_cm3.h **** /* DWT LSU Count Register Definitions */
 944:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
 945:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
 946:Drivers/CMSIS/Include/core_cm3.h **** 
 947:Drivers/CMSIS/Include/core_cm3.h **** /* DWT Folded-instruction Count Register Definitions */
 948:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
 949:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
 950:Drivers/CMSIS/Include/core_cm3.h **** 
 951:Drivers/CMSIS/Include/core_cm3.h **** /* DWT Comparator Mask Register Definitions */
 952:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
 953:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
 954:Drivers/CMSIS/Include/core_cm3.h **** 
 955:Drivers/CMSIS/Include/core_cm3.h **** /* DWT Comparator Function Register Definitions */
 956:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
 957:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
 958:Drivers/CMSIS/Include/core_cm3.h **** 
 959:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
 960:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 58


 961:Drivers/CMSIS/Include/core_cm3.h **** 
 962:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
 963:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
 964:Drivers/CMSIS/Include/core_cm3.h **** 
 965:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
 966:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
 967:Drivers/CMSIS/Include/core_cm3.h **** 
 968:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
 969:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
 970:Drivers/CMSIS/Include/core_cm3.h **** 
 971:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
 972:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
 973:Drivers/CMSIS/Include/core_cm3.h **** 
 974:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
 975:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
 976:Drivers/CMSIS/Include/core_cm3.h **** 
 977:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
 978:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
 979:Drivers/CMSIS/Include/core_cm3.h **** 
 980:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
 981:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
 982:Drivers/CMSIS/Include/core_cm3.h **** 
 983:Drivers/CMSIS/Include/core_cm3.h **** /*@}*/ /* end of group CMSIS_DWT */
 984:Drivers/CMSIS/Include/core_cm3.h **** 
 985:Drivers/CMSIS/Include/core_cm3.h **** 
 986:Drivers/CMSIS/Include/core_cm3.h **** /**
 987:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
 988:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
 989:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
 990:Drivers/CMSIS/Include/core_cm3.h ****   @{
 991:Drivers/CMSIS/Include/core_cm3.h ****  */
 992:Drivers/CMSIS/Include/core_cm3.h **** 
 993:Drivers/CMSIS/Include/core_cm3.h **** /**
 994:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
 995:Drivers/CMSIS/Include/core_cm3.h ****  */
 996:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
 997:Drivers/CMSIS/Include/core_cm3.h **** {
 998:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
 999:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1000:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED0[2U];
1001:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1002:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED1[55U];
1003:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1004:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED2[131U];
1005:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1006:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1007:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1008:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED3[759U];
1009:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER Register */
1010:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1011:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1012:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED4[1U];
1013:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1014:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1015:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1016:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED5[39U];
1017:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 59


1018:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1019:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED7[8U];
1020:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1021:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1022:Drivers/CMSIS/Include/core_cm3.h **** } TPI_Type;
1023:Drivers/CMSIS/Include/core_cm3.h **** 
1024:Drivers/CMSIS/Include/core_cm3.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1025:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1026:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1027:Drivers/CMSIS/Include/core_cm3.h **** 
1028:Drivers/CMSIS/Include/core_cm3.h **** /* TPI Selected Pin Protocol Register Definitions */
1029:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1030:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1031:Drivers/CMSIS/Include/core_cm3.h **** 
1032:Drivers/CMSIS/Include/core_cm3.h **** /* TPI Formatter and Flush Status Register Definitions */
1033:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1034:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1035:Drivers/CMSIS/Include/core_cm3.h **** 
1036:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1037:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1038:Drivers/CMSIS/Include/core_cm3.h **** 
1039:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1040:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1041:Drivers/CMSIS/Include/core_cm3.h **** 
1042:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1043:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1044:Drivers/CMSIS/Include/core_cm3.h **** 
1045:Drivers/CMSIS/Include/core_cm3.h **** /* TPI Formatter and Flush Control Register Definitions */
1046:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1047:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1048:Drivers/CMSIS/Include/core_cm3.h **** 
1049:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1050:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1051:Drivers/CMSIS/Include/core_cm3.h **** 
1052:Drivers/CMSIS/Include/core_cm3.h **** /* TPI TRIGGER Register Definitions */
1053:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1054:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1055:Drivers/CMSIS/Include/core_cm3.h **** 
1056:Drivers/CMSIS/Include/core_cm3.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1057:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1058:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1059:Drivers/CMSIS/Include/core_cm3.h **** 
1060:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1061:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1062:Drivers/CMSIS/Include/core_cm3.h **** 
1063:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1064:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1065:Drivers/CMSIS/Include/core_cm3.h **** 
1066:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1067:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1068:Drivers/CMSIS/Include/core_cm3.h **** 
1069:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1070:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1071:Drivers/CMSIS/Include/core_cm3.h **** 
1072:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1073:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1074:Drivers/CMSIS/Include/core_cm3.h **** 
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 60


1075:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1076:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1077:Drivers/CMSIS/Include/core_cm3.h **** 
1078:Drivers/CMSIS/Include/core_cm3.h **** /* TPI ITATBCTR2 Register Definitions */
1079:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITATBCTR2_ATREADY2_Pos          0U                                         /*!< TPI ITA
1080:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITATBCTR2_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY2_Pos*/)   /*!< TPI ITA
1081:Drivers/CMSIS/Include/core_cm3.h **** 
1082:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITATBCTR2_ATREADY1_Pos          0U                                         /*!< TPI ITA
1083:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITATBCTR2_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY1_Pos*/)   /*!< TPI ITA
1084:Drivers/CMSIS/Include/core_cm3.h **** 
1085:Drivers/CMSIS/Include/core_cm3.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1086:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1087:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1088:Drivers/CMSIS/Include/core_cm3.h **** 
1089:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1090:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1091:Drivers/CMSIS/Include/core_cm3.h **** 
1092:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1093:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1094:Drivers/CMSIS/Include/core_cm3.h **** 
1095:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1096:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1097:Drivers/CMSIS/Include/core_cm3.h **** 
1098:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1099:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1100:Drivers/CMSIS/Include/core_cm3.h **** 
1101:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1102:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1103:Drivers/CMSIS/Include/core_cm3.h **** 
1104:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1105:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1106:Drivers/CMSIS/Include/core_cm3.h **** 
1107:Drivers/CMSIS/Include/core_cm3.h **** /* TPI ITATBCTR0 Register Definitions */
1108:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITATBCTR0_ATREADY2_Pos          0U                                         /*!< TPI ITA
1109:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITATBCTR0_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY2_Pos*/)   /*!< TPI ITA
1110:Drivers/CMSIS/Include/core_cm3.h **** 
1111:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITATBCTR0_ATREADY1_Pos          0U                                         /*!< TPI ITA
1112:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITATBCTR0_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY1_Pos*/)   /*!< TPI ITA
1113:Drivers/CMSIS/Include/core_cm3.h **** 
1114:Drivers/CMSIS/Include/core_cm3.h **** /* TPI Integration Mode Control Register Definitions */
1115:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1116:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITCTRL_Mode_Msk                (0x3UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1117:Drivers/CMSIS/Include/core_cm3.h **** 
1118:Drivers/CMSIS/Include/core_cm3.h **** /* TPI DEVID Register Definitions */
1119:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1120:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1121:Drivers/CMSIS/Include/core_cm3.h **** 
1122:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1123:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1124:Drivers/CMSIS/Include/core_cm3.h **** 
1125:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1126:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1127:Drivers/CMSIS/Include/core_cm3.h **** 
1128:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1129:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1130:Drivers/CMSIS/Include/core_cm3.h **** 
1131:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 61


1132:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1133:Drivers/CMSIS/Include/core_cm3.h **** 
1134:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1135:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1136:Drivers/CMSIS/Include/core_cm3.h **** 
1137:Drivers/CMSIS/Include/core_cm3.h **** /* TPI DEVTYPE Register Definitions */
1138:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVTYPE_SubType_Pos             4U                                         /*!< TPI DEV
1139:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1140:Drivers/CMSIS/Include/core_cm3.h **** 
1141:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVTYPE_MajorType_Pos           0U                                         /*!< TPI DEV
1142:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1143:Drivers/CMSIS/Include/core_cm3.h **** 
1144:Drivers/CMSIS/Include/core_cm3.h **** /*@}*/ /* end of group CMSIS_TPI */
1145:Drivers/CMSIS/Include/core_cm3.h **** 
1146:Drivers/CMSIS/Include/core_cm3.h **** 
1147:Drivers/CMSIS/Include/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1148:Drivers/CMSIS/Include/core_cm3.h **** /**
1149:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
1150:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1151:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1152:Drivers/CMSIS/Include/core_cm3.h ****   @{
1153:Drivers/CMSIS/Include/core_cm3.h ****  */
1154:Drivers/CMSIS/Include/core_cm3.h **** 
1155:Drivers/CMSIS/Include/core_cm3.h **** /**
1156:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1157:Drivers/CMSIS/Include/core_cm3.h ****  */
1158:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
1159:Drivers/CMSIS/Include/core_cm3.h **** {
1160:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1161:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1162:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1163:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1164:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1165:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1166:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1167:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1168:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1169:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1170:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1171:Drivers/CMSIS/Include/core_cm3.h **** } MPU_Type;
1172:Drivers/CMSIS/Include/core_cm3.h **** 
1173:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_RALIASES                  4U
1174:Drivers/CMSIS/Include/core_cm3.h **** 
1175:Drivers/CMSIS/Include/core_cm3.h **** /* MPU Type Register Definitions */
1176:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1177:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1178:Drivers/CMSIS/Include/core_cm3.h **** 
1179:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1180:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1181:Drivers/CMSIS/Include/core_cm3.h **** 
1182:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1183:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1184:Drivers/CMSIS/Include/core_cm3.h **** 
1185:Drivers/CMSIS/Include/core_cm3.h **** /* MPU Control Register Definitions */
1186:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1187:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1188:Drivers/CMSIS/Include/core_cm3.h **** 
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 62


1189:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1190:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1191:Drivers/CMSIS/Include/core_cm3.h **** 
1192:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1193:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1194:Drivers/CMSIS/Include/core_cm3.h **** 
1195:Drivers/CMSIS/Include/core_cm3.h **** /* MPU Region Number Register Definitions */
1196:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1197:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1198:Drivers/CMSIS/Include/core_cm3.h **** 
1199:Drivers/CMSIS/Include/core_cm3.h **** /* MPU Region Base Address Register Definitions */
1200:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1201:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1202:Drivers/CMSIS/Include/core_cm3.h **** 
1203:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1204:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1205:Drivers/CMSIS/Include/core_cm3.h **** 
1206:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1207:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1208:Drivers/CMSIS/Include/core_cm3.h **** 
1209:Drivers/CMSIS/Include/core_cm3.h **** /* MPU Region Attribute and Size Register Definitions */
1210:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1211:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1212:Drivers/CMSIS/Include/core_cm3.h **** 
1213:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1214:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1215:Drivers/CMSIS/Include/core_cm3.h **** 
1216:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1217:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1218:Drivers/CMSIS/Include/core_cm3.h **** 
1219:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1220:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1221:Drivers/CMSIS/Include/core_cm3.h **** 
1222:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1223:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1224:Drivers/CMSIS/Include/core_cm3.h **** 
1225:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1226:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1227:Drivers/CMSIS/Include/core_cm3.h **** 
1228:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1229:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1230:Drivers/CMSIS/Include/core_cm3.h **** 
1231:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1232:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1233:Drivers/CMSIS/Include/core_cm3.h **** 
1234:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1235:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1236:Drivers/CMSIS/Include/core_cm3.h **** 
1237:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1238:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1239:Drivers/CMSIS/Include/core_cm3.h **** 
1240:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_MPU */
1241:Drivers/CMSIS/Include/core_cm3.h **** #endif
1242:Drivers/CMSIS/Include/core_cm3.h **** 
1243:Drivers/CMSIS/Include/core_cm3.h **** 
1244:Drivers/CMSIS/Include/core_cm3.h **** /**
1245:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 63


1246:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1247:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the Core Debug Registers
1248:Drivers/CMSIS/Include/core_cm3.h ****   @{
1249:Drivers/CMSIS/Include/core_cm3.h ****  */
1250:Drivers/CMSIS/Include/core_cm3.h **** 
1251:Drivers/CMSIS/Include/core_cm3.h **** /**
1252:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1253:Drivers/CMSIS/Include/core_cm3.h ****  */
1254:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
1255:Drivers/CMSIS/Include/core_cm3.h **** {
1256:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1257:Drivers/CMSIS/Include/core_cm3.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1258:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1259:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1260:Drivers/CMSIS/Include/core_cm3.h **** } CoreDebug_Type;
1261:Drivers/CMSIS/Include/core_cm3.h **** 
1262:Drivers/CMSIS/Include/core_cm3.h **** /* Debug Halting Control and Status Register Definitions */
1263:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1264:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1265:Drivers/CMSIS/Include/core_cm3.h **** 
1266:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1267:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1268:Drivers/CMSIS/Include/core_cm3.h **** 
1269:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1270:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1271:Drivers/CMSIS/Include/core_cm3.h **** 
1272:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1273:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1274:Drivers/CMSIS/Include/core_cm3.h **** 
1275:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1276:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1277:Drivers/CMSIS/Include/core_cm3.h **** 
1278:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1279:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1280:Drivers/CMSIS/Include/core_cm3.h **** 
1281:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1282:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1283:Drivers/CMSIS/Include/core_cm3.h **** 
1284:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1285:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1286:Drivers/CMSIS/Include/core_cm3.h **** 
1287:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1288:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1289:Drivers/CMSIS/Include/core_cm3.h **** 
1290:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1291:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1292:Drivers/CMSIS/Include/core_cm3.h **** 
1293:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1294:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1295:Drivers/CMSIS/Include/core_cm3.h **** 
1296:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1297:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1298:Drivers/CMSIS/Include/core_cm3.h **** 
1299:Drivers/CMSIS/Include/core_cm3.h **** /* Debug Core Register Selector Register Definitions */
1300:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1301:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1302:Drivers/CMSIS/Include/core_cm3.h **** 
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 64


1303:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1304:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1305:Drivers/CMSIS/Include/core_cm3.h **** 
1306:Drivers/CMSIS/Include/core_cm3.h **** /* Debug Exception and Monitor Control Register Definitions */
1307:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1308:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1309:Drivers/CMSIS/Include/core_cm3.h **** 
1310:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1311:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1312:Drivers/CMSIS/Include/core_cm3.h **** 
1313:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1314:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1315:Drivers/CMSIS/Include/core_cm3.h **** 
1316:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1317:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1318:Drivers/CMSIS/Include/core_cm3.h **** 
1319:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1320:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1321:Drivers/CMSIS/Include/core_cm3.h **** 
1322:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1323:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1324:Drivers/CMSIS/Include/core_cm3.h **** 
1325:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1326:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1327:Drivers/CMSIS/Include/core_cm3.h **** 
1328:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1329:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1330:Drivers/CMSIS/Include/core_cm3.h **** 
1331:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1332:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1333:Drivers/CMSIS/Include/core_cm3.h **** 
1334:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1335:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1336:Drivers/CMSIS/Include/core_cm3.h **** 
1337:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1338:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1339:Drivers/CMSIS/Include/core_cm3.h **** 
1340:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1341:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1342:Drivers/CMSIS/Include/core_cm3.h **** 
1343:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1344:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1345:Drivers/CMSIS/Include/core_cm3.h **** 
1346:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_CoreDebug */
1347:Drivers/CMSIS/Include/core_cm3.h **** 
1348:Drivers/CMSIS/Include/core_cm3.h **** 
1349:Drivers/CMSIS/Include/core_cm3.h **** /**
1350:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup    CMSIS_core_register
1351:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1352:Drivers/CMSIS/Include/core_cm3.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1353:Drivers/CMSIS/Include/core_cm3.h ****   @{
1354:Drivers/CMSIS/Include/core_cm3.h ****  */
1355:Drivers/CMSIS/Include/core_cm3.h **** 
1356:Drivers/CMSIS/Include/core_cm3.h **** /**
1357:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1358:Drivers/CMSIS/Include/core_cm3.h ****   \param[in] field  Name of the register bit field.
1359:Drivers/CMSIS/Include/core_cm3.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 65


1360:Drivers/CMSIS/Include/core_cm3.h ****   \return           Masked and shifted value.
1361:Drivers/CMSIS/Include/core_cm3.h **** */
1362:Drivers/CMSIS/Include/core_cm3.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
1363:Drivers/CMSIS/Include/core_cm3.h **** 
1364:Drivers/CMSIS/Include/core_cm3.h **** /**
1365:Drivers/CMSIS/Include/core_cm3.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1366:Drivers/CMSIS/Include/core_cm3.h ****   \param[in] field  Name of the register bit field.
1367:Drivers/CMSIS/Include/core_cm3.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1368:Drivers/CMSIS/Include/core_cm3.h ****   \return           Masked and shifted bit field value.
1369:Drivers/CMSIS/Include/core_cm3.h **** */
1370:Drivers/CMSIS/Include/core_cm3.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
1371:Drivers/CMSIS/Include/core_cm3.h **** 
1372:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_core_bitfield */
1373:Drivers/CMSIS/Include/core_cm3.h **** 
1374:Drivers/CMSIS/Include/core_cm3.h **** 
1375:Drivers/CMSIS/Include/core_cm3.h **** /**
1376:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup    CMSIS_core_register
1377:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup   CMSIS_core_base     Core Definitions
1378:Drivers/CMSIS/Include/core_cm3.h ****   \brief      Definitions for base addresses, unions, and structures.
1379:Drivers/CMSIS/Include/core_cm3.h ****   @{
1380:Drivers/CMSIS/Include/core_cm3.h ****  */
1381:Drivers/CMSIS/Include/core_cm3.h **** 
1382:Drivers/CMSIS/Include/core_cm3.h **** /* Memory mapping of Core Hardware */
1383:Drivers/CMSIS/Include/core_cm3.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1384:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1385:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1386:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1387:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1388:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1389:Drivers/CMSIS/Include/core_cm3.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1390:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1391:Drivers/CMSIS/Include/core_cm3.h **** 
1392:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1393:Drivers/CMSIS/Include/core_cm3.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1394:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1395:Drivers/CMSIS/Include/core_cm3.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1396:Drivers/CMSIS/Include/core_cm3.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1397:Drivers/CMSIS/Include/core_cm3.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1398:Drivers/CMSIS/Include/core_cm3.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1399:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1400:Drivers/CMSIS/Include/core_cm3.h **** 
1401:Drivers/CMSIS/Include/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1402:Drivers/CMSIS/Include/core_cm3.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1403:Drivers/CMSIS/Include/core_cm3.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1404:Drivers/CMSIS/Include/core_cm3.h **** #endif
1405:Drivers/CMSIS/Include/core_cm3.h **** 
1406:Drivers/CMSIS/Include/core_cm3.h **** /*@} */
1407:Drivers/CMSIS/Include/core_cm3.h **** 
1408:Drivers/CMSIS/Include/core_cm3.h **** 
1409:Drivers/CMSIS/Include/core_cm3.h **** 
1410:Drivers/CMSIS/Include/core_cm3.h **** /*******************************************************************************
1411:Drivers/CMSIS/Include/core_cm3.h ****  *                Hardware Abstraction Layer
1412:Drivers/CMSIS/Include/core_cm3.h ****   Core Function Interface contains:
1413:Drivers/CMSIS/Include/core_cm3.h ****   - Core NVIC Functions
1414:Drivers/CMSIS/Include/core_cm3.h ****   - Core SysTick Functions
1415:Drivers/CMSIS/Include/core_cm3.h ****   - Core Debug Functions
1416:Drivers/CMSIS/Include/core_cm3.h ****   - Core Register Access Functions
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 66


1417:Drivers/CMSIS/Include/core_cm3.h ****  ******************************************************************************/
1418:Drivers/CMSIS/Include/core_cm3.h **** /**
1419:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1420:Drivers/CMSIS/Include/core_cm3.h **** */
1421:Drivers/CMSIS/Include/core_cm3.h **** 
1422:Drivers/CMSIS/Include/core_cm3.h **** 
1423:Drivers/CMSIS/Include/core_cm3.h **** 
1424:Drivers/CMSIS/Include/core_cm3.h **** /* ##########################   NVIC functions  #################################### */
1425:Drivers/CMSIS/Include/core_cm3.h **** /**
1426:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_Core_FunctionInterface
1427:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1428:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1429:Drivers/CMSIS/Include/core_cm3.h ****   @{
1430:Drivers/CMSIS/Include/core_cm3.h ****  */
1431:Drivers/CMSIS/Include/core_cm3.h **** 
1432:Drivers/CMSIS/Include/core_cm3.h **** #ifdef CMSIS_NVIC_VIRTUAL
1433:Drivers/CMSIS/Include/core_cm3.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
1434:Drivers/CMSIS/Include/core_cm3.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
1435:Drivers/CMSIS/Include/core_cm3.h ****   #endif
1436:Drivers/CMSIS/Include/core_cm3.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
1437:Drivers/CMSIS/Include/core_cm3.h **** #else
1438:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
1439:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
1440:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
1441:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
1442:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
1443:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
1444:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
1445:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
1446:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_GetActive              __NVIC_GetActive
1447:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
1448:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
1449:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
1450:Drivers/CMSIS/Include/core_cm3.h **** #endif /* CMSIS_NVIC_VIRTUAL */
1451:Drivers/CMSIS/Include/core_cm3.h **** 
1452:Drivers/CMSIS/Include/core_cm3.h **** #ifdef CMSIS_VECTAB_VIRTUAL
1453:Drivers/CMSIS/Include/core_cm3.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1454:Drivers/CMSIS/Include/core_cm3.h ****    #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
1455:Drivers/CMSIS/Include/core_cm3.h ****   #endif
1456:Drivers/CMSIS/Include/core_cm3.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1457:Drivers/CMSIS/Include/core_cm3.h **** #else
1458:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_SetVector              __NVIC_SetVector
1459:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_GetVector              __NVIC_GetVector
1460:Drivers/CMSIS/Include/core_cm3.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
1461:Drivers/CMSIS/Include/core_cm3.h **** 
1462:Drivers/CMSIS/Include/core_cm3.h **** #define NVIC_USER_IRQ_OFFSET          16
1463:Drivers/CMSIS/Include/core_cm3.h **** 
1464:Drivers/CMSIS/Include/core_cm3.h **** 
1465:Drivers/CMSIS/Include/core_cm3.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
1466:Drivers/CMSIS/Include/core_cm3.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
1467:Drivers/CMSIS/Include/core_cm3.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
1468:Drivers/CMSIS/Include/core_cm3.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
1469:Drivers/CMSIS/Include/core_cm3.h **** 
1470:Drivers/CMSIS/Include/core_cm3.h **** 
1471:Drivers/CMSIS/Include/core_cm3.h **** /**
1472:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Set Priority Grouping
1473:Drivers/CMSIS/Include/core_cm3.h ****   \details Sets the priority grouping field using the required unlock sequence.
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 67


1474:Drivers/CMSIS/Include/core_cm3.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1475:Drivers/CMSIS/Include/core_cm3.h ****            Only values from 0..7 are used.
1476:Drivers/CMSIS/Include/core_cm3.h ****            In case of a conflict between priority grouping and available
1477:Drivers/CMSIS/Include/core_cm3.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1478:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      PriorityGroup  Priority grouping field.
1479:Drivers/CMSIS/Include/core_cm3.h ****  */
1480:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1481:Drivers/CMSIS/Include/core_cm3.h **** {
1482:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t reg_value;
1483:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1484:Drivers/CMSIS/Include/core_cm3.h **** 
1485:Drivers/CMSIS/Include/core_cm3.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1486:Drivers/CMSIS/Include/core_cm3.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1487:Drivers/CMSIS/Include/core_cm3.h ****   reg_value  =  (reg_value                                   |
1488:Drivers/CMSIS/Include/core_cm3.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1489:Drivers/CMSIS/Include/core_cm3.h ****                 (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos) );               /* Insert write key a
1490:Drivers/CMSIS/Include/core_cm3.h ****   SCB->AIRCR =  reg_value;
1491:Drivers/CMSIS/Include/core_cm3.h **** }
1492:Drivers/CMSIS/Include/core_cm3.h **** 
1493:Drivers/CMSIS/Include/core_cm3.h **** 
1494:Drivers/CMSIS/Include/core_cm3.h **** /**
1495:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Get Priority Grouping
1496:Drivers/CMSIS/Include/core_cm3.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1497:Drivers/CMSIS/Include/core_cm3.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1498:Drivers/CMSIS/Include/core_cm3.h ****  */
1499:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
1500:Drivers/CMSIS/Include/core_cm3.h **** {
1501:Drivers/CMSIS/Include/core_cm3.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1502:Drivers/CMSIS/Include/core_cm3.h **** }
1503:Drivers/CMSIS/Include/core_cm3.h **** 
1504:Drivers/CMSIS/Include/core_cm3.h **** 
1505:Drivers/CMSIS/Include/core_cm3.h **** /**
1506:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Enable Interrupt
1507:Drivers/CMSIS/Include/core_cm3.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
1508:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  Device specific interrupt number.
1509:Drivers/CMSIS/Include/core_cm3.h ****   \note    IRQn must not be negative.
1510:Drivers/CMSIS/Include/core_cm3.h ****  */
1511:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
1512:Drivers/CMSIS/Include/core_cm3.h **** {
1513:Drivers/CMSIS/Include/core_cm3.h ****   if ((int32_t)(IRQn) >= 0)
1514:Drivers/CMSIS/Include/core_cm3.h ****   {
1515:Drivers/CMSIS/Include/core_cm3.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1516:Drivers/CMSIS/Include/core_cm3.h ****   }
1517:Drivers/CMSIS/Include/core_cm3.h **** }
1518:Drivers/CMSIS/Include/core_cm3.h **** 
1519:Drivers/CMSIS/Include/core_cm3.h **** 
1520:Drivers/CMSIS/Include/core_cm3.h **** /**
1521:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Get Interrupt Enable status
1522:Drivers/CMSIS/Include/core_cm3.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
1523:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  Device specific interrupt number.
1524:Drivers/CMSIS/Include/core_cm3.h ****   \return             0  Interrupt is not enabled.
1525:Drivers/CMSIS/Include/core_cm3.h ****   \return             1  Interrupt is enabled.
1526:Drivers/CMSIS/Include/core_cm3.h ****   \note    IRQn must not be negative.
1527:Drivers/CMSIS/Include/core_cm3.h ****  */
1528:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
1529:Drivers/CMSIS/Include/core_cm3.h **** {
1530:Drivers/CMSIS/Include/core_cm3.h ****   if ((int32_t)(IRQn) >= 0)
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 68


1531:Drivers/CMSIS/Include/core_cm3.h ****   {
1532:Drivers/CMSIS/Include/core_cm3.h ****     return((uint32_t)(((NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1533:Drivers/CMSIS/Include/core_cm3.h ****   }
1534:Drivers/CMSIS/Include/core_cm3.h ****   else
1535:Drivers/CMSIS/Include/core_cm3.h ****   {
1536:Drivers/CMSIS/Include/core_cm3.h ****     return(0U);
1537:Drivers/CMSIS/Include/core_cm3.h ****   }
1538:Drivers/CMSIS/Include/core_cm3.h **** }
1539:Drivers/CMSIS/Include/core_cm3.h **** 
1540:Drivers/CMSIS/Include/core_cm3.h **** 
1541:Drivers/CMSIS/Include/core_cm3.h **** /**
1542:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Disable Interrupt
1543:Drivers/CMSIS/Include/core_cm3.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
1544:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  Device specific interrupt number.
1545:Drivers/CMSIS/Include/core_cm3.h ****   \note    IRQn must not be negative.
1546:Drivers/CMSIS/Include/core_cm3.h ****  */
1547:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
1548:Drivers/CMSIS/Include/core_cm3.h **** {
1549:Drivers/CMSIS/Include/core_cm3.h ****   if ((int32_t)(IRQn) >= 0)
1550:Drivers/CMSIS/Include/core_cm3.h ****   {
1551:Drivers/CMSIS/Include/core_cm3.h ****     NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1552:Drivers/CMSIS/Include/core_cm3.h ****     __DSB();
1553:Drivers/CMSIS/Include/core_cm3.h ****     __ISB();
1554:Drivers/CMSIS/Include/core_cm3.h ****   }
1555:Drivers/CMSIS/Include/core_cm3.h **** }
1556:Drivers/CMSIS/Include/core_cm3.h **** 
1557:Drivers/CMSIS/Include/core_cm3.h **** 
1558:Drivers/CMSIS/Include/core_cm3.h **** /**
1559:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Get Pending Interrupt
1560:Drivers/CMSIS/Include/core_cm3.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
1561:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  Device specific interrupt number.
1562:Drivers/CMSIS/Include/core_cm3.h ****   \return             0  Interrupt status is not pending.
1563:Drivers/CMSIS/Include/core_cm3.h ****   \return             1  Interrupt status is pending.
1564:Drivers/CMSIS/Include/core_cm3.h ****   \note    IRQn must not be negative.
1565:Drivers/CMSIS/Include/core_cm3.h ****  */
1566:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
1567:Drivers/CMSIS/Include/core_cm3.h **** {
1568:Drivers/CMSIS/Include/core_cm3.h ****   if ((int32_t)(IRQn) >= 0)
1569:Drivers/CMSIS/Include/core_cm3.h ****   {
1570:Drivers/CMSIS/Include/core_cm3.h ****     return((uint32_t)(((NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1571:Drivers/CMSIS/Include/core_cm3.h ****   }
1572:Drivers/CMSIS/Include/core_cm3.h ****   else
1573:Drivers/CMSIS/Include/core_cm3.h ****   {
1574:Drivers/CMSIS/Include/core_cm3.h ****     return(0U);
1575:Drivers/CMSIS/Include/core_cm3.h ****   }
1576:Drivers/CMSIS/Include/core_cm3.h **** }
1577:Drivers/CMSIS/Include/core_cm3.h **** 
1578:Drivers/CMSIS/Include/core_cm3.h **** 
1579:Drivers/CMSIS/Include/core_cm3.h **** /**
1580:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Set Pending Interrupt
1581:Drivers/CMSIS/Include/core_cm3.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
1582:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  Device specific interrupt number.
1583:Drivers/CMSIS/Include/core_cm3.h ****   \note    IRQn must not be negative.
1584:Drivers/CMSIS/Include/core_cm3.h ****  */
1585:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
1586:Drivers/CMSIS/Include/core_cm3.h **** {
1587:Drivers/CMSIS/Include/core_cm3.h ****   if ((int32_t)(IRQn) >= 0)
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 69


1588:Drivers/CMSIS/Include/core_cm3.h ****   {
1589:Drivers/CMSIS/Include/core_cm3.h ****     NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1590:Drivers/CMSIS/Include/core_cm3.h ****   }
1591:Drivers/CMSIS/Include/core_cm3.h **** }
1592:Drivers/CMSIS/Include/core_cm3.h **** 
1593:Drivers/CMSIS/Include/core_cm3.h **** 
1594:Drivers/CMSIS/Include/core_cm3.h **** /**
1595:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Clear Pending Interrupt
1596:Drivers/CMSIS/Include/core_cm3.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
1597:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  Device specific interrupt number.
1598:Drivers/CMSIS/Include/core_cm3.h ****   \note    IRQn must not be negative.
1599:Drivers/CMSIS/Include/core_cm3.h ****  */
1600:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
 883              		.loc 3 1600 22 view .LVU171
 884              	.LBB131:
1601:Drivers/CMSIS/Include/core_cm3.h **** {
1602:Drivers/CMSIS/Include/core_cm3.h ****   if ((int32_t)(IRQn) >= 0)
 885              		.loc 3 1602 3 view .LVU172
1603:Drivers/CMSIS/Include/core_cm3.h ****   {
1604:Drivers/CMSIS/Include/core_cm3.h ****     NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 886              		.loc 3 1604 5 view .LVU173
 887              		.loc 3 1604 43 is_stmt 0 view .LVU174
 888 0002 214B     		ldr	r3, .L67+8
 889 0004 4FF40062 		mov	r2, #2048
 890 0008 C3F88421 		str	r2, [r3, #388]
 891              	.LVL60:
 892              		.loc 3 1604 43 view .LVU175
 893              	.LBE131:
 894              	.LBE130:
  36:user/src/timers.c ****   LL_RCC_GetSystemClocksFreq(&clocks);
 895              		.loc 1 36 3 is_stmt 1 view .LVU176
 896 000c 1F4C     		ldr	r4, .L67+12
 897 000e 2046     		mov	r0, r4
 898 0010 FFF7FEFF 		bl	LL_RCC_GetSystemClocksFreq
 899              	.LVL61:
  37:user/src/timers.c ****   uint32_t prescaller = US_DELAY_TIMER_TICK * clocks.PCLK1_Frequency / 1e6 - 1;
 900              		.loc 1 37 3 view .LVU177
  37:user/src/timers.c ****   uint32_t prescaller = US_DELAY_TIMER_TICK * clocks.PCLK1_Frequency / 1e6 - 1;
 901              		.loc 1 37 70 is_stmt 0 view .LVU178
 902 0014 A068     		ldr	r0, [r4, #8]
 903 0016 FFF7FEFF 		bl	__aeabi_ui2d
 904              	.LVL62:
 905 001a 19A3     		adr	r3, .L67
 906 001c D3E90023 		ldrd	r2, [r3]
 907 0020 FFF7FEFF 		bl	__aeabi_ddiv
 908              	.LVL63:
  37:user/src/timers.c ****   uint32_t prescaller = US_DELAY_TIMER_TICK * clocks.PCLK1_Frequency / 1e6 - 1;
 909              		.loc 1 37 76 view .LVU179
 910 0024 0022     		movs	r2, #0
 911 0026 1A4B     		ldr	r3, .L67+16
 912 0028 FFF7FEFF 		bl	__aeabi_dsub
 913              	.LVL64:
  37:user/src/timers.c ****   uint32_t prescaller = US_DELAY_TIMER_TICK * clocks.PCLK1_Frequency / 1e6 - 1;
 914              		.loc 1 37 12 view .LVU180
 915 002c FFF7FEFF 		bl	__aeabi_d2uiz
 916              	.LVL65:
 917 0030 0546     		mov	r5, r0
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 70


 918              	.LVL66:
  38:user/src/timers.c ****   assert_param(prescaller < 65535);
 919              		.loc 1 38 3 is_stmt 1 view .LVU181
 920 0032 4FF6FE73 		movw	r3, #65534
 921 0036 9842     		cmp	r0, r3
 922 0038 1DD8     		bhi	.L66
 923              	.LVL67:
 924              	.L64:
  39:user/src/timers.c ****   LL_TIM_SetPrescaler(US_DELAY_TIMER, prescaller);
 925              		.loc 1 39 3 view .LVU182
 926              	.LBB132:
 927              	.LBI132:
1126:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1127:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1128:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1129:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Get the current direction of the counter
1130:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR1          DIR           LL_TIM_GetDirection
1131:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1132:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1133:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERDIRECTION_UP
1134:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERDIRECTION_DOWN
1135:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1136:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetDirection(TIM_TypeDef *TIMx)
1137:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1138:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_DIR));
1139:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1140:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1141:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1142:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Set the prescaler value.
1143:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note The counter clock frequency CK_CNT is equal to fCK_PSC / (PSC[15:0] + 1).
1144:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note The prescaler can be changed on the fly as this control register is buffered. The new
1145:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       prescaler ratio is taken into account at the next update event.
1146:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Helper macro @ref __LL_TIM_CALC_PSC can be used to calculate the Prescaler parameter
1147:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll PSC          PSC           LL_TIM_SetPrescaler
1148:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1149:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Prescaler between Min_Data=0 and Max_Data=65535
1150:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1151:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1152:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetPrescaler(TIM_TypeDef *TIMx, uint32_t Prescaler)
 928              		.loc 2 1152 22 view .LVU183
 929              	.LBB133:
1153:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1154:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   WRITE_REG(TIMx->PSC, Prescaler);
 930              		.loc 2 1154 3 view .LVU184
 931 003a 164C     		ldr	r4, .L67+20
 932 003c A562     		str	r5, [r4, #40]
 933              	.LVL68:
 934              		.loc 2 1154 3 is_stmt 0 view .LVU185
 935              	.LBE133:
 936              	.LBE132:
  41:user/src/timers.c ****   LL_TIM_SetAutoReload(US_DELAY_TIMER, 65535);
 937              		.loc 1 41 3 is_stmt 1 view .LVU186
 938              	.LBB134:
 939              	.LBI134:
1155:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1156:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1157:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 71


1158:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Get the prescaler value.
1159:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll PSC          PSC           LL_TIM_GetPrescaler
1160:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1161:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval  Prescaler value between Min_Data=0 and Max_Data=65535
1162:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1163:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetPrescaler(TIM_TypeDef *TIMx)
1164:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1165:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->PSC));
1166:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1167:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1168:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1169:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Set the auto-reload value.
1170:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note The counter is blocked while the auto-reload value is null.
1171:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
1172:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
1173:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Helper macro @ref __LL_TIM_CALC_ARR can be used to calculate the AutoReload parameter
1174:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll ARR          ARR           LL_TIM_SetAutoReload
1175:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1176:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  AutoReload between Min_Data=0 and Max_Data=65535
1177:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1178:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1179:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetAutoReload(TIM_TypeDef *TIMx, uint32_t AutoReload)
 940              		.loc 2 1179 22 view .LVU187
 941              	.LBB135:
1180:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1181:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   WRITE_REG(TIMx->ARR, AutoReload);
 942              		.loc 2 1181 3 view .LVU188
 943 003e 4FF6FF73 		movw	r3, #65535
 944 0042 E362     		str	r3, [r4, #44]
 945              	.LVL69:
 946              		.loc 2 1181 3 is_stmt 0 view .LVU189
 947              	.LBE135:
 948              	.LBE134:
  42:user/src/timers.c ****   LL_TIM_ClearFlag_UPDATE(US_DELAY_TIMER);
 949              		.loc 1 42 3 is_stmt 1 view .LVU190
 950              	.LBB136:
 951              	.LBI136:
1182:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1183:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1184:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1185:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Get the auto-reload value.
1186:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll ARR          ARR           LL_TIM_GetAutoReload
1187:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
1188:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
1189:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1190:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval Auto-reload value
1191:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1192:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetAutoReload(TIM_TypeDef *TIMx)
1193:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1194:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->ARR));
1195:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1196:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1197:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1198:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
1199:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1200:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1201:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Capture_Compare Capture Compare configuration
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 72


1202:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
1203:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1204:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1205:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Set the trigger of the capture/compare DMA request.
1206:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR2          CCDS          LL_TIM_CC_SetDMAReqTrigger
1207:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1208:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  DMAReqTrigger This parameter can be one of the following values:
1209:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCDMAREQUEST_CC
1210:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCDMAREQUEST_UPDATE
1211:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1212:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1213:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_SetDMAReqTrigger(TIM_TypeDef *TIMx, uint32_t DMAReqTrigger)
1214:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1215:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   MODIFY_REG(TIMx->CR2, TIM_CR2_CCDS, DMAReqTrigger);
1216:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1217:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1218:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1219:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Get actual trigger of the capture/compare DMA request.
1220:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR2          CCDS          LL_TIM_CC_GetDMAReqTrigger
1221:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1222:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1223:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCDMAREQUEST_CC
1224:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCDMAREQUEST_UPDATE
1225:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1226:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_CC_GetDMAReqTrigger(TIM_TypeDef *TIMx)
1227:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1228:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR2, TIM_CR2_CCDS));
1229:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1230:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1231:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1232:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Enable capture/compare channels.
1233:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCER         CC1E          LL_TIM_CC_EnableChannel\n
1234:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC2E          LL_TIM_CC_EnableChannel\n
1235:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC3E          LL_TIM_CC_EnableChannel\n
1236:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC4E          LL_TIM_CC_EnableChannel
1237:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1238:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channels This parameter can be a combination of the following values:
1239:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1240:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1241:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1242:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1243:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1244:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1245:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_EnableChannel(TIM_TypeDef *TIMx, uint32_t Channels)
1246:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1247:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   SET_BIT(TIMx->CCER, Channels);
1248:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1249:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1250:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1251:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Disable capture/compare channels.
1252:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCER         CC1E          LL_TIM_CC_DisableChannel\n
1253:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC2E          LL_TIM_CC_DisableChannel\n
1254:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC3E          LL_TIM_CC_DisableChannel\n
1255:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC4E          LL_TIM_CC_DisableChannel
1256:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1257:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channels This parameter can be a combination of the following values:
1258:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 73


1259:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1260:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1261:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1262:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1263:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1264:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_DisableChannel(TIM_TypeDef *TIMx, uint32_t Channels)
1265:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1266:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   CLEAR_BIT(TIMx->CCER, Channels);
1267:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1268:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1269:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1270:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Indicate whether channel(s) is(are) enabled.
1271:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCER         CC1E          LL_TIM_CC_IsEnabledChannel\n
1272:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC2E          LL_TIM_CC_IsEnabledChannel\n
1273:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC3E          LL_TIM_CC_IsEnabledChannel\n
1274:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC4E          LL_TIM_CC_IsEnabledChannel
1275:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1276:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channels This parameter can be a combination of the following values:
1277:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1278:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1279:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1280:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1281:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
1282:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1283:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_CC_IsEnabledChannel(TIM_TypeDef *TIMx, uint32_t Channels)
1284:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1285:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(TIMx->CCER, Channels) == (Channels)) ? 1UL : 0UL);
1286:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1287:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1288:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1289:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
1290:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1291:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1292:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Output_Channel Output channel configuration
1293:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
1294:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1295:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1296:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Configure an output channel.
1297:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCMR1        CC1S          LL_TIM_OC_ConfigOutput\n
1298:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR1        CC2S          LL_TIM_OC_ConfigOutput\n
1299:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        CC3S          LL_TIM_OC_ConfigOutput\n
1300:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        CC4S          LL_TIM_OC_ConfigOutput\n
1301:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC1P          LL_TIM_OC_ConfigOutput\n
1302:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_OC_ConfigOutput\n
1303:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_OC_ConfigOutput\n
1304:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_OC_ConfigOutput\n
1305:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1306:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1307:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1308:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1309:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1310:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1311:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Configuration This parameter must be a combination of all the following values:
1312:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCPOLARITY_HIGH or @ref LL_TIM_OCPOLARITY_LOW
1313:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1314:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1315:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_ConfigOutput(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t Configura
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 74


1316:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1317:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1318:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
1319:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   CLEAR_BIT(*pReg, (TIM_CCMR1_CC1S << SHIFT_TAB_OCxx[iChannel]));
1320:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   MODIFY_REG(TIMx->CCER, (TIM_CCER_CC1P << SHIFT_TAB_CCxP[iChannel]),
1321:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****              (Configuration & TIM_CCER_CC1P) << SHIFT_TAB_CCxP[iChannel]);
1322:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1323:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1324:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1325:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Define the behavior of the output reference signal OCxREF from which
1326:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         OCx and OCxN (when relevant) are derived.
1327:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCMR1        OC1M          LL_TIM_OC_SetMode\n
1328:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR1        OC2M          LL_TIM_OC_SetMode\n
1329:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        OC3M          LL_TIM_OC_SetMode\n
1330:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        OC4M          LL_TIM_OC_SetMode
1331:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1332:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1333:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1334:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1335:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1336:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1337:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Mode This parameter can be one of the following values:
1338:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FROZEN
1339:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_ACTIVE
1340:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_INACTIVE
1341:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_TOGGLE
1342:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FORCED_INACTIVE
1343:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FORCED_ACTIVE
1344:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_PWM1
1345:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_PWM2
1346:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1347:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1348:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetMode(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t Mode)
1349:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1350:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1351:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
1352:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_OC1M  | TIM_CCMR1_CC1S) << SHIFT_TAB_OCxx[iChannel]),  Mode << SHIF
1353:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1354:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1355:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1356:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Get the output compare mode of an output channel.
1357:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCMR1        OC1M          LL_TIM_OC_GetMode\n
1358:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR1        OC2M          LL_TIM_OC_GetMode\n
1359:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        OC3M          LL_TIM_OC_GetMode\n
1360:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        OC4M          LL_TIM_OC_GetMode
1361:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1362:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1363:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1364:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1365:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1366:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1367:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1368:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FROZEN
1369:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_ACTIVE
1370:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_INACTIVE
1371:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_TOGGLE
1372:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FORCED_INACTIVE
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 75


1373:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FORCED_ACTIVE
1374:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_PWM1
1375:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_PWM2
1376:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1377:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetMode(TIM_TypeDef *TIMx, uint32_t Channel)
1378:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1379:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1380:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFS
1381:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return (READ_BIT(*pReg, ((TIM_CCMR1_OC1M  | TIM_CCMR1_CC1S) << SHIFT_TAB_OCxx[iChannel])) >> SHIF
1382:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1383:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1384:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1385:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Set the polarity of an output channel.
1386:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCER         CC1P          LL_TIM_OC_SetPolarity\n
1387:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_OC_SetPolarity\n
1388:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_OC_SetPolarity\n
1389:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_OC_SetPolarity
1390:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1391:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1392:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1393:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1394:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1395:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1396:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Polarity This parameter can be one of the following values:
1397:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCPOLARITY_HIGH
1398:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCPOLARITY_LOW
1399:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1400:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1401:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetPolarity(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t Polarity)
1402:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1403:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1404:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   MODIFY_REG(TIMx->CCER, (TIM_CCER_CC1P << SHIFT_TAB_CCxP[iChannel]),  Polarity << SHIFT_TAB_CCxP[i
1405:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1406:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1407:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1408:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Get the polarity of an output channel.
1409:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCER         CC1P          LL_TIM_OC_GetPolarity\n
1410:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_OC_GetPolarity\n
1411:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_OC_GetPolarity\n
1412:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_OC_GetPolarity
1413:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1414:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1415:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1416:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1417:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1418:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1419:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1420:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCPOLARITY_HIGH
1421:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCPOLARITY_LOW
1422:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1423:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetPolarity(TIM_TypeDef *TIMx, uint32_t Channel)
1424:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1425:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1426:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return (READ_BIT(TIMx->CCER, (TIM_CCER_CC1P << SHIFT_TAB_CCxP[iChannel])) >> SHIFT_TAB_CCxP[iChan
1427:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1428:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1429:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 76


1430:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Enable fast mode for the output channel.
1431:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Acts only if the channel is configured in PWM1 or PWM2 mode.
1432:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCMR1        OC1FE          LL_TIM_OC_EnableFast\n
1433:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR1        OC2FE          LL_TIM_OC_EnableFast\n
1434:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        OC3FE          LL_TIM_OC_EnableFast\n
1435:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        OC4FE          LL_TIM_OC_EnableFast
1436:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1437:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1438:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1439:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1440:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1441:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1442:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1443:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1444:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_EnableFast(TIM_TypeDef *TIMx, uint32_t Channel)
1445:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1446:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1447:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
1448:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   SET_BIT(*pReg, (TIM_CCMR1_OC1FE << SHIFT_TAB_OCxx[iChannel]));
1449:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1450:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1451:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1452:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1453:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Disable fast mode for the output channel.
1454:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCMR1        OC1FE          LL_TIM_OC_DisableFast\n
1455:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR1        OC2FE          LL_TIM_OC_DisableFast\n
1456:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        OC3FE          LL_TIM_OC_DisableFast\n
1457:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        OC4FE          LL_TIM_OC_DisableFast
1458:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1459:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1460:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1461:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1462:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1463:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1464:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1465:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1466:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_DisableFast(TIM_TypeDef *TIMx, uint32_t Channel)
1467:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1468:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1469:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
1470:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   CLEAR_BIT(*pReg, (TIM_CCMR1_OC1FE << SHIFT_TAB_OCxx[iChannel]));
1471:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1472:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1473:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1474:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1475:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Indicates whether fast mode is enabled for the output channel.
1476:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCMR1        OC1FE          LL_TIM_OC_IsEnabledFast\n
1477:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR1        OC2FE          LL_TIM_OC_IsEnabledFast\n
1478:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        OC3FE          LL_TIM_OC_IsEnabledFast\n
1479:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        OC4FE          LL_TIM_OC_IsEnabledFast\n
1480:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1481:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1482:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1483:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1484:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1485:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1486:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 77


1487:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1488:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_IsEnabledFast(TIM_TypeDef *TIMx, uint32_t Channel)
1489:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1490:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1491:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFS
1492:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register uint32_t bitfield = TIM_CCMR1_OC1FE << SHIFT_TAB_OCxx[iChannel];
1493:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(*pReg, bitfield) == bitfield) ? 1UL : 0UL);
1494:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1495:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1496:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1497:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Enable compare register (TIMx_CCRx) preload for the output channel.
1498:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCMR1        OC1PE          LL_TIM_OC_EnablePreload\n
1499:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR1        OC2PE          LL_TIM_OC_EnablePreload\n
1500:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        OC3PE          LL_TIM_OC_EnablePreload\n
1501:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        OC4PE          LL_TIM_OC_EnablePreload
1502:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1503:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1504:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1505:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1506:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1507:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1508:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1509:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1510:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_EnablePreload(TIM_TypeDef *TIMx, uint32_t Channel)
1511:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1512:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1513:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
1514:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   SET_BIT(*pReg, (TIM_CCMR1_OC1PE << SHIFT_TAB_OCxx[iChannel]));
1515:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1516:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1517:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1518:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Disable compare register (TIMx_CCRx) preload for the output channel.
1519:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCMR1        OC1PE          LL_TIM_OC_DisablePreload\n
1520:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR1        OC2PE          LL_TIM_OC_DisablePreload\n
1521:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        OC3PE          LL_TIM_OC_DisablePreload\n
1522:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        OC4PE          LL_TIM_OC_DisablePreload
1523:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1524:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1525:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1526:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1527:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1528:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1529:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1530:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1531:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_DisablePreload(TIM_TypeDef *TIMx, uint32_t Channel)
1532:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1533:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1534:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
1535:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   CLEAR_BIT(*pReg, (TIM_CCMR1_OC1PE << SHIFT_TAB_OCxx[iChannel]));
1536:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1537:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1538:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1539:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Indicates whether compare register (TIMx_CCRx) preload is enabled for the output channe
1540:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCMR1        OC1PE          LL_TIM_OC_IsEnabledPreload\n
1541:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR1        OC2PE          LL_TIM_OC_IsEnabledPreload\n
1542:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        OC3PE          LL_TIM_OC_IsEnabledPreload\n
1543:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        OC4PE          LL_TIM_OC_IsEnabledPreload\n
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 78


1544:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1545:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1546:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1547:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1548:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1549:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1550:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
1551:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1552:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_IsEnabledPreload(TIM_TypeDef *TIMx, uint32_t Channel)
1553:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1554:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1555:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFS
1556:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register uint32_t bitfield = TIM_CCMR1_OC1PE << SHIFT_TAB_OCxx[iChannel];
1557:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(*pReg, bitfield) == bitfield) ? 1UL : 0UL);
1558:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1559:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1560:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1561:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Enable clearing the output channel on an external event.
1562:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note This function can only be used in Output compare and PWM modes. It does not work in Force
1563:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_OCXREF_CLEAR_INSTANCE(TIMx) can be used to check whether
1564:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       or not a timer instance can clear the OCxREF signal on an external event.
1565:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCMR1        OC1CE          LL_TIM_OC_EnableClear\n
1566:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR1        OC2CE          LL_TIM_OC_EnableClear\n
1567:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        OC3CE          LL_TIM_OC_EnableClear\n
1568:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        OC4CE          LL_TIM_OC_EnableClear
1569:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1570:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1571:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1572:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1573:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1574:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1575:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1576:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1577:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_EnableClear(TIM_TypeDef *TIMx, uint32_t Channel)
1578:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1579:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1580:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
1581:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   SET_BIT(*pReg, (TIM_CCMR1_OC1CE << SHIFT_TAB_OCxx[iChannel]));
1582:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1583:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1584:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1585:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Disable clearing the output channel on an external event.
1586:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_OCXREF_CLEAR_INSTANCE(TIMx) can be used to check whether
1587:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       or not a timer instance can clear the OCxREF signal on an external event.
1588:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCMR1        OC1CE          LL_TIM_OC_DisableClear\n
1589:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR1        OC2CE          LL_TIM_OC_DisableClear\n
1590:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        OC3CE          LL_TIM_OC_DisableClear\n
1591:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        OC4CE          LL_TIM_OC_DisableClear
1592:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1593:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1594:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1595:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1596:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1597:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1598:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1599:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1600:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_DisableClear(TIM_TypeDef *TIMx, uint32_t Channel)
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 79


1601:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1602:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1603:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
1604:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   CLEAR_BIT(*pReg, (TIM_CCMR1_OC1CE << SHIFT_TAB_OCxx[iChannel]));
1605:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1606:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1607:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1608:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Indicates clearing the output channel on an external event is enabled for the output ch
1609:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note This function enables clearing the output channel on an external event.
1610:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note This function can only be used in Output compare and PWM modes. It does not work in Force
1611:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_OCXREF_CLEAR_INSTANCE(TIMx) can be used to check whether
1612:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       or not a timer instance can clear the OCxREF signal on an external event.
1613:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCMR1        OC1CE          LL_TIM_OC_IsEnabledClear\n
1614:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR1        OC2CE          LL_TIM_OC_IsEnabledClear\n
1615:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        OC3CE          LL_TIM_OC_IsEnabledClear\n
1616:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        OC4CE          LL_TIM_OC_IsEnabledClear\n
1617:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1618:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1619:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1620:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1621:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1622:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1623:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
1624:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1625:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_IsEnabledClear(TIM_TypeDef *TIMx, uint32_t Channel)
1626:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1627:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1628:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFS
1629:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register uint32_t bitfield = TIM_CCMR1_OC1CE << SHIFT_TAB_OCxx[iChannel];
1630:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(*pReg, bitfield) == bitfield) ? 1UL : 0UL);
1631:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1632:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1633:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1634:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Set compare value for output channel 1 (TIMx_CCR1).
1635:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note In 32-bit timer implementations compare value can be between 0x00000000 and 0xFFFFFFFF.
1636:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
1637:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
1638:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CC1_INSTANCE(TIMx) can be used to check whether or not
1639:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       output channel 1 is supported by a timer instance.
1640:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCR1         CCR1          LL_TIM_OC_SetCompareCH1
1641:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1642:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  CompareValue between Min_Data=0 and Max_Data=65535
1643:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1644:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1645:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetCompareCH1(TIM_TypeDef *TIMx, uint32_t CompareValue)
1646:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1647:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   WRITE_REG(TIMx->CCR1, CompareValue);
1648:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1649:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1650:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1651:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Set compare value for output channel 2 (TIMx_CCR2).
1652:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note In 32-bit timer implementations compare value can be between 0x00000000 and 0xFFFFFFFF.
1653:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
1654:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
1655:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CC2_INSTANCE(TIMx) can be used to check whether or not
1656:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       output channel 2 is supported by a timer instance.
1657:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCR2         CCR2          LL_TIM_OC_SetCompareCH2
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 80


1658:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1659:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  CompareValue between Min_Data=0 and Max_Data=65535
1660:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1661:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1662:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetCompareCH2(TIM_TypeDef *TIMx, uint32_t CompareValue)
1663:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1664:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   WRITE_REG(TIMx->CCR2, CompareValue);
1665:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1666:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1667:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1668:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Set compare value for output channel 3 (TIMx_CCR3).
1669:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note In 32-bit timer implementations compare value can be between 0x00000000 and 0xFFFFFFFF.
1670:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
1671:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
1672:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CC3_INSTANCE(TIMx) can be used to check whether or not
1673:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       output channel is supported by a timer instance.
1674:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCR3         CCR3          LL_TIM_OC_SetCompareCH3
1675:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1676:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  CompareValue between Min_Data=0 and Max_Data=65535
1677:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1678:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1679:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetCompareCH3(TIM_TypeDef *TIMx, uint32_t CompareValue)
1680:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1681:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   WRITE_REG(TIMx->CCR3, CompareValue);
1682:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1683:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1684:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1685:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Set compare value for output channel 4 (TIMx_CCR4).
1686:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note In 32-bit timer implementations compare value can be between 0x00000000 and 0xFFFFFFFF.
1687:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
1688:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
1689:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CC4_INSTANCE(TIMx) can be used to check whether or not
1690:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       output channel 4 is supported by a timer instance.
1691:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCR4         CCR4          LL_TIM_OC_SetCompareCH4
1692:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1693:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  CompareValue between Min_Data=0 and Max_Data=65535
1694:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1695:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1696:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetCompareCH4(TIM_TypeDef *TIMx, uint32_t CompareValue)
1697:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1698:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   WRITE_REG(TIMx->CCR4, CompareValue);
1699:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1700:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1701:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1702:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Get compare value (TIMx_CCR1) set for  output channel 1.
1703:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note In 32-bit timer implementations returned compare value can be between 0x00000000 and 0xFF
1704:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
1705:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
1706:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CC1_INSTANCE(TIMx) can be used to check whether or not
1707:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       output channel 1 is supported by a timer instance.
1708:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCR1         CCR1          LL_TIM_OC_GetCompareCH1
1709:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1710:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval CompareValue (between Min_Data=0 and Max_Data=65535)
1711:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1712:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetCompareCH1(TIM_TypeDef *TIMx)
1713:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1714:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR1));
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 81


1715:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1716:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1717:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1718:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Get compare value (TIMx_CCR2) set for  output channel 2.
1719:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note In 32-bit timer implementations returned compare value can be between 0x00000000 and 0xFF
1720:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
1721:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
1722:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CC2_INSTANCE(TIMx) can be used to check whether or not
1723:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       output channel 2 is supported by a timer instance.
1724:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCR2         CCR2          LL_TIM_OC_GetCompareCH2
1725:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1726:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval CompareValue (between Min_Data=0 and Max_Data=65535)
1727:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1728:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetCompareCH2(TIM_TypeDef *TIMx)
1729:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1730:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR2));
1731:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1732:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1733:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1734:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Get compare value (TIMx_CCR3) set for  output channel 3.
1735:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note In 32-bit timer implementations returned compare value can be between 0x00000000 and 0xFF
1736:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
1737:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
1738:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CC3_INSTANCE(TIMx) can be used to check whether or not
1739:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       output channel 3 is supported by a timer instance.
1740:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCR3         CCR3          LL_TIM_OC_GetCompareCH3
1741:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1742:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval CompareValue (between Min_Data=0 and Max_Data=65535)
1743:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1744:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetCompareCH3(TIM_TypeDef *TIMx)
1745:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1746:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR3));
1747:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1748:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1749:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1750:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Get compare value (TIMx_CCR4) set for  output channel 4.
1751:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note In 32-bit timer implementations returned compare value can be between 0x00000000 and 0xFF
1752:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
1753:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
1754:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CC4_INSTANCE(TIMx) can be used to check whether or not
1755:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       output channel 4 is supported by a timer instance.
1756:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCR4         CCR4          LL_TIM_OC_GetCompareCH4
1757:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1758:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval CompareValue (between Min_Data=0 and Max_Data=65535)
1759:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1760:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetCompareCH4(TIM_TypeDef *TIMx)
1761:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1762:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR4));
1763:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1764:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1765:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1766:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
1767:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1768:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1769:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Input_Channel Input channel configuration
1770:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
1771:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 82


1772:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1773:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Configure input channel.
1774:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCMR1        CC1S          LL_TIM_IC_Config\n
1775:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR1        IC1PSC        LL_TIM_IC_Config\n
1776:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR1        IC1F          LL_TIM_IC_Config\n
1777:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR1        CC2S          LL_TIM_IC_Config\n
1778:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR1        IC2PSC        LL_TIM_IC_Config\n
1779:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR1        IC2F          LL_TIM_IC_Config\n
1780:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        CC3S          LL_TIM_IC_Config\n
1781:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        IC3PSC        LL_TIM_IC_Config\n
1782:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        IC3F          LL_TIM_IC_Config\n
1783:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        CC4S          LL_TIM_IC_Config\n
1784:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        IC4PSC        LL_TIM_IC_Config\n
1785:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        IC4F          LL_TIM_IC_Config\n
1786:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC1P          LL_TIM_IC_Config\n
1787:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC1NP         LL_TIM_IC_Config\n
1788:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_IC_Config\n
1789:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC2NP         LL_TIM_IC_Config\n
1790:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_IC_Config\n
1791:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC3NP         LL_TIM_IC_Config\n
1792:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_IC_Config\n
1793:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC4NP         LL_TIM_IC_Config
1794:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1795:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1796:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1797:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1798:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1799:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1800:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Configuration This parameter must be a combination of all the following values:
1801:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_DIRECTTI or @ref LL_TIM_ACTIVEINPUT_INDIRECTTI or @ref LL_
1802:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV1 or ... or @ref LL_TIM_ICPSC_DIV8
1803:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1 or ... or @ref LL_TIM_IC_FILTER_FDIV32_N8
1804:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_RISING or @ref LL_TIM_IC_POLARITY_FALLING or @ref LL_TIM_I
1805:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1806:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1807:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_Config(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t Configuration)
1808:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1809:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1810:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
1811:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_IC1F | TIM_CCMR1_IC1PSC | TIM_CCMR1_CC1S) << SHIFT_TAB_ICxx[iChanne
1812:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****              ((Configuration >> 16U) & (TIM_CCMR1_IC1F | TIM_CCMR1_IC1PSC | TIM_CCMR1_CC1S))  << SH
1813:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   MODIFY_REG(TIMx->CCER, ((TIM_CCER_CC1NP | TIM_CCER_CC1P) << SHIFT_TAB_CCxP[iChannel]),
1814:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****              (Configuration & (TIM_CCER_CC1NP | TIM_CCER_CC1P)) << SHIFT_TAB_CCxP[iChannel]);
1815:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1816:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1817:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1818:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Set the active input.
1819:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCMR1        CC1S          LL_TIM_IC_SetActiveInput\n
1820:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR1        CC2S          LL_TIM_IC_SetActiveInput\n
1821:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        CC3S          LL_TIM_IC_SetActiveInput\n
1822:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        CC4S          LL_TIM_IC_SetActiveInput
1823:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1824:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1825:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1826:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1827:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1828:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 83


1829:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  ICActiveInput This parameter can be one of the following values:
1830:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_DIRECTTI
1831:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_INDIRECTTI
1832:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_TRC
1833:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1834:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1835:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_SetActiveInput(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ICActiv
1836:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1837:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1838:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
1839:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_CC1S) << SHIFT_TAB_ICxx[iChannel]), (ICActiveInput >> 16U) << SHIFT
1840:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1841:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1842:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1843:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Get the current active input.
1844:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCMR1        CC1S          LL_TIM_IC_GetActiveInput\n
1845:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR1        CC2S          LL_TIM_IC_GetActiveInput\n
1846:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        CC3S          LL_TIM_IC_GetActiveInput\n
1847:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        CC4S          LL_TIM_IC_GetActiveInput
1848:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1849:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1850:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1851:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1852:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1853:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1854:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1855:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_DIRECTTI
1856:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_INDIRECTTI
1857:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_TRC
1858:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1859:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetActiveInput(TIM_TypeDef *TIMx, uint32_t Channel)
1860:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1861:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1862:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFS
1863:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(*pReg, ((TIM_CCMR1_CC1S) << SHIFT_TAB_ICxx[iChannel])) >> SHIFT_TAB_ICxx[iChann
1864:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1865:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1866:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1867:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Set the prescaler of input channel.
1868:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCMR1        IC1PSC        LL_TIM_IC_SetPrescaler\n
1869:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR1        IC2PSC        LL_TIM_IC_SetPrescaler\n
1870:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        IC3PSC        LL_TIM_IC_SetPrescaler\n
1871:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        IC4PSC        LL_TIM_IC_SetPrescaler
1872:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1873:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1874:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1875:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1876:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1877:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1878:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  ICPrescaler This parameter can be one of the following values:
1879:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV1
1880:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV2
1881:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV4
1882:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV8
1883:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1884:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1885:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_SetPrescaler(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ICPrescal
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 84


1886:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1887:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1888:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
1889:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_IC1PSC) << SHIFT_TAB_ICxx[iChannel]), (ICPrescaler >> 16U) << SHIFT
1890:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1891:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1892:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1893:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Get the current prescaler value acting on an  input channel.
1894:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCMR1        IC1PSC        LL_TIM_IC_GetPrescaler\n
1895:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR1        IC2PSC        LL_TIM_IC_GetPrescaler\n
1896:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        IC3PSC        LL_TIM_IC_GetPrescaler\n
1897:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        IC4PSC        LL_TIM_IC_GetPrescaler
1898:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1899:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1900:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1901:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1902:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1903:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1904:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1905:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV1
1906:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV2
1907:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV4
1908:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV8
1909:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1910:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetPrescaler(TIM_TypeDef *TIMx, uint32_t Channel)
1911:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1912:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1913:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFS
1914:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(*pReg, ((TIM_CCMR1_IC1PSC) << SHIFT_TAB_ICxx[iChannel])) >> SHIFT_TAB_ICxx[iCha
1915:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1916:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1917:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1918:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Set the input filter duration.
1919:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCMR1        IC1F          LL_TIM_IC_SetFilter\n
1920:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR1        IC2F          LL_TIM_IC_SetFilter\n
1921:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        IC3F          LL_TIM_IC_SetFilter\n
1922:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        IC4F          LL_TIM_IC_SetFilter
1923:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1924:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1925:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1926:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1927:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1928:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1929:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  ICFilter This parameter can be one of the following values:
1930:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1
1931:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N2
1932:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N4
1933:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N8
1934:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV2_N6
1935:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV2_N8
1936:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV4_N6
1937:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV4_N8
1938:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV8_N6
1939:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV8_N8
1940:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N5
1941:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N6
1942:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N8
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 85


1943:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N5
1944:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N6
1945:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N8
1946:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
1947:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1948:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_SetFilter(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ICFilter)
1949:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1950:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1951:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
1952:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_IC1F) << SHIFT_TAB_ICxx[iChannel]), (ICFilter >> 16U) << SHIFT_TAB_
1953:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1954:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1955:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1956:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Get the input filter duration.
1957:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCMR1        IC1F          LL_TIM_IC_GetFilter\n
1958:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR1        IC2F          LL_TIM_IC_GetFilter\n
1959:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        IC3F          LL_TIM_IC_GetFilter\n
1960:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCMR2        IC4F          LL_TIM_IC_GetFilter
1961:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
1962:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1963:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1964:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1965:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1966:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1967:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1968:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1
1969:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N2
1970:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N4
1971:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N8
1972:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV2_N6
1973:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV2_N8
1974:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV4_N6
1975:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV4_N8
1976:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV8_N6
1977:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV8_N8
1978:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N5
1979:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N6
1980:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N8
1981:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N5
1982:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N6
1983:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N8
1984:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
1985:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetFilter(TIM_TypeDef *TIMx, uint32_t Channel)
1986:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
1987:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1988:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFS
1989:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(*pReg, ((TIM_CCMR1_IC1F) << SHIFT_TAB_ICxx[iChannel])) >> SHIFT_TAB_ICxx[iChann
1990:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
1991:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
1992:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
1993:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Set the input channel polarity.
1994:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCER         CC1P          LL_TIM_IC_SetPolarity\n
1995:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC1NP         LL_TIM_IC_SetPolarity\n
1996:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_IC_SetPolarity\n
1997:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC2NP         LL_TIM_IC_SetPolarity\n
1998:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_IC_SetPolarity\n
1999:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC3NP         LL_TIM_IC_SetPolarity\n
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 86


2000:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_IC_SetPolarity\n
2001:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC4NP         LL_TIM_IC_SetPolarity
2002:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2003:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2004:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2005:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2006:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2007:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2008:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  ICPolarity This parameter can be one of the following values:
2009:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_RISING
2010:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_FALLING
2011:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_BOTHEDGE
2012:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2013:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2014:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_SetPolarity(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ICPolarity
2015:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2016:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2017:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   MODIFY_REG(TIMx->CCER, ((TIM_CCER_CC1NP | TIM_CCER_CC1P) << SHIFT_TAB_CCxP[iChannel]),
2018:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****              ICPolarity << SHIFT_TAB_CCxP[iChannel]);
2019:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2020:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2021:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2022:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Get the current input channel polarity.
2023:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCER         CC1P          LL_TIM_IC_GetPolarity\n
2024:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC1NP         LL_TIM_IC_GetPolarity\n
2025:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_IC_GetPolarity\n
2026:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC2NP         LL_TIM_IC_GetPolarity\n
2027:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_IC_GetPolarity\n
2028:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC3NP         LL_TIM_IC_GetPolarity\n
2029:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_IC_GetPolarity\n
2030:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         CCER         CC4NP         LL_TIM_IC_GetPolarity
2031:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2032:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2033:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2034:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2035:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2036:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2037:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
2038:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_RISING
2039:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_FALLING
2040:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_BOTHEDGE
2041:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2042:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetPolarity(TIM_TypeDef *TIMx, uint32_t Channel)
2043:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2044:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2045:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return (READ_BIT(TIMx->CCER, ((TIM_CCER_CC1NP | TIM_CCER_CC1P) << SHIFT_TAB_CCxP[iChannel])) >>
2046:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****           SHIFT_TAB_CCxP[iChannel]);
2047:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2048:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2049:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2050:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Connect the TIMx_CH1, CH2 and CH3 pins  to the TI1 input (XOR combination).
2051:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_XOR_INSTANCE(TIMx) can be used to check whether or not
2052:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       a timer instance provides an XOR input.
2053:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR2          TI1S          LL_TIM_IC_EnableXORCombination
2054:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2055:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2056:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 87


2057:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_EnableXORCombination(TIM_TypeDef *TIMx)
2058:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2059:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   SET_BIT(TIMx->CR2, TIM_CR2_TI1S);
2060:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2061:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2062:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2063:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Disconnect the TIMx_CH1, CH2 and CH3 pins  from the TI1 input.
2064:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_XOR_INSTANCE(TIMx) can be used to check whether or not
2065:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       a timer instance provides an XOR input.
2066:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR2          TI1S          LL_TIM_IC_DisableXORCombination
2067:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2068:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2069:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2070:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_DisableXORCombination(TIM_TypeDef *TIMx)
2071:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2072:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   CLEAR_BIT(TIMx->CR2, TIM_CR2_TI1S);
2073:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2074:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2075:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2076:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Indicates whether the TIMx_CH1, CH2 and CH3 pins are connectected to the TI1 input.
2077:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_XOR_INSTANCE(TIMx) can be used to check whether or not
2078:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * a timer instance provides an XOR input.
2079:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR2          TI1S          LL_TIM_IC_IsEnabledXORCombination
2080:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2081:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2082:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2083:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_IsEnabledXORCombination(TIM_TypeDef *TIMx)
2084:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2085:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(TIMx->CR2, TIM_CR2_TI1S) == (TIM_CR2_TI1S)) ? 1UL : 0UL);
2086:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2087:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2088:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2089:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Get captured value for input channel 1.
2090:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note In 32-bit timer implementations returned captured value can be between 0x00000000 and 0xF
2091:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2092:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2093:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CC1_INSTANCE(TIMx) can be used to check whether or not
2094:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       input channel 1 is supported by a timer instance.
2095:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCR1         CCR1          LL_TIM_IC_GetCaptureCH1
2096:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2097:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval CapturedValue (between Min_Data=0 and Max_Data=65535)
2098:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2099:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetCaptureCH1(TIM_TypeDef *TIMx)
2100:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2101:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR1));
2102:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2103:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2104:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2105:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Get captured value for input channel 2.
2106:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note In 32-bit timer implementations returned captured value can be between 0x00000000 and 0xF
2107:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2108:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2109:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CC2_INSTANCE(TIMx) can be used to check whether or not
2110:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       input channel 2 is supported by a timer instance.
2111:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCR2         CCR2          LL_TIM_IC_GetCaptureCH2
2112:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2113:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval CapturedValue (between Min_Data=0 and Max_Data=65535)
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 88


2114:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2115:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetCaptureCH2(TIM_TypeDef *TIMx)
2116:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2117:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR2));
2118:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2119:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2120:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2121:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Get captured value for input channel 3.
2122:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note In 32-bit timer implementations returned captured value can be between 0x00000000 and 0xF
2123:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2124:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2125:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CC3_INSTANCE(TIMx) can be used to check whether or not
2126:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       input channel 3 is supported by a timer instance.
2127:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCR3         CCR3          LL_TIM_IC_GetCaptureCH3
2128:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2129:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval CapturedValue (between Min_Data=0 and Max_Data=65535)
2130:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2131:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetCaptureCH3(TIM_TypeDef *TIMx)
2132:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2133:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR3));
2134:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2135:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2136:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2137:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Get captured value for input channel 4.
2138:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note In 32-bit timer implementations returned captured value can be between 0x00000000 and 0xF
2139:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2140:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2141:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CC4_INSTANCE(TIMx) can be used to check whether or not
2142:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       input channel 4 is supported by a timer instance.
2143:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CCR4         CCR4          LL_TIM_IC_GetCaptureCH4
2144:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2145:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval CapturedValue (between Min_Data=0 and Max_Data=65535)
2146:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2147:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetCaptureCH4(TIM_TypeDef *TIMx)
2148:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2149:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR4));
2150:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2151:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2152:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2153:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
2154:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2155:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2156:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Clock_Selection Counter clock selection
2157:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
2158:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2159:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2160:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Enable external clock mode 2.
2161:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note When external clock mode 2 is enabled the counter is clocked by any active edge on the ET
2162:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CLOCKSOURCE_ETRMODE2_INSTANCE(TIMx) can be used to check
2163:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not a timer instance supports external clock mode2.
2164:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SMCR         ECE           LL_TIM_EnableExternalClock
2165:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2166:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2167:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2168:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableExternalClock(TIM_TypeDef *TIMx)
2169:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2170:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   SET_BIT(TIMx->SMCR, TIM_SMCR_ECE);
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 89


2171:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2172:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2173:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2174:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Disable external clock mode 2.
2175:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CLOCKSOURCE_ETRMODE2_INSTANCE(TIMx) can be used to check
2176:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not a timer instance supports external clock mode2.
2177:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SMCR         ECE           LL_TIM_DisableExternalClock
2178:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2179:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2180:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2181:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableExternalClock(TIM_TypeDef *TIMx)
2182:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2183:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   CLEAR_BIT(TIMx->SMCR, TIM_SMCR_ECE);
2184:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2185:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2186:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2187:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Indicate whether external clock mode 2 is enabled.
2188:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CLOCKSOURCE_ETRMODE2_INSTANCE(TIMx) can be used to check
2189:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not a timer instance supports external clock mode2.
2190:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SMCR         ECE           LL_TIM_IsEnabledExternalClock
2191:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2192:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2193:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2194:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledExternalClock(TIM_TypeDef *TIMx)
2195:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2196:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(TIMx->SMCR, TIM_SMCR_ECE) == (TIM_SMCR_ECE)) ? 1UL : 0UL);
2197:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2198:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2199:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2200:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Set the clock source of the counter clock.
2201:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note when selected clock source is external clock mode 1, the timer input
2202:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       the external clock is applied is selected by calling the @ref LL_TIM_SetTriggerInput()
2203:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       function. This timer input must be configured by calling
2204:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       the @ref LL_TIM_IC_Config() function.
2205:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CLOCKSOURCE_ETRMODE1_INSTANCE(TIMx) can be used to check
2206:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not a timer instance supports external clock mode1.
2207:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CLOCKSOURCE_ETRMODE2_INSTANCE(TIMx) can be used to check
2208:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not a timer instance supports external clock mode2.
2209:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SMCR         SMS           LL_TIM_SetClockSource\n
2210:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         SMCR         ECE           LL_TIM_SetClockSource
2211:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2212:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  ClockSource This parameter can be one of the following values:
2213:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKSOURCE_INTERNAL
2214:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKSOURCE_EXT_MODE1
2215:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKSOURCE_EXT_MODE2
2216:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2217:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2218:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetClockSource(TIM_TypeDef *TIMx, uint32_t ClockSource)
2219:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2220:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   MODIFY_REG(TIMx->SMCR, TIM_SMCR_SMS | TIM_SMCR_ECE, ClockSource);
2221:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2222:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2223:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2224:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Set the encoder interface mode.
2225:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_ENCODER_INTERFACE_INSTANCE(TIMx) can be used to check
2226:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not a timer instance supports the encoder mode.
2227:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SMCR         SMS           LL_TIM_SetEncoderMode
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 90


2228:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2229:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  EncoderMode This parameter can be one of the following values:
2230:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ENCODERMODE_X2_TI1
2231:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ENCODERMODE_X2_TI2
2232:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ENCODERMODE_X4_TI12
2233:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2234:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2235:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetEncoderMode(TIM_TypeDef *TIMx, uint32_t EncoderMode)
2236:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2237:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   MODIFY_REG(TIMx->SMCR, TIM_SMCR_SMS, EncoderMode);
2238:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2239:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2240:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2241:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
2242:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2243:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2244:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Timer_Synchronization Timer synchronisation configuration
2245:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
2246:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2247:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2248:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Set the trigger output (TRGO) used for timer synchronization .
2249:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_MASTER_INSTANCE(TIMx) can be used to check
2250:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       whether or not a timer instance can operate as a master timer.
2251:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll CR2          MMS           LL_TIM_SetTriggerOutput
2252:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2253:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TimerSynchronization This parameter can be one of the following values:
2254:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_RESET
2255:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_ENABLE
2256:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_UPDATE
2257:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_CC1IF
2258:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_OC1REF
2259:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_OC2REF
2260:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_OC3REF
2261:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_OC4REF
2262:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2263:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2264:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetTriggerOutput(TIM_TypeDef *TIMx, uint32_t TimerSynchronization)
2265:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2266:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   MODIFY_REG(TIMx->CR2, TIM_CR2_MMS, TimerSynchronization);
2267:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2268:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2269:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2270:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Set the synchronization mode of a slave timer.
2271:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_SLAVE_INSTANCE(TIMx) can be used to check whether or not
2272:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       a timer instance can operate as a slave timer.
2273:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SMCR         SMS           LL_TIM_SetSlaveMode
2274:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2275:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  SlaveMode This parameter can be one of the following values:
2276:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_SLAVEMODE_DISABLED
2277:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_SLAVEMODE_RESET
2278:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_SLAVEMODE_GATED
2279:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_SLAVEMODE_TRIGGER
2280:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2281:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2282:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetSlaveMode(TIM_TypeDef *TIMx, uint32_t SlaveMode)
2283:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2284:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   MODIFY_REG(TIMx->SMCR, TIM_SMCR_SMS, SlaveMode);
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 91


2285:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2286:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2287:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2288:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Set the selects the trigger input to be used to synchronize the counter.
2289:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_SLAVE_INSTANCE(TIMx) can be used to check whether or not
2290:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       a timer instance can operate as a slave timer.
2291:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SMCR         TS            LL_TIM_SetTriggerInput
2292:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2293:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TriggerInput This parameter can be one of the following values:
2294:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ITR0
2295:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ITR1
2296:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ITR2
2297:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ITR3
2298:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_TI1F_ED
2299:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_TI1FP1
2300:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_TI2FP2
2301:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ETRF
2302:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2303:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2304:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetTriggerInput(TIM_TypeDef *TIMx, uint32_t TriggerInput)
2305:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2306:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   MODIFY_REG(TIMx->SMCR, TIM_SMCR_TS, TriggerInput);
2307:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2308:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2309:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2310:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Enable the Master/Slave mode.
2311:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_SLAVE_INSTANCE(TIMx) can be used to check whether or not
2312:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       a timer instance can operate as a slave timer.
2313:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SMCR         MSM           LL_TIM_EnableMasterSlaveMode
2314:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2315:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2316:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2317:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableMasterSlaveMode(TIM_TypeDef *TIMx)
2318:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2319:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   SET_BIT(TIMx->SMCR, TIM_SMCR_MSM);
2320:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2321:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2322:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2323:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Disable the Master/Slave mode.
2324:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_SLAVE_INSTANCE(TIMx) can be used to check whether or not
2325:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       a timer instance can operate as a slave timer.
2326:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SMCR         MSM           LL_TIM_DisableMasterSlaveMode
2327:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2328:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2329:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2330:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableMasterSlaveMode(TIM_TypeDef *TIMx)
2331:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2332:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   CLEAR_BIT(TIMx->SMCR, TIM_SMCR_MSM);
2333:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2334:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2335:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2336:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief Indicates whether the Master/Slave mode is enabled.
2337:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_SLAVE_INSTANCE(TIMx) can be used to check whether or not
2338:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * a timer instance can operate as a slave timer.
2339:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SMCR         MSM           LL_TIM_IsEnabledMasterSlaveMode
2340:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2341:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 92


2342:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2343:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledMasterSlaveMode(TIM_TypeDef *TIMx)
2344:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2345:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(TIMx->SMCR, TIM_SMCR_MSM) == (TIM_SMCR_MSM)) ? 1UL : 0UL);
2346:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2347:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2348:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2349:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Configure the external trigger (ETR) input.
2350:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_ETR_INSTANCE(TIMx) can be used to check whether or not
2351:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       a timer instance provides an external trigger input.
2352:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SMCR         ETP           LL_TIM_ConfigETR\n
2353:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         SMCR         ETPS          LL_TIM_ConfigETR\n
2354:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         SMCR         ETF           LL_TIM_ConfigETR
2355:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2356:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  ETRPolarity This parameter can be one of the following values:
2357:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_POLARITY_NONINVERTED
2358:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_POLARITY_INVERTED
2359:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  ETRPrescaler This parameter can be one of the following values:
2360:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_PRESCALER_DIV1
2361:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_PRESCALER_DIV2
2362:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_PRESCALER_DIV4
2363:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_PRESCALER_DIV8
2364:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  ETRFilter This parameter can be one of the following values:
2365:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV1
2366:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV1_N2
2367:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV1_N4
2368:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV1_N8
2369:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV2_N6
2370:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV2_N8
2371:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV4_N6
2372:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV4_N8
2373:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV8_N6
2374:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV8_N8
2375:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV16_N5
2376:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV16_N6
2377:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV16_N8
2378:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV32_N5
2379:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV32_N6
2380:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV32_N8
2381:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2382:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2383:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ConfigETR(TIM_TypeDef *TIMx, uint32_t ETRPolarity, uint32_t ETRPrescale
2384:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****                                       uint32_t ETRFilter)
2385:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2386:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   MODIFY_REG(TIMx->SMCR, TIM_SMCR_ETP | TIM_SMCR_ETPS | TIM_SMCR_ETF, ETRPolarity | ETRPrescaler | 
2387:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2388:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2389:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2390:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
2391:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2392:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2393:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EF_DMA_Burst_Mode DMA burst mode configuration
2394:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
2395:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2396:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2397:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Configures the timer DMA burst feature.
2398:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_DMABURST_INSTANCE(TIMx) can be used to check whether or
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 93


2399:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       not a timer instance supports the DMA burst mode.
2400:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll DCR          DBL           LL_TIM_ConfigDMABurst\n
2401:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         DCR          DBA           LL_TIM_ConfigDMABurst
2402:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2403:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  DMABurstBaseAddress This parameter can be one of the following values:
2404:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CR1
2405:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CR2
2406:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_SMCR
2407:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_DIER
2408:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_SR
2409:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_EGR
2410:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCMR1
2411:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCMR2
2412:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCER
2413:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CNT
2414:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_PSC
2415:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_ARR
2416:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCR1
2417:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCR2
2418:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCR3
2419:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCR4
2420:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_OR
2421:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  DMABurstLength This parameter can be one of the following values:
2422:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_1TRANSFER
2423:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_2TRANSFERS
2424:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_3TRANSFERS
2425:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_4TRANSFERS
2426:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_5TRANSFERS
2427:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_6TRANSFERS
2428:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_7TRANSFERS
2429:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_8TRANSFERS
2430:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_9TRANSFERS
2431:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_10TRANSFERS
2432:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_11TRANSFERS
2433:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_12TRANSFERS
2434:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_13TRANSFERS
2435:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_14TRANSFERS
2436:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_15TRANSFERS
2437:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_16TRANSFERS
2438:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_17TRANSFERS
2439:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_18TRANSFERS
2440:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2441:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2442:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ConfigDMABurst(TIM_TypeDef *TIMx, uint32_t DMABurstBaseAddress, uint32_
2443:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2444:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   MODIFY_REG(TIMx->DCR, (TIM_DCR_DBL | TIM_DCR_DBA), (DMABurstBaseAddress | DMABurstLength));
2445:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2446:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2447:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2448:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
2449:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2450:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2451:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Timer_Inputs_Remapping Timer input remapping
2452:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
2453:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2454:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2455:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Remap TIM inputs (input channel, internal/external triggers).
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 94


2456:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_REMAP_INSTANCE(TIMx) can be used to check whether or not
2457:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *       a some timer inputs can be remapped.
2458:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****  * @rmtoll  TIM2_OR     ITR1_RMP      LL_TIM_SetRemap\n
2459:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         TIM3_OR     ITR2_RMP      LL_TIM_SetRemap\n
2460:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         TIM9_OR     TI1_RMP       LL_TIM_SetRemap\n
2461:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         TIM9_OR     ITR1_RMP      LL_TIM_SetRemap\n
2462:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         TIM10_OR    TI1_RMP       LL_TIM_SetRemap\n
2463:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         TIM10_OR    ETR_RMP       LL_TIM_SetRemap\n
2464:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         TIM10_OR    TI1_RMP_RI    LL_TIM_SetRemap\n
2465:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         TIM11_OR    TI1_RMP       LL_TIM_SetRemap\n
2466:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         TIM11_OR    ETR_RMP       LL_TIM_SetRemap\n
2467:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         TIM11_OR    TI1_RMP_RI    LL_TIM_SetRemap
2468:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2469:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  Remap Remap params depends on the TIMx. Description available only
2470:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         in CHM version of the User Manual (not in .pdf).
2471:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         Otherwise see Reference Manual description of OR registers.
2472:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *
2473:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         Below description summarizes "Timer Instance" and "Remap" param combinations:
2474:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *
2475:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         TIM2: any combination of ITR1_RMP where
2476:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *
2477:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            . . ITR1_RMP can be one of the following values
2478:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_TIR1_RMP_TIM10_OC  (**)
2479:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_TIR1_RMP_TIM5_TGO  (**)
2480:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *
2481:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         TIM3: any combination of ITR2_RMP where
2482:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *
2483:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            . . ITR2_RMP can be one of the following values
2484:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_TIR2_RMP_TIM11_OC  (**)
2485:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_TIR2_RMP_TIM5_TGO  (**)
2486:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *
2487:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         TIM9: any combination of TI1_RMP, ITR1_RMP where
2488:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *
2489:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            . . TI1_RMP can be one of the following values
2490:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM9_TI1_RMP_LSE
2491:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM9_TI1_RMP_GPIO
2492:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *
2493:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            . . ITR1_RMP can be one of the following values
2494:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM9_ITR1_RMP_TIM3_TGO  (*)
2495:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM9_ITR1_RMP_TOUCH_IO  (*)
2496:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *
2497:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *
2498:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         TIM10: any combination of TI1_RMP, ETR_RMP, TI1_RMP_RI   where
2499:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *
2500:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            . . TI1_RMP can be one of the following values
2501:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM10_TI1_RMP_GPIO
2502:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM10_TI1_RMP_LSI
2503:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM10_TI1_RMP_LSE
2504:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM10_TI1_RMP_RTC
2505:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *
2506:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            . . ETR_RMP can be one of the following values
2507:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM10_ETR_RMP_TIM9_TGO  (*)
2508:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *
2509:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            . . TI1_RMP_RI can be one of the following values
2510:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM10_TI1_RMP_RI        (*)
2511:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *
2512:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 95


2513:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         TIM11: any combination of TI1_RMP, ETR_RMP, TI1_RMP_RI   where
2514:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *
2515:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            . . TI1_RMP can be one of the following values
2516:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM11_TI1_RMP_MSI
2517:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM11_TI1_RMP_HSE_RTC
2518:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM11_TI1_RMP
2519:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *
2520:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            . . ETR_RMP can be one of the following values
2521:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM11_ETR_RMP_TIM9_TGO  (*)
2522:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *
2523:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            . . TI1_RMP_RI can be one of the following values
2524:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM11_TI1_RMP_RI        (*)
2525:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *
2526:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *           (*) value not available in all devices categories
2527:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *           (**) register not available in all devices categories
2528:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *
2529:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note Option registers are available only for cat.3, cat.4 and cat.5  devices
2530:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2531:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2532:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetRemap(TIM_TypeDef *TIMx, uint32_t Remap)
2533:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2534:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   MODIFY_REG(TIMx->OR, (Remap >> TIMx_OR_RMP_SHIFT), (Remap & TIMx_OR_RMP_MASK));
2535:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2536:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2537:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2538:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
2539:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2540:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2541:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EF_OCREF_Clear OCREF_Clear_Management
2542:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
2543:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2544:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2545:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Set the OCREF clear input source
2546:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note The OCxREF signal of a given channel can be cleared when a high level is applied on the O
2547:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note This function can only be used in Output compare and PWM modes.
2548:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @note the ETR signal can be connected to the output of a comparator to be used for current hand
2549:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SMCR          OCCS                LL_TIM_SetOCRefClearInputSource
2550:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2551:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  OCRefClearInputSource This parameter can be one of the following values:
2552:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCREF_CLR_INT_OCREF_CLR
2553:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCREF_CLR_INT_ETR
2554:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2555:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2556:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetOCRefClearInputSource(TIM_TypeDef *TIMx, uint32_t OCRefClearInputSou
2557:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2558:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   MODIFY_REG(TIMx->SMCR, TIM_SMCR_OCCS, OCRefClearInputSource);
2559:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2560:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2561:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
2562:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2563:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2564:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EF_FLAG_Management FLAG-Management
2565:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
2566:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2567:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2568:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Clear the update interrupt flag (UIF).
2569:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SR           UIF           LL_TIM_ClearFlag_UPDATE
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 96


2570:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2571:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2572:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2573:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_UPDATE(TIM_TypeDef *TIMx)
 952              		.loc 2 2573 22 view .LVU191
 953              	.LBB137:
2574:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2575:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_UIF));
 954              		.loc 2 2575 3 view .LVU192
 955 0044 6FF00105 		mvn	r5, #1
 956              	.LVL70:
 957              		.loc 2 2575 3 is_stmt 0 view .LVU193
 958 0048 2561     		str	r5, [r4, #16]
 959              	.LVL71:
 960              		.loc 2 2575 3 view .LVU194
 961              	.LBE137:
 962              	.LBE136:
  43:user/src/timers.c ****   LL_TIM_EnableIT_UPDATE(US_DELAY_TIMER);
 963              		.loc 1 43 3 is_stmt 1 view .LVU195
 964              	.LBB138:
 965              	.LBI138:
2576:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2577:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2578:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2579:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Indicate whether update interrupt flag (UIF) is set (update interrupt is pending).
2580:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SR           UIF           LL_TIM_IsActiveFlag_UPDATE
2581:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2582:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2583:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2584:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_UPDATE(TIM_TypeDef *TIMx)
2585:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2586:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_UIF) == (TIM_SR_UIF)) ? 1UL : 0UL);
2587:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2588:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2589:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2590:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Clear the Capture/Compare 1 interrupt flag (CC1F).
2591:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SR           CC1IF         LL_TIM_ClearFlag_CC1
2592:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2593:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2594:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2595:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_CC1(TIM_TypeDef *TIMx)
2596:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2597:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_CC1IF));
2598:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2599:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2600:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2601:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Indicate whether Capture/Compare 1 interrupt flag (CC1F) is set (Capture/Compare 1 inte
2602:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SR           CC1IF         LL_TIM_IsActiveFlag_CC1
2603:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2604:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2605:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2606:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_CC1(TIM_TypeDef *TIMx)
2607:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2608:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_CC1IF) == (TIM_SR_CC1IF)) ? 1UL : 0UL);
2609:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2610:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2611:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 97


2612:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Clear the Capture/Compare 2 interrupt flag (CC2F).
2613:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SR           CC2IF         LL_TIM_ClearFlag_CC2
2614:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2615:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2616:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2617:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_CC2(TIM_TypeDef *TIMx)
2618:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2619:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_CC2IF));
2620:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2621:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2622:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2623:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Indicate whether Capture/Compare 2 interrupt flag (CC2F) is set (Capture/Compare 2 inte
2624:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SR           CC2IF         LL_TIM_IsActiveFlag_CC2
2625:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2626:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2627:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2628:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_CC2(TIM_TypeDef *TIMx)
2629:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2630:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_CC2IF) == (TIM_SR_CC2IF)) ? 1UL : 0UL);
2631:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2632:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2633:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2634:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Clear the Capture/Compare 3 interrupt flag (CC3F).
2635:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SR           CC3IF         LL_TIM_ClearFlag_CC3
2636:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2637:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2638:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2639:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_CC3(TIM_TypeDef *TIMx)
2640:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2641:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_CC3IF));
2642:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2643:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2644:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2645:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Indicate whether Capture/Compare 3 interrupt flag (CC3F) is set (Capture/Compare 3 inte
2646:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SR           CC3IF         LL_TIM_IsActiveFlag_CC3
2647:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2648:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2649:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2650:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_CC3(TIM_TypeDef *TIMx)
2651:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2652:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_CC3IF) == (TIM_SR_CC3IF)) ? 1UL : 0UL);
2653:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2654:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2655:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2656:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Clear the Capture/Compare 4 interrupt flag (CC4F).
2657:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SR           CC4IF         LL_TIM_ClearFlag_CC4
2658:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2659:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2660:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2661:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_CC4(TIM_TypeDef *TIMx)
2662:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2663:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_CC4IF));
2664:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2665:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2666:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2667:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Indicate whether Capture/Compare 4 interrupt flag (CC4F) is set (Capture/Compare 4 inte
2668:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SR           CC4IF         LL_TIM_IsActiveFlag_CC4
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 98


2669:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2670:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2671:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2672:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_CC4(TIM_TypeDef *TIMx)
2673:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2674:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_CC4IF) == (TIM_SR_CC4IF)) ? 1UL : 0UL);
2675:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2676:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2677:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2678:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Clear the trigger interrupt flag (TIF).
2679:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SR           TIF           LL_TIM_ClearFlag_TRIG
2680:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2681:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2682:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2683:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_TRIG(TIM_TypeDef *TIMx)
2684:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2685:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_TIF));
2686:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2687:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2688:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2689:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Indicate whether trigger interrupt flag (TIF) is set (trigger interrupt is pending).
2690:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SR           TIF           LL_TIM_IsActiveFlag_TRIG
2691:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2692:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2693:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2694:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_TRIG(TIM_TypeDef *TIMx)
2695:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2696:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_TIF) == (TIM_SR_TIF)) ? 1UL : 0UL);
2697:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2698:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2699:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2700:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Clear the Capture/Compare 1 over-capture interrupt flag (CC1OF).
2701:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SR           CC1OF         LL_TIM_ClearFlag_CC1OVR
2702:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2703:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2704:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2705:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_CC1OVR(TIM_TypeDef *TIMx)
2706:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2707:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_CC1OF));
2708:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2709:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2710:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2711:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Indicate whether Capture/Compare 1 over-capture interrupt flag (CC1OF) is set (Capture/
2712:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SR           CC1OF         LL_TIM_IsActiveFlag_CC1OVR
2713:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2714:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2715:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2716:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_CC1OVR(TIM_TypeDef *TIMx)
2717:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2718:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_CC1OF) == (TIM_SR_CC1OF)) ? 1UL : 0UL);
2719:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2720:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2721:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2722:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Clear the Capture/Compare 2 over-capture interrupt flag (CC2OF).
2723:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SR           CC2OF         LL_TIM_ClearFlag_CC2OVR
2724:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2725:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 99


2726:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2727:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_CC2OVR(TIM_TypeDef *TIMx)
2728:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2729:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_CC2OF));
2730:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2731:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2732:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2733:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Indicate whether Capture/Compare 2 over-capture interrupt flag (CC2OF) is set (Capture/
2734:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SR           CC2OF         LL_TIM_IsActiveFlag_CC2OVR
2735:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2736:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2737:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2738:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_CC2OVR(TIM_TypeDef *TIMx)
2739:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2740:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_CC2OF) == (TIM_SR_CC2OF)) ? 1UL : 0UL);
2741:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2742:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2743:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2744:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Clear the Capture/Compare 3 over-capture interrupt flag (CC3OF).
2745:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SR           CC3OF         LL_TIM_ClearFlag_CC3OVR
2746:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2747:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2748:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2749:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_CC3OVR(TIM_TypeDef *TIMx)
2750:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2751:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_CC3OF));
2752:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2753:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2754:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2755:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Indicate whether Capture/Compare 3 over-capture interrupt flag (CC3OF) is set (Capture/
2756:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SR           CC3OF         LL_TIM_IsActiveFlag_CC3OVR
2757:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2758:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2759:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2760:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_CC3OVR(TIM_TypeDef *TIMx)
2761:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2762:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_CC3OF) == (TIM_SR_CC3OF)) ? 1UL : 0UL);
2763:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2764:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2765:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2766:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Clear the Capture/Compare 4 over-capture interrupt flag (CC4OF).
2767:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SR           CC4OF         LL_TIM_ClearFlag_CC4OVR
2768:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2769:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2770:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2771:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_CC4OVR(TIM_TypeDef *TIMx)
2772:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2773:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_CC4OF));
2774:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2775:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2776:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2777:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Indicate whether Capture/Compare 4 over-capture interrupt flag (CC4OF) is set (Capture/
2778:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll SR           CC4OF         LL_TIM_IsActiveFlag_CC4OVR
2779:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2780:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2781:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2782:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_CC4OVR(TIM_TypeDef *TIMx)
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 100


2783:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2784:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_CC4OF) == (TIM_SR_CC4OF)) ? 1UL : 0UL);
2785:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2786:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2787:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2788:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
2789:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2790:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2791:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EF_IT_Management IT-Management
2792:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
2793:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2794:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2795:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Enable update interrupt (UIE).
2796:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll DIER         UIE           LL_TIM_EnableIT_UPDATE
2797:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2798:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2799:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2800:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableIT_UPDATE(TIM_TypeDef *TIMx)
 966              		.loc 2 2800 22 view .LVU196
 967              	.LBB139:
2801:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2802:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_UIE);
 968              		.loc 2 2802 3 view .LVU197
 969 004a E368     		ldr	r3, [r4, #12]
 970 004c 43F00103 		orr	r3, r3, #1
 971 0050 E360     		str	r3, [r4, #12]
 972              	.LVL72:
 973              		.loc 2 2802 3 is_stmt 0 view .LVU198
 974              	.LBE139:
 975              	.LBE138:
  44:user/src/timers.c ****   LL_TIM_GenerateEvent_UPDATE(US_DELAY_TIMER); // prescaller values is updated at the next update e
 976              		.loc 1 44 3 is_stmt 1 view .LVU199
 977              	.LBB140:
 978              	.LBI140:
2803:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2804:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2805:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2806:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Disable update interrupt (UIE).
2807:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll DIER         UIE           LL_TIM_DisableIT_UPDATE
2808:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2809:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2810:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2811:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableIT_UPDATE(TIM_TypeDef *TIMx)
2812:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2813:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_UIE);
2814:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2815:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2816:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2817:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Indicates whether the update interrupt (UIE) is enabled.
2818:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll DIER         UIE           LL_TIM_IsEnabledIT_UPDATE
2819:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2820:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2821:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2822:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledIT_UPDATE(TIM_TypeDef *TIMx)
2823:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2824:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(TIMx->DIER, TIM_DIER_UIE) == (TIM_DIER_UIE)) ? 1UL : 0UL);
2825:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 101


2826:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2827:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2828:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Enable capture/compare 1 interrupt (CC1IE).
2829:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll DIER         CC1IE         LL_TIM_EnableIT_CC1
2830:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2831:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2832:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2833:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableIT_CC1(TIM_TypeDef *TIMx)
2834:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2835:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_CC1IE);
2836:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2837:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2838:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2839:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Disable capture/compare 1  interrupt (CC1IE).
2840:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll DIER         CC1IE         LL_TIM_DisableIT_CC1
2841:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2842:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2843:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2844:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableIT_CC1(TIM_TypeDef *TIMx)
2845:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2846:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_CC1IE);
2847:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2848:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2849:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2850:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Indicates whether the capture/compare 1 interrupt (CC1IE) is enabled.
2851:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll DIER         CC1IE         LL_TIM_IsEnabledIT_CC1
2852:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2853:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2854:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2855:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledIT_CC1(TIM_TypeDef *TIMx)
2856:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2857:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(TIMx->DIER, TIM_DIER_CC1IE) == (TIM_DIER_CC1IE)) ? 1UL : 0UL);
2858:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2859:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2860:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2861:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Enable capture/compare 2 interrupt (CC2IE).
2862:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll DIER         CC2IE         LL_TIM_EnableIT_CC2
2863:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2864:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2865:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2866:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableIT_CC2(TIM_TypeDef *TIMx)
2867:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2868:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_CC2IE);
2869:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2870:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2871:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2872:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Disable capture/compare 2  interrupt (CC2IE).
2873:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll DIER         CC2IE         LL_TIM_DisableIT_CC2
2874:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2875:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2876:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2877:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableIT_CC2(TIM_TypeDef *TIMx)
2878:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2879:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_CC2IE);
2880:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2881:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2882:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 102


2883:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Indicates whether the capture/compare 2 interrupt (CC2IE) is enabled.
2884:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll DIER         CC2IE         LL_TIM_IsEnabledIT_CC2
2885:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2886:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2887:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2888:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledIT_CC2(TIM_TypeDef *TIMx)
2889:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2890:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(TIMx->DIER, TIM_DIER_CC2IE) == (TIM_DIER_CC2IE)) ? 1UL : 0UL);
2891:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2892:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2893:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2894:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Enable capture/compare 3 interrupt (CC3IE).
2895:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll DIER         CC3IE         LL_TIM_EnableIT_CC3
2896:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2897:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2898:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2899:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableIT_CC3(TIM_TypeDef *TIMx)
2900:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2901:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_CC3IE);
2902:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2903:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2904:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2905:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Disable capture/compare 3  interrupt (CC3IE).
2906:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll DIER         CC3IE         LL_TIM_DisableIT_CC3
2907:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2908:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2909:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2910:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableIT_CC3(TIM_TypeDef *TIMx)
2911:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2912:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_CC3IE);
2913:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2914:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2915:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2916:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Indicates whether the capture/compare 3 interrupt (CC3IE) is enabled.
2917:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll DIER         CC3IE         LL_TIM_IsEnabledIT_CC3
2918:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2919:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2920:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2921:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledIT_CC3(TIM_TypeDef *TIMx)
2922:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2923:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(TIMx->DIER, TIM_DIER_CC3IE) == (TIM_DIER_CC3IE)) ? 1UL : 0UL);
2924:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2925:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2926:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2927:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Enable capture/compare 4 interrupt (CC4IE).
2928:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll DIER         CC4IE         LL_TIM_EnableIT_CC4
2929:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2930:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2931:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2932:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableIT_CC4(TIM_TypeDef *TIMx)
2933:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2934:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_CC4IE);
2935:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2936:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2937:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2938:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Disable capture/compare 4  interrupt (CC4IE).
2939:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll DIER         CC4IE         LL_TIM_DisableIT_CC4
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 103


2940:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2941:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2942:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2943:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableIT_CC4(TIM_TypeDef *TIMx)
2944:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2945:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_CC4IE);
2946:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2947:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2948:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2949:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Indicates whether the capture/compare 4 interrupt (CC4IE) is enabled.
2950:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll DIER         CC4IE         LL_TIM_IsEnabledIT_CC4
2951:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2952:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2953:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2954:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledIT_CC4(TIM_TypeDef *TIMx)
2955:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2956:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(TIMx->DIER, TIM_DIER_CC4IE) == (TIM_DIER_CC4IE)) ? 1UL : 0UL);
2957:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2958:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2959:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2960:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Enable trigger interrupt (TIE).
2961:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll DIER         TIE           LL_TIM_EnableIT_TRIG
2962:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2963:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2964:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2965:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableIT_TRIG(TIM_TypeDef *TIMx)
2966:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2967:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_TIE);
2968:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2969:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2970:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2971:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Disable trigger interrupt (TIE).
2972:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll DIER         TIE           LL_TIM_DisableIT_TRIG
2973:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2974:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
2975:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2976:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableIT_TRIG(TIM_TypeDef *TIMx)
2977:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2978:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_TIE);
2979:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2980:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2981:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2982:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Indicates whether the trigger interrupt (TIE) is enabled.
2983:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll DIER         TIE           LL_TIM_IsEnabledIT_TRIG
2984:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
2985:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2986:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2987:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledIT_TRIG(TIM_TypeDef *TIMx)
2988:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
2989:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(TIMx->DIER, TIM_DIER_TIE) == (TIM_DIER_TIE)) ? 1UL : 0UL);
2990:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
2991:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2992:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
2993:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
2994:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2995:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
2996:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EF_DMA_Management DMA-Management
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 104


2997:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
2998:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
2999:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
3000:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Enable update DMA request (UDE).
3001:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll DIER         UDE           LL_TIM_EnableDMAReq_UPDATE
3002:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
3003:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
3004:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
3005:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableDMAReq_UPDATE(TIM_TypeDef *TIMx)
3006:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
3007:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_UDE);
3008:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
3009:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
3010:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
3011:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Disable update DMA request (UDE).
3012:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll DIER         UDE           LL_TIM_DisableDMAReq_UPDATE
3013:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
3014:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
3015:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
3016:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableDMAReq_UPDATE(TIM_TypeDef *TIMx)
3017:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
3018:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_UDE);
3019:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
3020:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
3021:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
3022:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Indicates whether the update DMA request  (UDE) is enabled.
3023:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll DIER         UDE           LL_TIM_IsEnabledDMAReq_UPDATE
3024:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
3025:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
3026:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
3027:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledDMAReq_UPDATE(TIM_TypeDef *TIMx)
3028:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
3029:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(TIMx->DIER, TIM_DIER_UDE) == (TIM_DIER_UDE)) ? 1UL : 0UL);
3030:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
3031:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
3032:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
3033:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Enable capture/compare 1 DMA request (CC1DE).
3034:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll DIER         CC1DE         LL_TIM_EnableDMAReq_CC1
3035:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
3036:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
3037:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
3038:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableDMAReq_CC1(TIM_TypeDef *TIMx)
3039:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
3040:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_CC1DE);
3041:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
3042:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
3043:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
3044:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Disable capture/compare 1  DMA request (CC1DE).
3045:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll DIER         CC1DE         LL_TIM_DisableDMAReq_CC1
3046:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
3047:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
3048:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
3049:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableDMAReq_CC1(TIM_TypeDef *TIMx)
3050:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
3051:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_CC1DE);
3052:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
3053:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 105


3054:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
3055:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Indicates whether the capture/compare 1 DMA request (CC1DE) is enabled.
3056:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll DIER         CC1DE         LL_TIM_IsEnabledDMAReq_CC1
3057:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
3058:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
3059:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
3060:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledDMAReq_CC1(TIM_TypeDef *TIMx)
3061:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
3062:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(TIMx->DIER, TIM_DIER_CC1DE) == (TIM_DIER_CC1DE)) ? 1UL : 0UL);
3063:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
3064:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
3065:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
3066:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Enable capture/compare 2 DMA request (CC2DE).
3067:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll DIER         CC2DE         LL_TIM_EnableDMAReq_CC2
3068:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
3069:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
3070:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
3071:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableDMAReq_CC2(TIM_TypeDef *TIMx)
3072:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
3073:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_CC2DE);
3074:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
3075:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
3076:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
3077:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Disable capture/compare 2  DMA request (CC2DE).
3078:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll DIER         CC2DE         LL_TIM_DisableDMAReq_CC2
3079:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
3080:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
3081:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
3082:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableDMAReq_CC2(TIM_TypeDef *TIMx)
3083:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
3084:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_CC2DE);
3085:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
3086:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
3087:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
3088:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Indicates whether the capture/compare 2 DMA request (CC2DE) is enabled.
3089:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll DIER         CC2DE         LL_TIM_IsEnabledDMAReq_CC2
3090:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
3091:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
3092:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
3093:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledDMAReq_CC2(TIM_TypeDef *TIMx)
3094:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
3095:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(TIMx->DIER, TIM_DIER_CC2DE) == (TIM_DIER_CC2DE)) ? 1UL : 0UL);
3096:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
3097:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
3098:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
3099:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Enable capture/compare 3 DMA request (CC3DE).
3100:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll DIER         CC3DE         LL_TIM_EnableDMAReq_CC3
3101:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
3102:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
3103:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
3104:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableDMAReq_CC3(TIM_TypeDef *TIMx)
3105:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
3106:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_CC3DE);
3107:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
3108:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
3109:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
3110:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Disable capture/compare 3  DMA request (CC3DE).
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 106


3111:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll DIER         CC3DE         LL_TIM_DisableDMAReq_CC3
3112:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
3113:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
3114:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
3115:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableDMAReq_CC3(TIM_TypeDef *TIMx)
3116:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
3117:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_CC3DE);
3118:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
3119:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
3120:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
3121:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Indicates whether the capture/compare 3 DMA request (CC3DE) is enabled.
3122:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll DIER         CC3DE         LL_TIM_IsEnabledDMAReq_CC3
3123:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
3124:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
3125:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
3126:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledDMAReq_CC3(TIM_TypeDef *TIMx)
3127:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
3128:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(TIMx->DIER, TIM_DIER_CC3DE) == (TIM_DIER_CC3DE)) ? 1UL : 0UL);
3129:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
3130:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
3131:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
3132:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Enable capture/compare 4 DMA request (CC4DE).
3133:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll DIER         CC4DE         LL_TIM_EnableDMAReq_CC4
3134:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
3135:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
3136:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
3137:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableDMAReq_CC4(TIM_TypeDef *TIMx)
3138:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
3139:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_CC4DE);
3140:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
3141:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
3142:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
3143:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Disable capture/compare 4  DMA request (CC4DE).
3144:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll DIER         CC4DE         LL_TIM_DisableDMAReq_CC4
3145:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
3146:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
3147:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
3148:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableDMAReq_CC4(TIM_TypeDef *TIMx)
3149:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
3150:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_CC4DE);
3151:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
3152:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
3153:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
3154:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Indicates whether the capture/compare 4 DMA request (CC4DE) is enabled.
3155:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll DIER         CC4DE         LL_TIM_IsEnabledDMAReq_CC4
3156:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
3157:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
3158:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
3159:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledDMAReq_CC4(TIM_TypeDef *TIMx)
3160:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
3161:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(TIMx->DIER, TIM_DIER_CC4DE) == (TIM_DIER_CC4DE)) ? 1UL : 0UL);
3162:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
3163:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
3164:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
3165:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Enable trigger interrupt (TDE).
3166:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll DIER         TDE           LL_TIM_EnableDMAReq_TRIG
3167:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 107


3168:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
3169:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
3170:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableDMAReq_TRIG(TIM_TypeDef *TIMx)
3171:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
3172:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_TDE);
3173:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
3174:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
3175:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
3176:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Disable trigger interrupt (TDE).
3177:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll DIER         TDE           LL_TIM_DisableDMAReq_TRIG
3178:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
3179:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
3180:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
3181:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableDMAReq_TRIG(TIM_TypeDef *TIMx)
3182:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
3183:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_TDE);
3184:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
3185:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
3186:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
3187:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Indicates whether the trigger interrupt (TDE) is enabled.
3188:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll DIER         TDE           LL_TIM_IsEnabledDMAReq_TRIG
3189:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
3190:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
3191:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
3192:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledDMAReq_TRIG(TIM_TypeDef *TIMx)
3193:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
3194:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   return ((READ_BIT(TIMx->DIER, TIM_DIER_TDE) == (TIM_DIER_TDE)) ? 1UL : 0UL);
3195:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
3196:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
3197:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
3198:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @}
3199:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
3200:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** 
3201:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /** @defgroup TIM_LL_EF_EVENT_Management EVENT-Management
3202:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @{
3203:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
3204:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** /**
3205:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @brief  Generate an update event.
3206:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @rmtoll EGR          UG            LL_TIM_GenerateEvent_UPDATE
3207:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @param  TIMx Timer instance
3208:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   * @retval None
3209:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   */
3210:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_GenerateEvent_UPDATE(TIM_TypeDef *TIMx)
 979              		.loc 2 3210 22 view .LVU200
 980              	.LBB141:
3211:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
3212:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h ****   SET_BIT(TIMx->EGR, TIM_EGR_UG);
 981              		.loc 2 3212 3 view .LVU201
 982 0052 6369     		ldr	r3, [r4, #20]
 983 0054 43F00103 		orr	r3, r3, #1
 984 0058 6361     		str	r3, [r4, #20]
 985              	.LVL73:
 986              		.loc 2 3212 3 is_stmt 0 view .LVU202
 987              	.LBE141:
 988              	.LBE140:
  45:user/src/timers.c ****   _waitUntilUpdate(US_DELAY_TIMER);
 989              		.loc 1 45 3 is_stmt 1 view .LVU203
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 108


 990 005a 2046     		mov	r0, r4
 991 005c FFF7FEFF 		bl	_waitUntilUpdate
 992              	.LVL74:
  46:user/src/timers.c ****   LL_TIM_ClearFlag_UPDATE(US_DELAY_TIMER);
 993              		.loc 1 46 3 view .LVU204
 994              	.LBB142:
 995              	.LBI142:
2573:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 996              		.loc 2 2573 22 view .LVU205
 997              	.LBB143:
2575:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 998              		.loc 2 2575 3 view .LVU206
 999 0060 2561     		str	r5, [r4, #16]
 1000              	.LVL75:
2575:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 1001              		.loc 2 2575 3 is_stmt 0 view .LVU207
 1002              	.LBE143:
 1003              	.LBE142:
  48:user/src/timers.c ****   NVIC_DisableIRQ(TIM6_IRQn);
 1004              		.loc 1 48 3 is_stmt 1 view .LVU208
 1005              	.LBB144:
 1006              	.LBI144:
1547:Drivers/CMSIS/Include/core_cm3.h **** {
 1007              		.loc 3 1547 22 view .LVU209
 1008              	.LBB145:
1549:Drivers/CMSIS/Include/core_cm3.h ****   {
 1009              		.loc 3 1549 3 view .LVU210
1551:Drivers/CMSIS/Include/core_cm3.h ****     __DSB();
 1010              		.loc 3 1551 5 view .LVU211
1551:Drivers/CMSIS/Include/core_cm3.h ****     __DSB();
 1011              		.loc 3 1551 43 is_stmt 0 view .LVU212
 1012 0062 094B     		ldr	r3, .L67+8
 1013 0064 4FF40062 		mov	r2, #2048
 1014 0068 C3F88420 		str	r2, [r3, #132]
1552:Drivers/CMSIS/Include/core_cm3.h ****     __ISB();
 1015              		.loc 3 1552 5 is_stmt 1 view .LVU213
 1016              	.LBB146:
 1017              	.LBI146:
 1018              		.file 4 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 109


  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 110


  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 111


 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 144:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 150:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 157:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 158:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 159:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 160:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 168:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 112


 190:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 201:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 221:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 243:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 113


 247:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 249:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 268:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 271:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 273:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 277:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 282:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 303:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 114


 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 310:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 316:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 325:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 331:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 339:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 343:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 115


 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 370:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 382:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 385:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 388:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 400:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 406:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 407:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 412:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 116


 418:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 426:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 428:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 439:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 457:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 461:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 465:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 117


 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 501:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 503:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 504:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 508:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 511:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 518:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 118


 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 542:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 544:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 548:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 557:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 560:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 572:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 577:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 580:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 582:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 584:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 586:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 119


 589:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 592:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 598:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 600:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 601:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 605:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 606:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 609:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 612:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 626:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 630:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 631:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 636:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 638:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 641:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 120


 646:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 648:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 654:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 661:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 663:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 666:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 671:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 672:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 673:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 675:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 682:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 683:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 689:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 695:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 698:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 702:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 121


 703:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 711:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 731:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 732:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 738:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 751:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 752:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 755:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 122


 760:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 765:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 766:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 767:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 769:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 772:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 775:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 778:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 787:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 796:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 797:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 800:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 806:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 123


 817:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 820:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 829:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 830:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 834:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 835:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 861:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 864:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 865:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 869:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 872:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 873:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 124


 874:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 876:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 1019              		.loc 4 877 27 view .LVU214
 1020              	.LBB147:
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 879:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 1021              		.loc 4 879 3 view .LVU215
 1022              		.syntax unified
 1023              	@ 879 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1024 006c BFF34F8F 		dsb 0xF
 1025              	@ 0 "" 2
 1026              		.thumb
 1027              		.syntax unified
 1028              	.LBE147:
 1029              	.LBE146:
1553:Drivers/CMSIS/Include/core_cm3.h ****   }
 1030              		.loc 3 1553 5 view .LVU216
 1031              	.LBB148:
 1032              	.LBI148:
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1033              		.loc 4 866 27 view .LVU217
 1034              	.LBB149:
 868:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1035              		.loc 4 868 3 view .LVU218
 1036              		.syntax unified
 1037              	@ 868 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1038 0070 BFF36F8F 		isb 0xF
 1039              	@ 0 "" 2
 1040              	.LVL76:
 868:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1041              		.loc 4 868 3 is_stmt 0 view .LVU219
 1042              		.thumb
 1043              		.syntax unified
 1044              	.LBE149:
 1045              	.LBE148:
 1046              	.LBE145:
 1047              	.LBE144:
  49:user/src/timers.c **** }
 1048              		.loc 1 49 1 view .LVU220
 1049 0074 38BD     		pop	{r3, r4, r5, pc}
 1050              	.LVL77:
 1051              	.L66:
  38:user/src/timers.c ****   assert_param(prescaller < 65535);
 1052              		.loc 1 38 3 discriminator 1 view .LVU221
 1053 0076 2621     		movs	r1, #38
 1054 0078 0748     		ldr	r0, .L67+24
 1055              	.LVL78:
  38:user/src/timers.c ****   assert_param(prescaller < 65535);
 1056              		.loc 1 38 3 discriminator 1 view .LVU222
 1057 007a FFF7FEFF 		bl	assert_failed
 1058              	.LVL79:
 1059 007e DCE7     		b	.L64
 1060              	.L68:
 1061              		.align	3
 1062              	.L67:
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 125


 1063 0080 00000000 		.word	0
 1064 0084 80842E41 		.word	1093567616
 1065 0088 00E100E0 		.word	-536813312
 1066 008c 00000000 		.word	clocks
 1067 0090 0000F03F 		.word	1072693248
 1068 0094 00100040 		.word	1073745920
 1069 0098 00000000 		.word	.LC0
 1070              		.cfi_endproc
 1071              	.LFE832:
 1073              		.section	.text.initMisoStopwatch,"ax",%progbits
 1074              		.align	1
 1075              		.global	initMisoStopwatch
 1076              		.syntax unified
 1077              		.thumb
 1078              		.thumb_func
 1079              		.fpu softvfp
 1081              	initMisoStopwatch:
 1082              	.LFB840:
 119:user/src/timers.c **** {
 1083              		.loc 1 119 1 is_stmt 1 view -0
 1084              		.cfi_startproc
 1085              		@ args = 0, pretend = 0, frame = 0
 1086              		@ frame_needed = 0, uses_anonymous_args = 0
 1087 0000 38B5     		push	{r3, r4, r5, lr}
 1088              	.LCFI10:
 1089              		.cfi_def_cfa_offset 16
 1090              		.cfi_offset 3, -16
 1091              		.cfi_offset 4, -12
 1092              		.cfi_offset 5, -8
 1093              		.cfi_offset 14, -4
 122:user/src/timers.c ****   NVIC_ClearPendingIRQ(TIM7_IRQn);
 1094              		.loc 1 122 3 view .LVU224
 1095              	.LVL80:
 1096              	.LBB150:
 1097              	.LBI150:
1600:Drivers/CMSIS/Include/core_cm3.h **** {
 1098              		.loc 3 1600 22 view .LVU225
 1099              	.LBB151:
1602:Drivers/CMSIS/Include/core_cm3.h ****   {
 1100              		.loc 3 1602 3 view .LVU226
 1101              		.loc 3 1604 5 view .LVU227
 1102              		.loc 3 1604 43 is_stmt 0 view .LVU228
 1103 0002 214B     		ldr	r3, .L73+8
 1104 0004 4FF48052 		mov	r2, #4096
 1105 0008 C3F88421 		str	r2, [r3, #388]
 1106              	.LVL81:
 1107              		.loc 3 1604 43 view .LVU229
 1108              	.LBE151:
 1109              	.LBE150:
 124:user/src/timers.c ****   LL_RCC_GetSystemClocksFreq(&clocks);
 1110              		.loc 1 124 3 is_stmt 1 view .LVU230
 1111 000c 1F4C     		ldr	r4, .L73+12
 1112 000e 2046     		mov	r0, r4
 1113 0010 FFF7FEFF 		bl	LL_RCC_GetSystemClocksFreq
 1114              	.LVL82:
 125:user/src/timers.c ****   uint32_t prescaller = DIN_PIN_US_TIMER_TICK * clocks.PCLK1_Frequency / 1e6 - 1;
 1115              		.loc 1 125 3 view .LVU231
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 126


 125:user/src/timers.c ****   uint32_t prescaller = DIN_PIN_US_TIMER_TICK * clocks.PCLK1_Frequency / 1e6 - 1;
 1116              		.loc 1 125 72 is_stmt 0 view .LVU232
 1117 0014 A068     		ldr	r0, [r4, #8]
 1118 0016 FFF7FEFF 		bl	__aeabi_ui2d
 1119              	.LVL83:
 1120 001a 19A3     		adr	r3, .L73
 1121 001c D3E90023 		ldrd	r2, [r3]
 1122 0020 FFF7FEFF 		bl	__aeabi_ddiv
 1123              	.LVL84:
 125:user/src/timers.c ****   uint32_t prescaller = DIN_PIN_US_TIMER_TICK * clocks.PCLK1_Frequency / 1e6 - 1;
 1124              		.loc 1 125 78 view .LVU233
 1125 0024 0022     		movs	r2, #0
 1126 0026 1A4B     		ldr	r3, .L73+16
 1127 0028 FFF7FEFF 		bl	__aeabi_dsub
 1128              	.LVL85:
 125:user/src/timers.c ****   uint32_t prescaller = DIN_PIN_US_TIMER_TICK * clocks.PCLK1_Frequency / 1e6 - 1;
 1129              		.loc 1 125 12 view .LVU234
 1130 002c FFF7FEFF 		bl	__aeabi_d2uiz
 1131              	.LVL86:
 1132 0030 0546     		mov	r5, r0
 1133              	.LVL87:
 126:user/src/timers.c ****   assert_param(prescaller < 65535);
 1134              		.loc 1 126 3 is_stmt 1 view .LVU235
 1135 0032 4FF6FE73 		movw	r3, #65534
 1136 0036 9842     		cmp	r0, r3
 1137 0038 1DD8     		bhi	.L72
 1138              	.LVL88:
 1139              	.L70:
 128:user/src/timers.c ****   LL_TIM_SetPrescaler(DIN_PIN_US_TIMER, prescaller);
 1140              		.loc 1 128 3 view .LVU236
 1141              	.LBB152:
 1142              	.LBI152:
1152:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 1143              		.loc 2 1152 22 view .LVU237
 1144              	.LBB153:
1154:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 1145              		.loc 2 1154 3 view .LVU238
 1146 003a 164C     		ldr	r4, .L73+20
 1147 003c A562     		str	r5, [r4, #40]
 1148              	.LVL89:
1154:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 1149              		.loc 2 1154 3 is_stmt 0 view .LVU239
 1150              	.LBE153:
 1151              	.LBE152:
 129:user/src/timers.c ****   LL_TIM_SetAutoReload(DIN_PIN_US_TIMER, 65535);
 1152              		.loc 1 129 3 is_stmt 1 view .LVU240
 1153              	.LBB154:
 1154              	.LBI154:
1179:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 1155              		.loc 2 1179 22 view .LVU241
 1156              	.LBB155:
1181:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 1157              		.loc 2 1181 3 view .LVU242
 1158 003e 4FF6FF73 		movw	r3, #65535
 1159 0042 E362     		str	r3, [r4, #44]
 1160              	.LVL90:
1181:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 127


 1161              		.loc 2 1181 3 is_stmt 0 view .LVU243
 1162              	.LBE155:
 1163              	.LBE154:
 131:user/src/timers.c ****   LL_TIM_ClearFlag_UPDATE(DIN_PIN_US_TIMER);
 1164              		.loc 1 131 3 is_stmt 1 view .LVU244
 1165              	.LBB156:
 1166              	.LBI156:
2573:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 1167              		.loc 2 2573 22 view .LVU245
 1168              	.LBB157:
2575:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 1169              		.loc 2 2575 3 view .LVU246
 1170 0044 6FF00105 		mvn	r5, #1
 1171              	.LVL91:
2575:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 1172              		.loc 2 2575 3 is_stmt 0 view .LVU247
 1173 0048 2561     		str	r5, [r4, #16]
 1174              	.LVL92:
2575:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 1175              		.loc 2 2575 3 view .LVU248
 1176              	.LBE157:
 1177              	.LBE156:
 132:user/src/timers.c ****   LL_TIM_EnableIT_UPDATE(DIN_PIN_US_TIMER);
 1178              		.loc 1 132 3 is_stmt 1 view .LVU249
 1179              	.LBB158:
 1180              	.LBI158:
2800:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 1181              		.loc 2 2800 22 view .LVU250
 1182              	.LBB159:
2802:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 1183              		.loc 2 2802 3 view .LVU251
 1184 004a E368     		ldr	r3, [r4, #12]
 1185 004c 43F00103 		orr	r3, r3, #1
 1186 0050 E360     		str	r3, [r4, #12]
 1187              	.LVL93:
2802:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 1188              		.loc 2 2802 3 is_stmt 0 view .LVU252
 1189              	.LBE159:
 1190              	.LBE158:
 133:user/src/timers.c ****   LL_TIM_GenerateEvent_UPDATE(DIN_PIN_US_TIMER); // Values are updated at the next update event
 1191              		.loc 1 133 3 is_stmt 1 view .LVU253
 1192              	.LBB160:
 1193              	.LBI160:
3210:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 1194              		.loc 2 3210 22 view .LVU254
 1195              	.LBB161:
 1196              		.loc 2 3212 3 view .LVU255
 1197 0052 6369     		ldr	r3, [r4, #20]
 1198 0054 43F00103 		orr	r3, r3, #1
 1199 0058 6361     		str	r3, [r4, #20]
 1200              	.LVL94:
 1201              		.loc 2 3212 3 is_stmt 0 view .LVU256
 1202              	.LBE161:
 1203              	.LBE160:
 134:user/src/timers.c ****   _waitUntilUpdate(DIN_PIN_US_TIMER);
 1204              		.loc 1 134 3 is_stmt 1 view .LVU257
 1205 005a 2046     		mov	r0, r4
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 128


 1206 005c FFF7FEFF 		bl	_waitUntilUpdate
 1207              	.LVL95:
 135:user/src/timers.c ****   LL_TIM_ClearFlag_UPDATE(DIN_PIN_US_TIMER);
 1208              		.loc 1 135 3 view .LVU258
 1209              	.LBB162:
 1210              	.LBI162:
2573:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** {
 1211              		.loc 2 2573 22 view .LVU259
 1212              	.LBB163:
2575:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 1213              		.loc 2 2575 3 view .LVU260
 1214 0060 2561     		str	r5, [r4, #16]
 1215              	.LVL96:
2575:Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_tim.h **** }
 1216              		.loc 2 2575 3 is_stmt 0 view .LVU261
 1217              	.LBE163:
 1218              	.LBE162:
 137:user/src/timers.c ****   NVIC_DisableIRQ(TIM7_IRQn);
 1219              		.loc 1 137 3 is_stmt 1 view .LVU262
 1220              	.LBB164:
 1221              	.LBI164:
1547:Drivers/CMSIS/Include/core_cm3.h **** {
 1222              		.loc 3 1547 22 view .LVU263
 1223              	.LBB165:
1549:Drivers/CMSIS/Include/core_cm3.h ****   {
 1224              		.loc 3 1549 3 view .LVU264
1551:Drivers/CMSIS/Include/core_cm3.h ****     __DSB();
 1225              		.loc 3 1551 5 view .LVU265
1551:Drivers/CMSIS/Include/core_cm3.h ****     __DSB();
 1226              		.loc 3 1551 43 is_stmt 0 view .LVU266
 1227 0062 094B     		ldr	r3, .L73+8
 1228 0064 4FF48052 		mov	r2, #4096
 1229 0068 C3F88420 		str	r2, [r3, #132]
1552:Drivers/CMSIS/Include/core_cm3.h ****     __ISB();
 1230              		.loc 3 1552 5 is_stmt 1 view .LVU267
 1231              	.LBB166:
 1232              	.LBI166:
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1233              		.loc 4 877 27 view .LVU268
 1234              	.LBB167:
 1235              		.loc 4 879 3 view .LVU269
 1236              		.syntax unified
 1237              	@ 879 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1238 006c BFF34F8F 		dsb 0xF
 1239              	@ 0 "" 2
 1240              		.thumb
 1241              		.syntax unified
 1242              	.LBE167:
 1243              	.LBE166:
1553:Drivers/CMSIS/Include/core_cm3.h ****   }
 1244              		.loc 3 1553 5 view .LVU270
 1245              	.LBB168:
 1246              	.LBI168:
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1247              		.loc 4 866 27 view .LVU271
 1248              	.LBB169:
 868:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 129


 1249              		.loc 4 868 3 view .LVU272
 1250              		.syntax unified
 1251              	@ 868 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1252 0070 BFF36F8F 		isb 0xF
 1253              	@ 0 "" 2
 1254              	.LVL97:
 868:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1255              		.loc 4 868 3 is_stmt 0 view .LVU273
 1256              		.thumb
 1257              		.syntax unified
 1258              	.LBE169:
 1259              	.LBE168:
 1260              	.LBE165:
 1261              	.LBE164:
 138:user/src/timers.c **** }
 1262              		.loc 1 138 1 view .LVU274
 1263 0074 38BD     		pop	{r3, r4, r5, pc}
 1264              	.LVL98:
 1265              	.L72:
 126:user/src/timers.c ****   assert_param(prescaller < 65535);
 1266              		.loc 1 126 3 discriminator 1 view .LVU275
 1267 0076 7E21     		movs	r1, #126
 1268 0078 0748     		ldr	r0, .L73+24
 1269              	.LVL99:
 126:user/src/timers.c ****   assert_param(prescaller < 65535);
 1270              		.loc 1 126 3 discriminator 1 view .LVU276
 1271 007a FFF7FEFF 		bl	assert_failed
 1272              	.LVL100:
 1273 007e DCE7     		b	.L70
 1274              	.L74:
 1275              		.align	3
 1276              	.L73:
 1277 0080 00000000 		.word	0
 1278 0084 80842E41 		.word	1093567616
 1279 0088 00E100E0 		.word	-536813312
 1280 008c 00000000 		.word	clocks
 1281 0090 0000F03F 		.word	1072693248
 1282 0094 00140040 		.word	1073746944
 1283 0098 00000000 		.word	.LC0
 1284              		.cfi_endproc
 1285              	.LFE840:
 1287              		.comm	clocks,16,4
 1288              		.section	.rodata._usToTick.str1.4,"aMS",%progbits,1
 1289              		.align	2
 1290              	.LC0:
 1291 0000 75736572 		.ascii	"user/src/timers.c\000"
 1291      2F737263 
 1291      2F74696D 
 1291      6572732E 
 1291      6300
 1292              		.text
 1293              	.Letext0:
 1294              		.file 5 "Drivers/CMSIS/Device/ST/STM32L1xx/Include/stm32l100xc.h"
 1295              		.file 6 "c:\\users\\domen\\appdata\\roaming\\gnu mcu eclipse\\arm embedded gcc\\8.3.1-1.1\\arm-non
 1296              		.file 7 "c:\\users\\domen\\appdata\\roaming\\gnu mcu eclipse\\arm embedded gcc\\8.3.1-1.1\\arm-non
 1297              		.file 8 "Drivers/CMSIS/Device/ST/STM32L1xx/Include/system_stm32l1xx.h"
 1298              		.file 9 "Drivers/CMSIS/Device/ST/STM32L1xx/Include/stm32l1xx.h"
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 130


 1299              		.file 10 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_rcc.h"
 1300              		.file 11 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_dma.h"
 1301              		.file 12 "Core/Inc/stm32_assert.h"
 1302              		.file 13 "Core/Inc/main.h"
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 131


DEFINED SYMBOLS
                            *ABS*:0000000000000000 timers.c
C:\Users\domen\AppData\Local\Temp\ccEZxL58.s:16     .text.startUsDelayTimer:0000000000000000 $t
C:\Users\domen\AppData\Local\Temp\ccEZxL58.s:24     .text.startUsDelayTimer:0000000000000000 startUsDelayTimer
C:\Users\domen\AppData\Local\Temp\ccEZxL58.s:79     .text.startUsDelayTimer:000000000000001c $d
C:\Users\domen\AppData\Local\Temp\ccEZxL58.s:84     .text.resetUsDelayTimer:0000000000000000 $t
C:\Users\domen\AppData\Local\Temp\ccEZxL58.s:91     .text.resetUsDelayTimer:0000000000000000 resetUsDelayTimer
C:\Users\domen\AppData\Local\Temp\ccEZxL58.s:117    .text.resetUsDelayTimer:0000000000000008 $d
C:\Users\domen\AppData\Local\Temp\ccEZxL58.s:122    .text.isUsDelayTimerStarted:0000000000000000 $t
C:\Users\domen\AppData\Local\Temp\ccEZxL58.s:129    .text.isUsDelayTimerStarted:0000000000000000 isUsDelayTimerStarted
C:\Users\domen\AppData\Local\Temp\ccEZxL58.s:162    .text.isUsDelayTimerStarted:0000000000000014 $d
C:\Users\domen\AppData\Local\Temp\ccEZxL58.s:167    .text.startMisoStopwatch:0000000000000000 $t
C:\Users\domen\AppData\Local\Temp\ccEZxL58.s:174    .text.startMisoStopwatch:0000000000000000 startMisoStopwatch
C:\Users\domen\AppData\Local\Temp\ccEZxL58.s:240    .text.startMisoStopwatch:0000000000000024 $d
C:\Users\domen\AppData\Local\Temp\ccEZxL58.s:245    .text.resetMisoStopwatch:0000000000000000 $t
C:\Users\domen\AppData\Local\Temp\ccEZxL58.s:252    .text.resetMisoStopwatch:0000000000000000 resetMisoStopwatch
C:\Users\domen\AppData\Local\Temp\ccEZxL58.s:278    .text.resetMisoStopwatch:0000000000000008 $d
C:\Users\domen\AppData\Local\Temp\ccEZxL58.s:283    .text._tickToUs:0000000000000000 $t
C:\Users\domen\AppData\Local\Temp\ccEZxL58.s:290    .text._tickToUs:0000000000000000 _tickToUs
C:\Users\domen\AppData\Local\Temp\ccEZxL58.s:308    .text.getUsDelayTimerValue:0000000000000000 $t
C:\Users\domen\AppData\Local\Temp\ccEZxL58.s:315    .text.getUsDelayTimerValue:0000000000000000 getUsDelayTimerValue
C:\Users\domen\AppData\Local\Temp\ccEZxL58.s:350    .text.getUsDelayTimerValue:0000000000000010 $d
C:\Users\domen\AppData\Local\Temp\ccEZxL58.s:355    .text.stopUsDelayTimer:0000000000000000 $t
C:\Users\domen\AppData\Local\Temp\ccEZxL58.s:362    .text.stopUsDelayTimer:0000000000000000 stopUsDelayTimer
C:\Users\domen\AppData\Local\Temp\ccEZxL58.s:397    .text.stopUsDelayTimer:0000000000000014 $d
C:\Users\domen\AppData\Local\Temp\ccEZxL58.s:402    .text.restartUsDelayTimer:0000000000000000 $t
C:\Users\domen\AppData\Local\Temp\ccEZxL58.s:409    .text.restartUsDelayTimer:0000000000000000 restartUsDelayTimer
C:\Users\domen\AppData\Local\Temp\ccEZxL58.s:438    .text.stopMisoStopwatch:0000000000000000 $t
C:\Users\domen\AppData\Local\Temp\ccEZxL58.s:445    .text.stopMisoStopwatch:0000000000000000 stopMisoStopwatch
C:\Users\domen\AppData\Local\Temp\ccEZxL58.s:493    .text.stopMisoStopwatch:0000000000000018 $d
C:\Users\domen\AppData\Local\Temp\ccEZxL58.s:498    .text.restartMisoStopwatch:0000000000000000 $t
C:\Users\domen\AppData\Local\Temp\ccEZxL58.s:505    .text.restartMisoStopwatch:0000000000000000 restartMisoStopwatch
C:\Users\domen\AppData\Local\Temp\ccEZxL58.s:534    .text.getMisoStopwatchTimerValue:0000000000000000 $t
C:\Users\domen\AppData\Local\Temp\ccEZxL58.s:541    .text.getMisoStopwatchTimerValue:0000000000000000 getMisoStopwatchTimerValue
C:\Users\domen\AppData\Local\Temp\ccEZxL58.s:576    .text.getMisoStopwatchTimerValue:0000000000000010 $d
C:\Users\domen\AppData\Local\Temp\ccEZxL58.s:581    .text._usToTick:0000000000000000 $t
C:\Users\domen\AppData\Local\Temp\ccEZxL58.s:588    .text._usToTick:0000000000000000 _usToTick
C:\Users\domen\AppData\Local\Temp\ccEZxL58.s:631    .text._usToTick:000000000000001c $d
C:\Users\domen\AppData\Local\Temp\ccEZxL58.s:636    .text.delayUs:0000000000000000 $t
C:\Users\domen\AppData\Local\Temp\ccEZxL58.s:643    .text.delayUs:0000000000000000 delayUs
C:\Users\domen\AppData\Local\Temp\ccEZxL58.s:773    .text.delayUs:000000000000005c $d
C:\Users\domen\AppData\Local\Temp\ccEZxL58.s:779    .text.setMisoStopwatchTimerValue:0000000000000000 $t
C:\Users\domen\AppData\Local\Temp\ccEZxL58.s:786    .text.setMisoStopwatchTimerValue:0000000000000000 setMisoStopwatchTimerValue
C:\Users\domen\AppData\Local\Temp\ccEZxL58.s:821    .text.setMisoStopwatchTimerValue:0000000000000010 $d
C:\Users\domen\AppData\Local\Temp\ccEZxL58.s:826    .text._waitUntilUpdate:0000000000000000 $t
C:\Users\domen\AppData\Local\Temp\ccEZxL58.s:833    .text._waitUntilUpdate:0000000000000000 _waitUntilUpdate
C:\Users\domen\AppData\Local\Temp\ccEZxL58.s:858    .text.initUsDelayTimer:0000000000000000 $t
C:\Users\domen\AppData\Local\Temp\ccEZxL58.s:865    .text.initUsDelayTimer:0000000000000000 initUsDelayTimer
C:\Users\domen\AppData\Local\Temp\ccEZxL58.s:1063   .text.initUsDelayTimer:0000000000000080 $d
                            *COM*:0000000000000010 clocks
C:\Users\domen\AppData\Local\Temp\ccEZxL58.s:1074   .text.initMisoStopwatch:0000000000000000 $t
C:\Users\domen\AppData\Local\Temp\ccEZxL58.s:1081   .text.initMisoStopwatch:0000000000000000 initMisoStopwatch
C:\Users\domen\AppData\Local\Temp\ccEZxL58.s:1277   .text.initMisoStopwatch:0000000000000080 $d
C:\Users\domen\AppData\Local\Temp\ccEZxL58.s:1289   .rodata._usToTick.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
assert_failed
ARM GAS  C:\Users\domen\AppData\Local\Temp\ccEZxL58.s 			page 132


Error_Handler
__aeabi_ui2d
__aeabi_ddiv
__aeabi_dsub
__aeabi_d2uiz
LL_RCC_GetSystemClocksFreq
